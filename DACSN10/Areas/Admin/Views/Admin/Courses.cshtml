@model List<DACSN10.Models.Course>
@{
    ViewData["Title"] = "Quản lý khóa học";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    var currentPage = ViewBag.Page ?? 1;
    var totalPages = ViewBag.TotalPages ?? 1;
    var status = ViewBag.Status ?? "";
    var search = ViewBag.Search ?? "";
}

@section Breadcrumb {
    <li class="breadcrumb-item active">Quản lý khóa học</li>
}

@section Styles {
    <link href="https://cdn.datatables.net/1.13.0/css/dataTables.bootstrap5.min.css" rel="stylesheet">
    <link href="https://cdn.datatables.net/responsive/2.4.0/css/responsive.bootstrap5.min.css" rel="stylesheet">
    <style>
        .course-image {
            width: 60px;
            height: 40px;
            object-fit: cover;
            border-radius: 8px;
        }

        .course-actions {
            white-space: nowrap;
        }

            .course-actions .btn {
                margin: 0 2px;
                padding: 0.375rem 0.75rem;
            }

        .bulk-actions {
            background: white;
            padding: 1rem;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            margin-bottom: 1rem;
            display: none;
        }

        .filters-card {
            background: white;
            border-radius: 12px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        }

        .course-card {
            background: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            transition: all 0.3s ease;
            margin-bottom: 1.5rem;
        }

            .course-card:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
            }

        .course-thumbnail {
            height: 200px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 3rem;
        }

        .course-content {
            padding: 1.5rem;
        }

        .course-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: #1e293b;
            margin-bottom: 0.75rem;
        }

        .course-stats {
            display: flex;
            justify-content: space-between;
            margin: 1rem 0;
            padding: 1rem;
            background: #f8fafc;
            border-radius: 8px;
        }

        .stat-item {
            text-align: center;
        }

        .stat-number {
            font-size: 1.25rem;
            font-weight: 700;
            color: var(--admin-primary);
        }

        .stat-label {
            font-size: 0.8rem;
            color: var(--admin-secondary);
        }
    </style>
}

<!-- Filters and Search -->
<div class="filters-card" data-aos="fade-up">
    <form method="GET" action="/Admin/Admin/Courses" class="row g-3">
        <div class="col-md-4">
            <label for="search" class="form-label">Tìm kiếm</label>
            <div class="input-group">
                <span class="input-group-text"><i class="fas fa-search"></i></span>
                <input type="text" class="form-control" id="search" name="search"
                       value="@search" placeholder="Tên khóa học, giảng viên...">
            </div>
        </div>

        <div class="col-md-3">
            <label for="status" class="form-label">Trạng thái</label>
            <select class="form-select" id="status" name="status">
                <option value="">Tất cả</option>
                <option value="Active" @(status == "Active" ? "selected" : "")>Hoạt động</option>
                <option value="Pending" @(status == "Pending" ? "selected" : "")>Chờ duyệt</option>
                <option value="Inactive" @(status == "Inactive" ? "selected" : "")>Tạm dừng</option>
                <option value="Rejected" @(status == "Rejected" ? "selected" : "")>Từ chối</option>
            </select>
        </div>

        <div class="col-md-3">
            <label for="teacher" class="form-label">Giảng viên</label>
            <select class="form-select" id="teacher" name="teacher">
                <option value="">Tất cả giảng viên</option>
                <!-- Load teachers dynamically -->
            </select>
        </div>

        <div class="col-md-2 d-flex align-items-end">
            <button type="submit" class="btn btn-admin-primary me-2">
                <i class="fas fa-filter me-1"></i>Lọc
            </button>
            <a href="/Admin/Admin/Courses" class="btn btn-outline-secondary">
                <i class="fas fa-times"></i>
            </a>
        </div>
    </form>
</div>

<!-- Action Bar -->
<div class="d-flex justify-content-between align-items-center mb-4" data-aos="fade-up" data-aos-delay="100">
    <div>
        <h4 class="mb-0">Danh sách khóa học</h4>
        <p class="text-muted mb-0">Quản lý tất cả khóa học trong hệ thống</p>
    </div>

    <div class="d-flex gap-2">
        <div class="dropdown">
            <button class="btn btn-outline-primary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                <i class="fas fa-download me-1"></i>Xuất dữ liệu
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="/Admin/Admin/ExportCourses"><i class="fas fa-file-excel me-2"></i>Excel</a></li>
                <li><a class="dropdown-item" href="#" onclick="printCourses()"><i class="fas fa-print me-2"></i>In danh sách</a></li>
            </ul>
        </div>

        <button class="btn btn-admin-warning" onclick="toggleBulkActions()">
            <i class="fas fa-tasks me-1"></i>Thao tác hàng loạt
        </button>

        <a href="/Admin/Admin/CreateCourse" class="btn btn-admin-primary">
            <i class="fas fa-plus me-1"></i>Thêm khóa học
        </a>
    </div>
</div>

<!-- Bulk Actions Bar -->
<div class="bulk-actions" id="bulkActionsBar">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <span class="fw-bold">Đã chọn: <span id="selectedCount">0</span> khóa học</span>
        </div>
        <div class="d-flex gap-2">
            <button class="btn btn-admin-success btn-sm" onclick="bulkApproveCourses()">
                <i class="fas fa-check me-1"></i>Duyệt tất cả
            </button>
            <button class="btn btn-admin-danger btn-sm" onclick="bulkDeleteCourses()">
                <i class="fas fa-trash me-1"></i>Xóa tất cả
            </button>
            <button class="btn btn-outline-secondary btn-sm" onclick="clearSelection()">
                <i class="fas fa-times me-1"></i>Bỏ chọn
            </button>
        </div>
    </div>
</div>

<!-- Courses Grid/Table -->
<div class="view-toggle mb-3" data-aos="fade-up" data-aos-delay="200">
    <div class="btn-group" role="group">
        <input type="radio" class="btn-check" name="viewMode" id="gridView" checked>
        <label class="btn btn-outline-primary" for="gridView">
            <i class="fas fa-th"></i> Lưới
        </label>

        <input type="radio" class="btn-check" name="viewMode" id="tableView">
        <label class="btn btn-outline-primary" for="tableView">
            <i class="fas fa-list"></i> Bảng
        </label>
    </div>
</div>

<!-- Grid View -->
<div id="coursesGrid" class="row">
    @if (Model != null && Model.Any())
    {
        @foreach (var course in Model)
        {
            <div class="col-xl-4 col-lg-6 col-md-6 mb-4" data-aos="fade-up" data-aos-delay="300">
                <div class="course-card">
                    <div class="position-relative">
                        <div class="course-thumbnail">
                            <i class="fas fa-graduation-cap"></i>
                        </div>

                        <div class="position-absolute top-0 end-0 p-2">
                            <input type="checkbox" class="form-check-input course-checkbox"
                                   value="@course.CourseID" style="transform: scale(1.2);">
                        </div>

                        <div class="position-absolute top-0 start-0 p-2">
                            @switch (course.TrangThai)
                            {
                                case "Active":
                                    <span class="badge bg-success">Hoạt động</span>
                                    break;
                                case "Pending":
                                    <span class="badge bg-warning">Chờ duyệt</span>
                                    break;
                                case "Inactive":
                                    <span class="badge bg-secondary">Tạm dừng</span>
                                    break;
                                case "Rejected":
                                    <span class="badge bg-danger">Từ chối</span>
                                    break;
                                default:
                                    <span class="badge bg-secondary">@course.TrangThai</span>
                                    break;
                            }
                        </div>
                    </div>

                    <div class="course-content">
                        <h5 class="course-title">@course.TenKhoaHoc</h5>

                        <div class="d-flex align-items-center mb-2">
                            <img src="https://ui-avatars.com/api/?name=@Uri.EscapeDataString(course.User?.HoTen ?? "Teacher")&background=667eea&color=fff&bold=true&size=32"
                                 alt="@course.User?.HoTen" class="rounded-circle me-2" width="32" height="32">
                            <span class="text-muted">@(course.User?.HoTen ?? "Chưa có thông tin")</span>
                        </div>

                        <p class="text-muted small mb-3">
                            @(course.MoTa?.Length > 100 ? course.MoTa.Substring(0, 100) + "..." : course.MoTa)
                        </p>

                        <div class="course-stats">
                            <div class="stat-item">
                                <div class="stat-number">@(course.Enrollments?.Count ?? 0)</div>
                                <div class="stat-label">Học viên</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-number">@(course.Lessons?.Count ?? 0)</div>
                                <div class="stat-label">Bài học</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-number">@course.Gia.ToString("N0")₫</div>
                                <div class="stat-label">Giá</div>
                            </div>
                        </div>

                        <div class="d-flex justify-content-between align-items-center">
                            <small class="text-muted">
                                <i class="fas fa-calendar me-1"></i>@course.NgayTao.ToString("dd/MM/yyyy")
                            </small>

                            <div class="btn-group">
                                <a href="/Admin/Admin/CourseDetails/@course.CourseID"
                                   class="btn btn-outline-primary btn-sm" title="Xem chi tiết">
                                    <i class="fas fa-eye"></i>
                                </a>
                                <a href="/Admin/Admin/EditCourse/@course.CourseID"
                                   class="btn btn-outline-warning btn-sm" title="Chỉnh sửa">
                                    <i class="fas fa-edit"></i>
                                </a>
                                @if (course.TrangThai == "Pending")
                                {
                                    <button class="btn btn-outline-success btn-sm"
                                            onclick="approveCourse(@course.CourseID)" title="Duyệt">
                                        <i class="fas fa-check"></i>
                                    </button>
                                }
                                <button class="btn btn-outline-danger btn-sm"
                                        onclick="deleteCourse(@course.CourseID)" title="Xóa">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="col-12">
            <div class="text-center py-5">
                <i class="fas fa-book-open fa-5x text-muted mb-3"></i>
                <h4 class="text-muted">Chưa có khóa học nào</h4>
                <p class="text-muted">Bắt đầu bằng cách tạo khóa học mới</p>
                <a href="/Admin/Admin/CreateCourse" class="btn btn-admin-primary">
                    <i class="fas fa-plus me-2"></i>Tạo khóa học đầu tiên
                </a>
            </div>
        </div>
    }
</div>

<!-- Table View (Hidden by default) -->
<div id="coursesTable" class="admin-table" style="display: none;" data-aos="fade-up" data-aos-delay="400">
    <table class="table table-hover" id="coursesDataTable">
        <thead>
            <tr>
                <th width="40px">
                    <input type="checkbox" class="form-check-input" id="selectAll">
                </th>
                <th>Khóa học</th>
                <th>Giảng viên</th>
                <th>Trạng thái</th>
                <th>Học viên</th>
                <th>Giá</th>
                <th>Ngày tạo</th>
                <th width="120px">Thao tác</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                @foreach (var course in Model)
                {
                    <tr>
                        <td>
                            <input type="checkbox" class="form-check-input course-checkbox" value="@course.CourseID">
                        </td>
                        <td>
                            <div class="d-flex align-items-center">
                                <div class="course-image me-3"
                                     style="width: 50px; height: 35px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                                            border-radius: 6px; display: flex; align-items: center; justify-content: center; color: white;">
                                    <i class="fas fa-graduation-cap"></i>
                                </div>
                                <div>
                                    <div class="fw-semibold">@course.TenKhoaHoc</div>
                                    <small class="text-muted">
                                        @(course.MoTa?.Length > 50 ? course.MoTa.Substring(0, 50) + "..." : course.MoTa)
                                    </small>
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="d-flex align-items-center">
                                <img src="https://ui-avatars.com/api/?name=@Uri.EscapeDataString(course.User?.HoTen ?? "Teacher")&background=667eea&color=fff&bold=true&size=32"
                                     alt="@course.User?.HoTen" class="rounded-circle me-2" width="32" height="32">
                                <span>@(course.User?.HoTen ?? "Chưa có thông tin")</span>
                            </div>
                        </td>
                        <td>
                            @switch (course.TrangThai)
                            {
                                case "Active":
                                    <span class="status-badge status-active">Hoạt động</span>
                                    break;
                                case "Pending":
                                    <span class="status-badge status-pending">Chờ duyệt</span>
                                    break;
                                case "Inactive":
                                    <span class="status-badge status-inactive">Tạm dừng</span>
                                    break;
                                case "Rejected":
                                    <span class="status-badge status-inactive">Từ chối</span>
                                    break;
                                default:
                                    <span class="status-badge">@course.TrangThai</span>
                                    break;
                            }
                        </td>
                        <td>
                            <span class="fw-semibold">@(course.Enrollments?.Count ?? 0)</span>
                        </td>
                        <td>
                            <span class="fw-semibold text-success">@course.Gia.ToString("N0")₫</span>
                        </td>
                        <td>
                            @course.NgayTao.ToString("dd/MM/yyyy")
                        </td>
                        <td>
                            <div class="course-actions">
                                <a href="/Admin/Admin/CourseDetails/@course.CourseID"
                                   class="btn btn-outline-primary btn-sm" title="Xem chi tiết">
                                    <i class="fas fa-eye"></i>
                                </a>
                                <a href="/Admin/Admin/EditCourse/@course.CourseID"
                                   class="btn btn-outline-warning btn-sm" title="Chỉnh sửa">
                                    <i class="fas fa-edit"></i>
                                </a>
                                @if (course.TrangThai == "Pending")
                                {
                                    <button class="btn btn-outline-success btn-sm"
                                            onclick="approveCourse(@course.CourseID)" title="Duyệt">
                                        <i class="fas fa-check"></i>
                                    </button>
                                }
                                <button class="btn btn-outline-danger btn-sm"
                                        onclick="deleteCourse(@course.CourseID)" title="Xóa">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<!-- Pagination -->
@if (totalPages > 1)
{
    <nav aria-label="Course pagination" data-aos="fade-up" data-aos-delay="500">
        <ul class="pagination justify-content-center">
            @if (currentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="/Admin/Admin/Courses?page=@(currentPage - 1)&status=@status&search=@search">
                        <i class="fas fa-chevron-left"></i>
                    </a>
                </li>
            }

            @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" href="/Admin/Admin/Courses?page=@i&status=@status&search=@search">@i</a>
                </li>
            }

            @if (currentPage < totalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="/Admin/Admin/Courses?page=@(currentPage + 1)&status=@status&search=@search">
                        <i class="fas fa-chevron-right"></i>
                    </a>
                </li>
            }
        </ul>
    </nav>
}

@section Scripts {
    <script src="https://cdn.datatables.net/1.13.0/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.0/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://cdn.datatables.net/responsive/2.4.0/js/dataTables.responsive.min.js"></script>
    <script src="https://cdn.datatables.net/responsive/2.4.0/js/responsive.bootstrap5.min.js"></script>

    <script>
        $(document).ready(function() {
            // Initialize DataTable for table view
            $('#coursesDataTable').DataTable({
                responsive: true,
                pageLength: 25,
                order: [[6, 'desc']], // Sort by created date
                columnDefs: [
                    { orderable: false, targets: [0, 7] } // Disable sorting for checkbox and actions
                ],
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.0/i18n/vi.json'
                }
            });

            // View toggle functionality
            $('input[name="viewMode"]').change(function() {
                if ($(this).attr('id') === 'gridView') {
                    $('#coursesGrid').show();
                    $('#coursesTable').hide();
                } else {
                    $('#coursesGrid').hide();
                    $('#coursesTable').show();
                }
            });

            // Select all functionality
            $('#selectAll').change(function() {
                $('.course-checkbox').prop('checked', $(this).prop('checked'));
                updateSelectedCount();
            });

            // Individual checkbox change
            $('.course-checkbox').change(function() {
                updateSelectedCount();

                // Update select all checkbox
                const totalCheckboxes = $('.course-checkbox').length;
                const checkedCheckboxes = $('.course-checkbox:checked').length;
                $('#selectAll').prop('checked', totalCheckboxes === checkedCheckboxes);
            });

            // Load teachers for filter
            loadTeachersFilter();
        });

        function updateSelectedCount() {
            const selectedCount = $('.course-checkbox:checked').length;
            $('#selectedCount').text(selectedCount);

            if (selectedCount > 0) {
                $('#bulkActionsBar').show();
            } else {
                $('#bulkActionsBar').hide();
            }
        }

        function toggleBulkActions() {
            $('#bulkActionsBar').toggle();
        }

        function clearSelection() {
            $('.course-checkbox').prop('checked', false);
            $('#selectAll').prop('checked', false);
            updateSelectedCount();
        }

        function loadTeachersFilter() {
            $.get('/Admin/Admin/GetTeachers', function(data) {
                const teacherSelect = $('#teacher');
                teacherSelect.empty().append('<option value="">Tất cả giảng viên</option>');

                data.forEach(function(teacher) {
                    teacherSelect.append(`<option value="${teacher.id}">${teacher.name}</option>`);
                });
            }).fail(function() {
                console.error('Failed to load teachers');
            });
        }

        function approveCourse(courseId) {
            Swal.fire({
                title: 'Duyệt khóa học?',
                text: 'Bạn có chắc chắn muốn duyệt khóa học này?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#10b981',
                cancelButtonColor: '#6b7280',
                confirmButtonText: 'Duyệt',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    showLoading();

                    $.post('/Admin/Admin/ApproveCourse', {
                        id: courseId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    })
                    .done(function(response) {
                        hideLoading();
                        if (response.success) {
                            showSuccess(response.message);
                            setTimeout(() => location.reload(), 1500);
                        } else {
                            showError(response.message);
                        }
                    })
                    .fail(function() {
                        hideLoading();
                        showError('Có lỗi xảy ra khi duyệt khóa học!');
                    });
                }
            });
        }

        function deleteCourse(courseId) {
            confirmDelete('Xóa khóa học?', 'Bạn có chắc chắn muốn xóa khóa học này? Hành động này không thể hoàn tác!', function() {
                showLoading();

                $.post('/Admin/Admin/DeleteCourse', {
                    id: courseId,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                })
                .done(function(response) {
                    hideLoading();
                    if (response.success) {
                        showSuccess(response.message);
                        setTimeout(() => location.reload(), 1500);
                    } else {
                        showError(response.message);
                    }
                })
                .fail(function() {
                    hideLoading();
                    showError('Có lỗi xảy ra khi xóa khóa học!');
                });
            });
        }

        function bulkApproveCourses() {
            const selectedCourses = $('.course-checkbox:checked').map(function() {
                return $(this).val();
            }).get();

            if (selectedCourses.length === 0) {
                showWarning('Vui lòng chọn ít nhất một khóa học!');
                return;
            }

            Swal.fire({
                title: 'Duyệt hàng loạt?',
                text: `Bạn có chắc chắn muốn duyệt ${selectedCourses.length} khóa học đã chọn?`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#10b981',
                cancelButtonColor: '#6b7280',
                confirmButtonText: 'Duyệt tất cả',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    showLoading();

                    $.post('/Admin/Admin/BulkApproveCourses', {
                        courseIds: selectedCourses,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    })
                    .done(function(response) {
                        hideLoading();
                        if (response.success) {
                            showSuccess(response.message);
                            setTimeout(() => location.reload(), 1500);
                        } else {
                            showError(response.message);
                        }
                    })
                    .fail(function() {
                        hideLoading();
                        showError('Có lỗi xảy ra khi duyệt hàng loạt!');
                    });
                }
            });
        }

        function bulkDeleteCourses() {
            const selectedCourses = $('.course-checkbox:checked').map(function() {
                return $(this).val();
            }).get();

            if (selectedCourses.length === 0) {
                showWarning('Vui lòng chọn ít nhất một khóa học!');
                return;
            }

            confirmDelete('Xóa hàng loạt?',
                `Bạn có chắc chắn muốn xóa ${selectedCourses.length} khóa học đã chọn? Hành động này không thể hoàn tác!`,
                function() {
                    showLoading();

                    $.post('/Admin/Admin/BulkDeleteCourses', {
                        courseIds: selectedCourses,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    })
                    .done(function(response) {
                        hideLoading();
                        if (response.success) {
                            showSuccess(response.message);
                            setTimeout(() => location.reload(), 1500);
                        } else {
                            showError(response.message);
                        }
                    })
                    .fail(function() {
                        hideLoading();
                        showError('Có lỗi xảy ra khi xóa hàng loạt!');
                    });
                }
            );
        }

        function printCourses() {
            window.print();
        }

        // Auto-refresh every 2 minutes
        setInterval(function() {
            // Check for new courses or updates
            console.log('Checking for updates...');
        }, 120000);

        // Add CSRF token
        $.ajaxSetup({
            beforeSend: function(xhr, settings) {
                if (settings.type === 'POST') {
                    xhr.setRequestHeader("RequestVerificationToken",
                        $('input[name="__RequestVerificationToken"]').val());
                }
            }
        });
    </script>

    @Html.AntiForgeryToken()
}