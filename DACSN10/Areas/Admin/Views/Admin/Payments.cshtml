@using DACSN10.Models
@model List<DACSN10.Models.Payment>
@{
    ViewData["Title"] = "Quản lý thanh toán";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <style>
        .payment-filters {
            background: white;
            border-radius: 20px;
            padding: 1.5rem;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
            margin-bottom: 2rem;
        }

        .payment-stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .payment-stat-card {
            background: white;
            border-radius: 20px;
            padding: 1.5rem;
            box-shadow: 0 10px 30px rgba(0,0,0,0.08);
            transition: all 0.3s ease;
            border: 1px solid rgba(0,0,0,0.04);
            position: relative;
            overflow: hidden;
        }

            .payment-stat-card::before {
                content: '';
                position: absolute;
                top: 0;
                right: 0;
                width: 100px;
                height: 100px;
                background: rgba(255,255,255,0.1);
                border-radius: 50%;
                transform: translate(30px, -30px);
            }

            .payment-stat-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 15px 35px rgba(0,0,0,0.12);
            }

        .payment-stat-icon {
            width: 50px;
            height: 50px;
            border-radius: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            color: white;
            margin-bottom: 1rem;
        }

        .payment-table-container {
            background: white;
            border-radius: 20px;
            padding: 1.5rem;
            box-shadow: 0 10px 30px rgba(0,0,0,0.08);
        }

        .payment-status {
            padding: 0.4rem 1rem;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            gap: 0.4rem;
        }

        .status-success {
            background: rgba(16, 185, 129, 0.1);
            color: #10b981;
        }

        .status-pending {
            background: rgba(245, 158, 11, 0.1);
            color: #f59e0b;
        }

        .status-waitingconfirm {
            background: rgba(59, 130, 246, 0.1);
            color: #3b82f6;
        }

        .status-failed {
            background: rgba(239, 68, 68, 0.1);
            color: #ef4444;
        }

        .status-rejected {
            background: rgba(107, 114, 128, 0.1);
            color: #6b7280;
        }

        .payment-method {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.3rem 0.8rem;
            background: #f3f4f6;
            border-radius: 15px;
            font-size: 0.85rem;
        }

        .action-btn {
            padding: 0.4rem 0.8rem;
            border-radius: 10px;
            border: none;
            font-size: 0.85rem;
            font-weight: 500;
            transition: all 0.3s ease;
            margin: 0 0.2rem;
        }

            .action-btn:hover {
                transform: translateY(-2px);
            }

        .btn-approve {
            background: linear-gradient(135deg, #10b981 0%, #059669 100%);
            color: white;
        }

        .btn-reject {
            background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
            color: white;
        }

        .btn-details {
            background: linear-gradient(135deg, #6366f1 0%, #4f46e5 100%);
            color: white;
        }

        .date-range-picker {
            background: white;
            border: 2px solid #e5e7eb;
            border-radius: 10px;
            padding: 0.75rem 1rem;
            font-size: 0.9rem;
        }

        .export-menu {
            position: absolute;
            top: 100%;
            right: 0;
            background: white;
            border-radius: 10px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.15);
            padding: 0.5rem;
            min-width: 200px;
            z-index: 1000;
            display: none;
        }

            .export-menu.show {
                display: block;
            }

        .export-option {
            display: block;
            padding: 0.5rem 1rem;
            border-radius: 8px;
            color: #374151;
            text-decoration: none;
            transition: all 0.2s;
        }

            .export-option:hover {
                background: #f3f4f6;
                color: #667eea;
            }

        .payment-detail-modal .modal-content {
            border-radius: 20px;
            border: none;
        }

        .payment-detail-item {
            padding: 1rem;
            border-bottom: 1px solid #f3f4f6;
        }

        .payment-detail-label {
            font-size: 0.85rem;
            color: #6b7280;
            margin-bottom: 0.25rem;
        }

        .payment-detail-value {
            font-size: 1rem;
            font-weight: 600;
            color: #1f2937;
        }
    </style>
}

<div class="page-header" data-aos="fade-down">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1 class="page-title">
                <i class="fas fa-credit-card me-3"></i>Quản lý thanh toán
            </h1>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Dashboard", "Admin")">Dashboard</a></li>
                    <li class="breadcrumb-item active">Thanh toán</li>
                </ol>
            </nav>
        </div>
        <div class="position-relative">
            <button class="btn btn-gradient-primary" onclick="toggleExportMenu()">
                <i class="fas fa-download me-2"></i>Xuất báo cáo
            </button>
            <div class="export-menu" id="exportMenu">
                <a href="#" class="export-option" onclick="exportPayments('excel')">
                    <i class="fas fa-file-excel me-2 text-success"></i>Excel (.xlsx)
                </a>
                <a href="#" class="export-option" onclick="exportPayments('pdf')">
                    <i class="fas fa-file-pdf me-2 text-danger"></i>PDF
                </a>
                <a href="#" class="export-option" onclick="exportPayments('csv')">
                    <i class="fas fa-file-csv me-2 text-info"></i>CSV
                </a>
            </div>
        </div>
    </div>
</div>

<!-- Payment Statistics -->
<div class="payment-stats-grid" data-aos="fade-up">
    <div class="payment-stat-card">
        <div class="payment-stat-icon" style="background: linear-gradient(135deg, #10b981 0%, #059669 100%);">
            <i class="fas fa-check-circle"></i>
        </div>
        <h4 class="mb-1">Thanh toán thành công</h4>
        <div class="d-flex align-items-baseline gap-2">
            <h2 class="mb-0 text-success">@ViewBag.SuccessCount</h2>
            <span class="text-muted">giao dịch</span>
        </div>
        <div class="mt-2">
            <small class="text-muted">Tổng: @ViewBag.SuccessAmount?.ToString("N0")₫</small>
        </div>
    </div>

    <div class="payment-stat-card">
        <div class="payment-stat-icon" style="background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);">
            <i class="fas fa-clock"></i>
        </div>
        <h4 class="mb-1">Chờ xử lý</h4>
        <div class="d-flex align-items-baseline gap-2">
            <h2 class="mb-0 text-warning">@ViewBag.PendingCount</h2>
            <span class="text-muted">giao dịch</span>
        </div>
        <div class="mt-2">
            <small class="text-muted">Cần xử lý ngay</small>
        </div>
    </div>

    <div class="payment-stat-card">
        <div class="payment-stat-icon" style="background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);">
            <i class="fas fa-hourglass-half"></i>
        </div>
        <h4 class="mb-1">Chờ xác nhận</h4>
        <div class="d-flex align-items-baseline gap-2">
            <h2 class="mb-0 text-info">@ViewBag.WaitingConfirmCount</h2>
            <span class="text-muted">giao dịch</span>
        </div>
        <div class="mt-2">
            <small class="text-muted">Đã chuyển tiền</small>
        </div>
    </div>

    <div class="payment-stat-card">
        <div class="payment-stat-icon" style="background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);">
            <i class="fas fa-times-circle"></i>
        </div>
        <h4 class="mb-1">Thất bại / Từ chối</h4>
        <div class="d-flex align-items-baseline gap-2">
            <h2 class="mb-0 text-danger">@ViewBag.FailedCount</h2>
            <span class="text-muted">giao dịch</span>
        </div>
        <div class="mt-2">
            <small class="text-muted">Cần kiểm tra</small>
        </div>
    </div>
</div>

<!-- Filters -->
<div class="payment-filters" data-aos="fade-up">
    <form method="get" action="@Url.Action("Payments", "Admin")">
        <div class="row g-3">
            <div class="col-md-3">
                <label class="form-label">Tìm kiếm</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-search"></i></span>
                    <input type="text" name="search" class="form-control"
                           placeholder="Tên, email, khóa học..." value="@ViewBag.Search">
                </div>
            </div>
            <div class="col-md-2">
                <label class="form-label">Trạng thái</label>
                <select name="status" class="form-select">
                    <option value="">Tất cả</option>
                    <option value="Success" @(ViewBag.Status == "Success" ? "selected" : "")>Thành công</option>
                    <option value="Pending" @(ViewBag.Status == "Pending" ? "selected" : "")>Chờ xử lý</option>
                    <option value="WaitingConfirm" @(ViewBag.Status == "WaitingConfirm" ? "selected" : "")>Chờ xác nhận</option>
                    <option value="Failed" @(ViewBag.Status == "Failed" ? "selected" : "")>Thất bại</option>
                    <option value="Rejected" @(ViewBag.Status == "Rejected" ? "selected" : "")>Từ chối</option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label">Từ ngày</label>
                <input type="date" name="fromDate" class="form-control date-range-picker"
                       value="@ViewBag.FromDate?.ToString("yyyy-MM-dd")">
            </div>
            <div class="col-md-2">
                <label class="form-label">Đến ngày</label>
                <input type="date" name="toDate" class="form-control date-range-picker"
                       value="@ViewBag.ToDate?.ToString("yyyy-MM-dd")">
            </div>
            <div class="col-md-3">
                <label class="form-label">&nbsp;</label>
                <div class="d-flex gap-2">
                    <button type="submit" class="btn btn-gradient-primary flex-grow-1">
                        <i class="fas fa-filter me-2"></i>Lọc
                    </button>
                    <button type="button" class="btn btn-outline-secondary" onclick="resetFilters()">
                        <i class="fas fa-redo"></i>
                    </button>
                </div>
            </div>
        </div>
    </form>
</div>

<!-- Payments Table -->
<div class="payment-table-container" data-aos="fade-up">
    <div class="table-responsive">
        <table class="table table-hover" id="paymentsTable">
            <thead>
                <tr>
                    <th>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="selectAll">
                        </div>
                    </th>
                    <th>Mã GD</th>
                    <th>Ngày thanh toán</th>
                    <th>Học viên</th>
                    <th>Khóa học</th>
                    <th>Số tiền</th>
                    <th>Phương thức</th>
                    <th>Trạng thái</th>
                    <th>Hành động</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Any())
                {
                    @foreach (var payment in Model)
                    {
                        <tr>
                            <td>
                                <div class="form-check">
                                    <input class="form-check-input payment-checkbox" type="checkbox"
                                           value="@payment.PaymentID">
                                </div>
                            </td>
                            <td>
                                <span class="fw-semibold">#@payment.PaymentID.ToString("D6")</span>
                            </td>
                            <td>
                                <div>@payment.NgayThanhToan.ToString("dd/MM/yyyy")</div>
                                <small class="text-muted">@payment.NgayThanhToan.ToString("HH:mm")</small>
                            </td>
                            <td>
                                <div class="d-flex align-items-center">
                                    <img src="https://ui-avatars.com/api/?name=@Uri.EscapeDataString(payment.User?.HoTen ?? "U")&background=667eea&color=fff&size=32"
                                         alt="Avatar" class="rounded-circle me-2" width="32" height="32">
                                    <div>
                                        <div class="fw-semibold">@payment.User?.HoTen</div>
                                        <small class="text-muted">@payment.User?.Email</small>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="fw-semibold">@payment.Course?.TenKhoaHoc</div>
                                <small class="text-muted">@payment.Course?.Gia.ToString("N0")₫</small>
                            </td>
                            <td>
                                <span class="fw-bold text-primary">@payment.SoTien.ToString("N0")₫</span>
                            </td>
                            <td>
                                <span class="payment-method">
                                    @switch (payment.PhuongThucThanhToan)
                                    {
                                        case "MoMo":
                                            <img src="/images/momo-icon.png" alt="MoMo" width="20">
                                            break;
                                        case "VNPay":
                                            <img src="/images/vnpay-icon.png" alt="VNPay" width="20">
                                            break;
                                        case "Banking":
                                            <i class="fas fa-university"></i>
                                            break;
                                        default:
                                            <i class="fas fa-credit-card"></i>
                                            break;
                                    }
                                    @payment.PhuongThucThanhToan
                                </span>
                            </td>
                            <td>
                                @{
                                    var statusClass = payment.Status.ToString().ToLower();
                                    var statusIcon = "";
                                    var statusText = "";

                                    switch (payment.Status)
                                    {
                                        case PaymentStatus.Success:
                                            statusIcon = "fa-check-circle";
                                            statusText = "Thành công";
                                            break;
                                        case PaymentStatus.Pending:
                                            statusIcon = "fa-clock";
                                            statusText = "Chờ xử lý";
                                            break;
                                        case PaymentStatus.WaitingConfirm:
                                            statusIcon = "fa-hourglass-half";
                                            statusText = "Chờ xác nhận";
                                            break;
                                        case PaymentStatus.Failed:
                                            statusIcon = "fa-times-circle";
                                            statusText = "Thất bại";
                                            break;
                                        case PaymentStatus.Rejected:
                                            statusIcon = "fa-ban";
                                            statusText = "Từ chối";
                                            break;
                                    }
                                }
                                <span class="payment-status status-@statusClass">
                                    <i class="fas @statusIcon"></i>
                                    @statusText
                                </span>
                            </td>
                            <td>
                                <button class="action-btn btn-details"
                                        onclick="viewPaymentDetails(@payment.PaymentID)">
                                    <i class="fas fa-eye"></i>
                                </button>
                                @if (payment.Status == PaymentStatus.Pending || payment.Status == PaymentStatus.WaitingConfirm)
                                {
                                    <button class="action-btn btn-approve"
                                            onclick="approvePayment(@payment.PaymentID)">
                                        <i class="fas fa-check"></i>
                                    </button>
                                    <button class="action-btn btn-reject"
                                            onclick="rejectPayment(@payment.PaymentID)">
                                        <i class="fas fa-times"></i>
                                    </button>
                                }
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="9" class="text-center py-5">
                            <i class="fas fa-receipt fa-3x text-muted mb-3 d-block"></i>
                            <p class="text-muted">Không có giao dịch nào</p>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    @if (ViewBag.TotalPages > 1)
    {
        <nav aria-label="Page navigation" class="mt-4">
            <ul class="pagination justify-content-center">
                <li class="page-item @(ViewBag.Page == 1 ? "disabled" : "")">
                    <a class="page-link" href="?page=@(ViewBag.Page - 1)&status=@ViewBag.Status&search=@ViewBag.Search&fromDate=@ViewBag.FromDate&toDate=@ViewBag.ToDate">
                        <i class="fas fa-chevron-left"></i>
                    </a>
                </li>
                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                {
                    <li class="page-item @(i == ViewBag.Page ? "active" : "")">
                        <a class="page-link" href="?page=@i&status=@ViewBag.Status&search=@ViewBag.Search&fromDate=@ViewBag.FromDate&toDate=@ViewBag.ToDate">@i</a>
                    </li>
                }
                <li class="page-item @(ViewBag.Page == ViewBag.TotalPages ? "disabled" : "")">
                    <a class="page-link" href="?page=@(ViewBag.Page + 1)&status=@ViewBag.Status&search=@ViewBag.Search&fromDate=@ViewBag.FromDate&toDate=@ViewBag.ToDate">
                        <i class="fas fa-chevron-right"></i>
                    </a>
                </li>
            </ul>
        </nav>
    }
</div>

<!-- Bulk Actions -->
<div class="bulk-actions" id="bulkActions">
    <span class="text-muted me-3">
        <span id="selectedCount">0</span> giao dịch được chọn
    </span>
    <button class="btn btn-sm btn-success" onclick="bulkApprovePayments()">
        <i class="fas fa-check me-1"></i>Duyệt hàng loạt
    </button>
    <button class="btn btn-sm btn-danger" onclick="bulkRejectPayments()">
        <i class="fas fa-times me-1"></i>Từ chối hàng loạt
    </button>
    <button class="btn btn-sm btn-secondary" onclick="cancelSelection()">
        <i class="fas fa-times me-1"></i>Hủy
    </button>
</div>

<!-- Payment Detail Modal -->
<div class="modal fade payment-detail-modal" id="paymentDetailModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title">
                    <i class="fas fa-receipt me-2"></i>Chi tiết giao dịch
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="paymentDetailContent">
                <!-- Payment details will be loaded here -->
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>Đóng
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let selectedPayments = [];

        $(document).ready(function() {
            // Initialize DataTable
            $('#paymentsTable').DataTable({
                paging: false,
                searching: false,
                info: false,
                order: [[1, 'desc']],
                language: {
                    emptyTable: "Không có dữ liệu",
                    zeroRecords: "Không tìm thấy kết quả"
                }
            });

            // Handle checkbox changes
            $('.payment-checkbox').change(function() {
                const paymentId = parseInt($(this).val());

                if ($(this).is(':checked')) {
                    if (!selectedPayments.includes(paymentId)) {
                        selectedPayments.push(paymentId);
                    }
                } else {
                    selectedPayments = selectedPayments.filter(id => id !== paymentId);
                }

                updateBulkActions();
            });

            // Select all functionality
            $('#selectAll').change(function() {
                const isChecked = $(this).is(':checked');
                $('.payment-checkbox').prop('checked', isChecked);

                if (isChecked) {
                    selectedPayments = $('.payment-checkbox').map(function() {
                        return parseInt($(this).val());
                    }).get();
                } else {
                    selectedPayments = [];
                }

                updateBulkActions();
            });

            // Initialize date pickers
            $('input[type="date"]').attr('max', new Date().toISOString().split('T')[0]);
        });

        function updateBulkActions() {
            const count = selectedPayments.length;
            $('#selectedCount').text(count);

            if (count > 0) {
                $('#bulkActions').addClass('show');
            } else {
                $('#bulkActions').removeClass('show');
            }
        }

        function cancelSelection() {
            selectedPayments = [];
            $('.payment-checkbox').prop('checked', false);
            $('#selectAll').prop('checked', false);
            updateBulkActions();
        }

        function viewPaymentDetails(paymentId) {
            showLoading();

            $.get('@Url.Action("PaymentDetails", "Admin")', { id: paymentId })
                .done(function(html) {
                    $('#paymentDetailContent').html(html);
                    $('#paymentDetailModal').modal('show');
                })
                .fail(function() {
                    toastr.error('Không thể tải thông tin giao dịch!');
                })
                .always(function() {
                    hideLoading();
                });
        }

        function approvePayment(paymentId) {
            Swal.fire({
                title: 'Xác nhận duyệt',
                text: 'Bạn có chắc chắn muốn duyệt giao dịch này?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#10b981',
                cancelButtonColor: '#6b7280',
                confirmButtonText: 'Duyệt',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('@Url.Action("ApprovePayment", "Admin")', {
                        id: paymentId,
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val()
                    })
                    .done(function(response) {
                        if (response.success) {
                            toastr.success(response.message);
                            setTimeout(() => location.reload(), 1500);
                        } else {
                            toastr.error(response.message);
                        }
                    })
                    .fail(function() {
                        toastr.error('Có lỗi xảy ra!');
                    });
                }
            });
        }

        function rejectPayment(paymentId) {
            Swal.fire({
                title: 'Từ chối giao dịch',
                text: 'Vui lòng nhập lý do từ chối:',
                input: 'textarea',
                inputAttributes: {
                    autocapitalize: 'off',
                    placeholder: 'Nhập lý do từ chối...'
                },
                showCancelButton: true,
                confirmButtonColor: '#ef4444',
                cancelButtonColor: '#6b7280',
                confirmButtonText: 'Từ chối',
                cancelButtonText: 'Hủy',
                inputValidator: (value) => {
                    if (!value) {
                        return 'Vui lòng nhập lý do từ chối!'
                    }
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('@Url.Action("RejectPayment", "Admin")', {
                        id: paymentId,
                        reason: result.value,
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val()
                    })
                    .done(function(response) {
                        if (response.success) {
                            toastr.success(response.message);
                            setTimeout(() => location.reload(), 1500);
                        } else {
                            toastr.error(response.message);
                        }
                    })
                    .fail(function() {
                        toastr.error('Có lỗi xảy ra!');
                    });
                }
            });
        }

        function bulkApprovePayments() {
            if (selectedPayments.length === 0) {
                toastr.warning('Vui lòng chọn ít nhất một giao dịch!');
                return;
            }

            Swal.fire({
                title: 'Xác nhận duyệt hàng loạt',
                text: `Bạn có chắc chắn muốn duyệt ${selectedPayments.length} giao dịch?`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#10b981',
                cancelButtonColor: '#6b7280',
                confirmButtonText: 'Duyệt tất cả',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('@Url.Action("BulkApprovePayments", "Admin")', {
                        paymentIds: selectedPayments,
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val()
                    })
                    .done(function(response) {
                        if (response.success) {
                            toastr.success(response.message);
                            setTimeout(() => location.reload(), 1500);
                        } else {
                            toastr.error(response.message);
                        }
                    })
                    .fail(function() {
                        toastr.error('Có lỗi xảy ra!');
                    });
                }
            });
        }

        function bulkRejectPayments() {
            if (selectedPayments.length === 0) {
                toastr.warning('Vui lòng chọn ít nhất một giao dịch!');
                return;
            }

            Swal.fire({
                title: 'Từ chối hàng loạt',
                text: `Bạn có chắc chắn muốn từ chối ${selectedPayments.length} giao dịch?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#ef4444',
                cancelButtonColor: '#6b7280',
                confirmButtonText: 'Từ chối tất cả',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('@Url.Action("BulkRejectPayments", "Admin")', {
                        paymentIds: selectedPayments,
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val()
                    })
                    .done(function(response) {
                        if (response.success) {
                            toastr.success(response.message);
                            setTimeout(() => location.reload(), 1500);
                        } else {
                            toastr.error(response.message);
                        }
                    })
                    .fail(function() {
                        toastr.error('Có lỗi xảy ra!');
                    });
                }
            });
        }

        function resetFilters() {
            $('input[name="search"]').val('');
            $('select[name="status"]').val('');
            $('input[name="fromDate"]').val('');
            $('input[name="toDate"]').val('');
            $('form').submit();
        }

        function toggleExportMenu() {
            $('#exportMenu').toggleClass('show');
        }

        // Close export menu when clicking outside
        $(document).click(function(e) {
            if (!$(e.target).closest('.position-relative').length) {
                $('#exportMenu').removeClass('show');
            }
        });

        function exportPayments(format) {
            const params = new URLSearchParams({
                status: '@ViewBag.Status',
                search: '@ViewBag.Search',
                fromDate: '@ViewBag.FromDate',
                toDate: '@ViewBag.ToDate',
                format: format
            });

            window.location.href = '@Url.Action("ExportPayments", "Admin")?' + params.toString();
            $('#exportMenu').removeClass('show');
        }

        // Auto refresh for pending payments
        @if (ViewBag.Status == "Pending" || ViewBag.Status == "WaitingConfirm")
        {
            <text>
                setInterval(function() {
                    location.reload();
                }, 60000); // Refresh every minute
            </text>
        }

        // Initialize tooltips
        $('[data-bs-toggle="tooltip"]').tooltip();
    </script>
}

@Html.AntiForgeryToken()