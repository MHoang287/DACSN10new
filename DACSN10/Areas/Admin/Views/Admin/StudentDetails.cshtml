@model DACSN10.Models.User
@{
    ViewData["Title"] = "Chi Tiết Học Viên";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
	<link href="~/css/student-details.css" rel="stylesheet" />
}

<div class="container-fluid" data-aos="fade-up">
    <!-- Student Header -->
    <div class="student-header" data-aos="fade-up" data-aos-delay="100">
        <div class="row align-items-center">
            <div class="col-md-2">
                <div class="student-avatar">
                    <i class="fas fa-user-graduate"></i>
                </div>
            </div>
            <div class="col-md-7">
                <h2 class="mb-2">@Model.HoTen</h2>
                <p class="mb-1"><i class="fas fa-envelope me-2"></i>@Model.Email</p>
                <p class="mb-1"><i class="fas fa-phone me-2"></i>@(Model.PhoneNumber ?? "Chưa cập nhật")</p>
                <p class="mb-0">
                    <i class="fas fa-calendar me-2"></i>
                    Tham gia: @Model.NgayDangKy.ToString("dd/MM/yyyy")
                </p>
            </div>
            <div class="col-md-3 text-end">
                <span class="badge @(Model.TrangThai == "Active" ? "bg-success" : "bg-danger") fs-6 px-3 py-2">
                    @(Model.TrangThai == "Active" ? "Hoạt động" : "Bị khóa")
                </span>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Main Content -->
        <div class="col-lg-8">
            <!-- Statistics -->
            <div class="info-card" data-aos="fade-up" data-aos-delay="200">
                <h5><i class="fas fa-chart-bar me-2"></i>Thống Kê Tổng Quan</h5>
                <div class="row">
                    <div class="col-md-3">
                        <div class="stat-item">
                            <span class="stat-value">@(Model.Enrollments?.Count ?? 0)</span>
                            <div class="stat-label">Khóa Học Đã Đăng Ký</div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stat-item">
                            <span class="stat-value">@(Model.QuizResults?.Count ?? 0)</span>
                            <div class="stat-label">Bài Kiểm Tra Đã Làm</div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stat-item">
                            <span class="stat-value">@(Model.QuizResults?.Any() == true ? Model.QuizResults.Average(q => q.Score).ToString("F1") : "0")%</span>
                            <div class="stat-label">Điểm Trung Bình</div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stat-item">
                            <span class="stat-value">@(Model.Payments?.Where(p => p.Status == DACSN10.Models.PaymentStatus.Success).Sum(p => p.SoTien).ToString("C0") ?? "0")</span>
                            <div class="stat-label">Tổng Chi Tiêu</div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Enrolled Courses -->
            <div class="info-card" data-aos="fade-up" data-aos-delay="300">
                <h5><i class="fas fa-book me-2"></i>Khóa Học Đã Đăng Ký</h5>
                @if (Model.Enrollments?.Any() == true)
                {
                    @foreach (var enrollment in Model.Enrollments.OrderByDescending(e => e.EnrollDate))
                    {
                        <div class="course-item">
                            <div class="row align-items-center">
                                <div class="col-md-1">
                                    <div class="progress-ring">
                                        <svg>
                                            <circle class="bg" cx="30" cy="30" r="25" />
                                            <circle class="progress" cx="30" cy="30" r="25"
                                                    style="stroke-dashoffset: @(157 - (157 * enrollment.Progress / 100))" />
                                        </svg>
                                        <div class="progress-text">@enrollment.Progress.ToString("F0")%</div>
                                    </div>
                                </div>
                                <div class="col-md-7">
                                    <h6 class="mb-1">@enrollment.Course.TenKhoaHoc</h6>
                                    <small class="text-muted">
                                        Đăng ký: @enrollment.EnrollDate.ToString("dd/MM/yyyy") |
                                        Giá: @enrollment.Course.Gia.ToString("C0")
                                    </small>
                                </div>
                                <div class="col-md-2">
                                    <span class="badge @(enrollment.TrangThai == "Active" ? "bg-success" : "bg-warning") badge-status">
                                        @enrollment.TrangThai
                                    </span>
                                </div>
                                <div class="col-md-2">
                                    <a href="@Url.Action("CourseDetails", "Admin", new { id = enrollment.CourseID })"
                                       class="btn btn-sm btn-outline-primary">
                                        <i class="fas fa-eye"></i> Xem
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center py-4 text-muted">
                        <i class="fas fa-book-open fa-3x mb-3"></i>
                        <p>Học viên chưa đăng ký khóa học nào</p>
                    </div>
                }
            </div>

            <!-- Quiz Results -->
            <div class="info-card" data-aos="fade-up" data-aos-delay="400">
                <h5><i class="fas fa-quiz me-2"></i>Kết Quả Bài Kiểm Tra</h5>
                @if (Model.QuizResults?.Any() == true)
                {
                    @foreach (var result in Model.QuizResults.OrderByDescending(r => r.TakenAt).Take(5))
                    {
                        <div class="quiz-result">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h6 class="mb-1">@result.Quiz.Title</h6>
                                    <small class="text-muted">
                                        Khóa học: @result.Quiz.Course.TenKhoaHoc
                                    </small>
                                </div>
                                <div class="text-end">
                                    <div class="quiz-score">@result.Score.ToString("F1")%</div>
                                    <small class="text-muted">@result.TakenAt.ToString("dd/MM/yyyy")</small>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center py-4 text-muted">
                        <i class="fas fa-clipboard-question fa-3x mb-3"></i>
                        <p>Chưa có kết quả bài kiểm tra</p>
                    </div>
                }
            </div>

            <!-- Payment History -->
            <div class="info-card" data-aos="fade-up" data-aos-delay="500">
                <h5><i class="fas fa-credit-card me-2"></i>Lịch Sử Thanh Toán</h5>
                @if (Model.Payments?.Any() == true)
                {
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Ngày</th>
                                    <th>Khóa Học</th>
                                    <th>Số Tiền</th>
                                    <th>Phương Thức</th>
                                    <th>Trạng Thái</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var payment in Model.Payments.OrderByDescending(p => p.NgayThanhToan))
                                {
                                    <tr>
                                        <td>@payment.NgayThanhToan.ToString("dd/MM/yyyy")</td>
                                        <td>@payment.Course.TenKhoaHoc</td>
                                        <td><strong>@payment.SoTien.ToString("C0")</strong></td>
                                        <td>@payment.PhuongThucThanhToan</td>
                                        <td>
                                            <span class="badge @(GetPaymentStatusClass(payment.Status))">
                                                @GetPaymentStatusText(payment.Status)
                                            </span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="text-center py-4 text-muted">
                        <i class="fas fa-receipt fa-3x mb-3"></i>
                        <p>Chưa có giao dịch thanh toán</p>
                    </div>
                }
            </div>
        </div>

        <!-- Sidebar -->
        <div class="col-lg-4">
            <!-- Actions -->
            <div class="info-card actions-card" data-aos="fade-up" data-aos-delay="600">
                <h5><i class="fas fa-tools me-2"></i>Thao Tác</h5>
                <a href="@Url.Action("EditStudent", "Admin", new { id = Model.Id })"
                   class="btn btn-primary action-btn">
                    <i class="fas fa-edit me-2"></i>Chỉnh Sửa Thông Tin
                </a>

                @if (Model.TrangThai == "Active")
                {
                    <button class="btn btn-warning action-btn" onclick="lockStudent('@Model.Id')">
                        <i class="fas fa-lock me-2"></i>Khóa Tài Khoản
                    </button>
                }
                else
                {
                    <button class="btn btn-success action-btn" onclick="lockStudent('@Model.Id')">
                        <i class="fas fa-unlock me-2"></i>Mở Khóa Tài Khoản
                    </button>
                }

                <button class="btn btn-info action-btn" onclick="promoteToTeacher('@Model.Id')">
                    <i class="fas fa-user-tie me-2"></i>Thăng Cấp Giảng Viên
                </button>

                <button class="btn btn-secondary action-btn" onclick="sendMessage('@Model.Id')">
                    <i class="fas fa-envelope me-2"></i>Gửi Tin Nhắn
                </button>

                <button class="btn btn-outline-danger action-btn" onclick="deleteStudent('@Model.Id')">
                    <i class="fas fa-trash me-2"></i>Xóa Tài Khoản
                </button>
            </div>

            <!-- Recent Activity -->
            <div class="info-card" data-aos="fade-up" data-aos-delay="700">
                <h5><i class="fas fa-history me-2"></i>Hoạt Động Gần Đây</h5>
                <div class="activity-timeline">
                    @if (Model.Enrollments?.Any() == true)
                    {
                        @foreach (var enrollment in Model.Enrollments.OrderByDescending(e => e.EnrollDate).Take(5))
                        {
                            <div class="activity-item">
                                <div class="activity-content">
                                    <strong>Đăng ký khóa học</strong>
                                    <p class="mb-1">@enrollment.Course.TenKhoaHoc</p>
                                    <small class="text-muted">@enrollment.EnrollDate.ToString("dd/MM/yyyy HH:mm")</small>
                                </div>
                            </div>
                        }
                    }
                    @if (Model.QuizResults?.Any() == true)
                    {
                        @foreach (var quiz in Model.QuizResults.OrderByDescending(q => q.TakenAt).Take(3))
                        {
                            <div class="activity-item">
                                <div class="activity-content">
                                    <strong>Hoàn thành bài kiểm tra</strong>
                                    <p class="mb-1">@quiz.Quiz.Title - Điểm: @quiz.Score.ToString("F1")%</p>
                                    <small class="text-muted">@quiz.TakenAt.ToString("dd/MM/yyyy HH:mm")</small>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>

            <!-- Quick Stats -->
            <div class="info-card" data-aos="fade-up" data-aos-delay="800">
                <h5><i class="fas fa-tachometer-alt me-2"></i>Thống Kê Nhanh</h5>
                <div class="row text-center">
                    <div class="col-6">
                        <div class="mb-3">
                            <div class="h4 text-primary">@((DateTime.Now - Model.NgayDangKy).Days)</div>
                            <small class="text-muted">Ngày tham gia</small>
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="mb-3">
                            <div class="h4 text-success">@(Model.Enrollments?.Where(e => e.Progress >= 100).Count() ?? 0)</div>
                            <small class="text-muted">Khóa học hoàn thành</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function lockStudent(id) {
            const action = '@Model.TrangThai' === 'Active' ? 'khóa' : 'mở khóa';

            Swal.fire({
                title: `Xác nhận ${action} tài khoản?`,
                text: `Bạn có chắc chắn muốn ${action} tài khoản này?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#667eea',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Xác nhận',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('@Url.Action("LockStudent", "Admin")', {
                        id: id,
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val()
                    }).done(function(response) {
                        if (response.success) {
                            toastr.success(response.message);
                            setTimeout(() => location.reload(), 1500);
                        } else {
                            toastr.error(response.message);
                        }
                    }).fail(function() {
                        toastr.error('Có lỗi xảy ra!');
                    });
                }
            });
        }

        function promoteToTeacher(id) {
            Swal.fire({
                title: 'Thăng cấp giảng viên?',
                text: 'Học viên này sẽ được thăng cấp thành giảng viên.',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#28a745',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Thăng cấp',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('@Url.Action("PromoteToTeacher", "Admin")', {
                        id: id,
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val()
                    }).done(function(response) {
                        if (response.success) {
                            toastr.success(response.message);
                            setTimeout(() => window.location.href = '@Url.Action("Teachers", "Admin")', 2000);
                        } else {
                            toastr.error(response.message);
                        }
                    }).fail(function() {
                        toastr.error('Có lỗi xảy ra!');
                    });
                }
            });
        }

        function sendMessage(id) {
            Swal.fire({
                title: 'Gửi tin nhắn',
                input: 'textarea',
                inputPlaceholder: 'Nhập nội dung tin nhắn...',
                showCancelButton: true,
                confirmButtonText: 'Gửi',
                cancelButtonText: 'Hủy',
                inputValidator: (value) => {
                    if (!value) {
                        return 'Vui lòng nhập nội dung tin nhắn!';
                    }
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    // Implement send message functionality
                    toastr.success('Tin nhắn đã được gửi!');
                }
            });
        }

        function deleteStudent(id) {
            Swal.fire({
                title: 'Xóa tài khoản?',
                text: 'Hành động này không thể hoàn tác!',
                icon: 'error',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('@Url.Action("DeleteStudent", "Admin")', {
                        id: id,
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val()
                    }).done(function(response) {
                        if (response.success) {
                            toastr.success(response.message);
                            setTimeout(() => window.location.href = '@Url.Action("Students", "Admin")', 1500);
                        } else {
                            toastr.error(response.message);
                        }
                    }).fail(function() {
                        toastr.error('Có lỗi xảy ra!');
                    });
                }
            });
        }
    </script>
}

@functions {
    string GetPaymentStatusClass(DACSN10.Models.PaymentStatus status)
    {
        return status switch
        {
            DACSN10.Models.PaymentStatus.Success => "bg-success",
            DACSN10.Models.PaymentStatus.Pending => "bg-warning",
            DACSN10.Models.PaymentStatus.Failed => "bg-danger",
            DACSN10.Models.PaymentStatus.Rejected => "bg-secondary",
            _ => "bg-secondary"
        };
    }

    string GetPaymentStatusText(DACSN10.Models.PaymentStatus status)
    {
        return status switch
        {
            DACSN10.Models.PaymentStatus.Success => "Thành công",
            DACSN10.Models.PaymentStatus.Pending => "Chờ xử lý",
            DACSN10.Models.PaymentStatus.Failed => "Thất bại",
            DACSN10.Models.PaymentStatus.Rejected => "Bị từ chối",
            _ => "Không xác định"
        };
    }
}