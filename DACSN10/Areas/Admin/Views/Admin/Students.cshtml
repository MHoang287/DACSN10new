@model List<DACSN10.Models.User>
@{
    ViewData["Title"] = "Quản lý học viên";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <style>
        .student-filters {
            background: white;
            border-radius: 20px;
            padding: 1.5rem;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
            margin-bottom: 2rem;
        }

        .student-card {
            background: white;
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.08);
            transition: all 0.3s ease;
            overflow: hidden;
            margin-bottom: 1.5rem;
            border: 1px solid rgba(0,0,0,0.04);
        }

            .student-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 15px 35px rgba(0,0,0,0.12);
            }

        .student-avatar {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 2rem;
            font-weight: 600;
            margin: 0 auto 1rem;
        }

        .student-info {
            padding: 1.5rem;
            text-align: center;
        }

        .student-stats {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 1rem;
            padding: 1rem;
            background: #f8f9fa;
            border-radius: 0 0 20px 20px;
        }

        .stat-item {
            text-align: center;
            padding: 0.5rem;
        }

        .stat-value {
            font-size: 1.25rem;
            font-weight: 700;
            color: #667eea;
            margin-bottom: 0.25rem;
        }

        .stat-label {
            font-size: 0.8rem;
            color: #6c757d;
        }

        .status-badge {
            padding: 0.4rem 1rem;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            gap: 0.4rem;
        }

        .status-active {
            background: rgba(16, 185, 129, 0.1);
            color: #10b981;
        }

        .status-locked {
            background: rgba(239, 68, 68, 0.1);
            color: #ef4444;
        }

        .action-buttons {
            display: flex;
            gap: 0.5rem;
            justify-content: center;
            margin-top: 1rem;
        }

        .btn-action {
            padding: 0.5rem 1rem;
            border-radius: 15px;
            border: none;
            font-size: 0.85rem;
            font-weight: 500;
            transition: all 0.3s ease;
            text-decoration: none;
            color: white;
        }

            .btn-action:hover {
                transform: translateY(-2px);
                color: white;
            }

        .btn-view {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }

        .btn-edit {
            background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
        }

        .btn-lock {
            background: linear-gradient(135deg, #f5576c 0%, #f093fb 100%);
        }

        .btn-unlock {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        }

        .btn-promote {
            background: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
        }

        .table-view-toggle {
            position: absolute;
            top: 1rem;
            right: 1rem;
        }

        .view-mode-btn {
            padding: 0.5rem 1rem;
            border: 2px solid #e5e7eb;
            background: white;
            color: #6b7280;
            transition: all 0.3s ease;
        }

            .view-mode-btn.active {
                background: #667eea;
                color: white;
                border-color: #667eea;
            }

            .view-mode-btn:first-child {
                border-radius: 10px 0 0 10px;
            }

            .view-mode-btn:last-child {
                border-radius: 0 10px 10px 0;
            }

        .student-table-container {
            background: white;
            border-radius: 20px;
            padding: 1.5rem;
            box-shadow: 0 10px 30px rgba(0,0,0,0.08);
        }

        .registration-date {
            font-size: 0.85rem;
            color: #6b7280;
        }

        .email-verified {
            color: #10b981;
            font-size: 0.9rem;
        }

        .email-unverified {
            color: #f59e0b;
            font-size: 0.9rem;
        }

        .quick-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .quick-stat-card {
            background: white;
            border-radius: 15px;
            padding: 1.5rem;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
            text-align: center;
            transition: all 0.3s ease;
        }

            .quick-stat-card:hover {
                transform: translateY(-3px);
                box-shadow: 0 8px 20px rgba(0,0,0,0.12);
            }

        .quick-stat-icon {
            width: 50px;
            height: 50px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1rem;
            font-size: 1.5rem;
            color: white;
        }
    </style>
}

<div class="page-header" data-aos="fade-down">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1 class="page-title">
                <i class="fas fa-user-graduate me-3"></i>Quản lý học viên
            </h1>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Dashboard", "Admin")">Dashboard</a></li>
                    <li class="breadcrumb-item active">Học viên</li>
                </ol>
            </nav>
        </div>
        <div>
            <a href="@Url.Action("CreateStudent", "Admin")" class="btn btn-gradient-primary">
                <i class="fas fa-user-plus me-2"></i>Thêm học viên mới
            </a>
        </div>
    </div>
</div>

<!-- Quick Stats -->
<div class="quick-stats" data-aos="fade-up">
    <div class="quick-stat-card">
        <div class="quick-stat-icon" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
            <i class="fas fa-users"></i>
        </div>
        <h3 class="mb-1">@ViewBag.TotalStudents</h3>
        <p class="text-muted mb-0">Tổng học viên</p>
    </div>
    <div class="quick-stat-card">
        <div class="quick-stat-icon" style="background: linear-gradient(135deg, #10b981 0%, #059669 100%);">
            <i class="fas fa-user-check"></i>
        </div>
        <h3 class="mb-1">@ViewBag.ActiveStudents</h3>
        <p class="text-muted mb-0">Đang hoạt động</p>
    </div>
    <div class="quick-stat-card">
        <div class="quick-stat-icon" style="background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);">
            <i class="fas fa-calendar-plus"></i>
        </div>
        <h3 class="mb-1">@ViewBag.NewStudentsThisMonth</h3>
        <p class="text-muted mb-0">Mới tháng này</p>
    </div>
    <div class="quick-stat-card">
        <div class="quick-stat-icon" style="background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);">
            <i class="fas fa-user-lock"></i>
        </div>
        <h3 class="mb-1">@ViewBag.LockedStudents</h3>
        <p class="text-muted mb-0">Đã khóa</p>
    </div>
</div>

<!-- Filters -->
<div class="student-filters" data-aos="fade-up">
    <div class="position-relative">
        <div class="table-view-toggle">
            <div class="btn-group">
                <button class="view-mode-btn active" onclick="switchView('grid')">
                    <i class="fas fa-th"></i>
                </button>
                <button class="view-mode-btn" onclick="switchView('table')">
                    <i class="fas fa-list"></i>
                </button>
            </div>
        </div>

        <form method="get" action="@Url.Action("Students", "Admin")">
            <div class="row g-3">
                <div class="col-md-4">
                    <label class="form-label">Tìm kiếm</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-search"></i></span>
                        <input type="text" name="search" class="form-control"
                               placeholder="Tên, email, số điện thoại..." value="@ViewBag.Search">
                    </div>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Trạng thái</label>
                    <select name="status" class="form-select">
                        <option value="">Tất cả</option>
                        <option value="Active" @(ViewBag.Status == "Active" ? "selected" : "")>Đang hoạt động</option>
                        <option value="Locked" @(ViewBag.Status == "Locked" ? "selected" : "")>Đã khóa</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Sắp xếp</label>
                    <select name="sort" class="form-select">
                        <option value="newest">Mới nhất</option>
                        <option value="oldest">Cũ nhất</option>
                        <option value="name">Tên A-Z</option>
                        <option value="courses">Nhiều khóa học nhất</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="form-label">&nbsp;</label>
                    <button type="submit" class="btn btn-gradient-primary w-100">
                        <i class="fas fa-filter me-2"></i>Lọc
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Students Grid View -->
<div id="gridView">
    @if (Model != null && Model.Any())
    {
        <div class="row">
            @foreach (var student in Model)
            {
                <div class="col-lg-3 col-md-4 col-sm-6" data-aos="zoom-in">
                    <div class="student-card">
                        <div class="form-check position-absolute top-0 end-0 m-3">
                            <input class="form-check-input student-checkbox" type="checkbox"
                                   value="@student.Id" id="student-@student.Id">
                        </div>

                        <div class="student-info">
                            <div class="student-avatar">
                                @(student.HoTen?.Substring(0, 1).ToUpper() ?? "S")
                            </div>
                            <h5 class="mb-1">@student.HoTen</h5>
                            <p class="text-muted small mb-2">@student.Email</p>

                            <div class="status-badge status-@student.TrangThai.ToLower() mb-3">
                                @if (student.TrangThai == "Active")
                                {
                                    <i class="fas fa-check-circle"></i>
                                    <span>Hoạt động</span>
                                }
                                else
                                {
                                    <i class="fas fa-lock"></i>
                                    <span>Đã khóa</span>
                                }
                            </div>

                            <div class="registration-date mb-2">
                                <i class="far fa-calendar me-1"></i>
                                Tham gia: @student.NgayDangKy.ToString("dd/MM/yyyy")
                            </div>

                            @if (student.EmailConfirmed)
                            {
                                <div class="email-verified">
                                    <i class="fas fa-shield-alt me-1"></i>Email đã xác thực
                                </div>
                            }
                            else
                            {
                                <div class="email-unverified">
                                    <i class="fas fa-exclamation-triangle me-1"></i>Chưa xác thực
                                </div>
                            }
                        </div>

                        <div class="student-stats">
                            <div class="stat-item">
                                <div class="stat-value">@(student.Enrollments?.Count ?? 0)</div>
                                <div class="stat-label">Khóa học</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-value">@(student.QuizResults?.Count ?? 0)</div>
                                <div class="stat-label">Bài kiểm tra</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-value">@(student.Payments?.Count ?? 0)</div>
                                <div class="stat-label">Giao dịch</div>
                            </div>
                        </div>

                        <div class="action-buttons p-3">
                            <a href="@Url.Action("StudentDetails", "Admin", new { id = student.Id })"
                               class="btn-action btn-view">
                                <i class="fas fa-eye"></i> Chi tiết
                            </a>
                            <a href="@Url.Action("EditStudent", "Admin", new { id = student.Id })"
                               class="btn-action btn-edit">
                                <i class="fas fa-edit"></i> Sửa
                            </a>
                            @if (student.TrangThai == "Active")
                            {
                                <button onclick="lockStudent('@student.Id')" class="btn-action btn-lock">
                                    <i class="fas fa-lock"></i> Khóa
                                </button>
                            }
                            else
                            {
                                <button onclick="unlockStudent('@student.Id')" class="btn-action btn-unlock">
                                    <i class="fas fa-unlock"></i> Mở
                                </button>
                            }
                            <button onclick="promoteToTeacher('@student.Id')" class="btn-action btn-promote"
                                    title="Nâng cấp thành giảng viên">
                                <i class="fas fa-graduation-cap"></i>
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <i class="fas fa-users fa-4x text-muted mb-3"></i>
            <h4 class="text-muted">Chưa có học viên nào</h4>
            <p class="text-muted">Bắt đầu bằng cách thêm học viên đầu tiên</p>
            <a href="@Url.Action("CreateStudent", "Admin")" class="btn btn-gradient-primary mt-3">
                <i class="fas fa-user-plus me-2"></i>Thêm học viên mới
            </a>
        </div>
    }
</div>

<!-- Students Table View (Hidden by default) -->
<div id="tableView" style="display: none;">
    <div class="student-table-container">
        <div class="table-responsive">
            <table class="table table-hover" id="studentsTable">
                <thead>
                    <tr>
                        <th>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="selectAll">
                            </div>
                        </th>
                        <th>Học viên</th>
                        <th>Email</th>
                        <th>Điện thoại</th>
                        <th>Ngày tham gia</th>
                        <th>Khóa học</th>
                        <th>Trạng thái</th>
                        <th>Hành động</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        @foreach (var student in Model)
                        {
                            <tr>
                                <td>
                                    <div class="form-check">
                                        <input class="form-check-input student-checkbox-table" type="checkbox"
                                               value="@student.Id">
                                    </div>
                                </td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="student-avatar me-3" style="width: 40px; height: 40px; font-size: 1rem;">
                                            @(student.HoTen?.Substring(0, 1).ToUpper() ?? "S")
                                        </div>
                                        <div>
                                            <div class="fw-semibold">@student.HoTen</div>
                                            <small class="text-muted">ID: @student.Id.Substring(0, 8)...</small>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div>@student.Email</div>
                                    @if (student.EmailConfirmed)
                                    {
                                        <small class="text-success"><i class="fas fa-check-circle"></i> Đã xác thực</small>
                                    }
                                    else
                                    {
                                        <small class="text-warning"><i class="fas fa-exclamation-circle"></i> Chưa xác thực</small>
                                    }
                                </td>
                                <td>@(student.PhoneNumber ?? "Chưa có")</td>
                                <td>@student.NgayDangKy.ToString("dd/MM/yyyy")</td>
                                <td>
                                    <span class="badge bg-primary">@(student.Enrollments?.Count ?? 0)</span>
                                </td>
                                <td>
                                    <span class="status-badge status-@student.TrangThai.ToLower()">
                                        @if (student.TrangThai == "Active")
                                        {
                                            <i class="fas fa-check-circle"></i>
                                            <span>Hoạt động</span>
                                        }
                                        else
                                        {
                                            <i class="fas fa-lock"></i>
                                            <span>Đã khóa</span>
                                        }
                                    </span>
                                </td>
                                <td>
                                    <div class="btn-group btn-group-sm">
                                        <a href="@Url.Action("StudentDetails", "Admin", new { id = student.Id })"
                                           class="btn btn-outline-primary" title="Chi tiết">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a href="@Url.Action("EditStudent", "Admin", new { id = student.Id })"
                                           class="btn btn-outline-success" title="Chỉnh sửa">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        @if (student.TrangThai == "Active")
                                        {
                                            <button onclick="lockStudent('@student.Id')" class="btn btn-outline-danger" title="Khóa tài khoản">
                                                <i class="fas fa-lock"></i>
                                            </button>
                                        }
                                        else
                                        {
                                            <button onclick="unlockStudent('@student.Id')" class="btn btn-outline-info" title="Mở khóa">
                                                <i class="fas fa-unlock"></i>
                                            </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Pagination -->
@if (ViewBag.TotalPages > 1)
{
    <nav aria-label="Page navigation" class="mt-4">
        <ul class="pagination justify-content-center">
            <li class="page-item @(ViewBag.Page == 1 ? "disabled" : "")">
                <a class="page-link" href="?page=@(ViewBag.Page - 1)&status=@ViewBag.Status&search=@ViewBag.Search">
                    <i class="fas fa-chevron-left"></i>
                </a>
            </li>
            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <li class="page-item @(i == ViewBag.Page ? "active" : "")">
                    <a class="page-link" href="?page=@i&status=@ViewBag.Status&search=@ViewBag.Search">@i</a>
                </li>
            }
            <li class="page-item @(ViewBag.Page == ViewBag.TotalPages ? "disabled" : "")">
                <a class="page-link" href="?page=@(ViewBag.Page + 1)&status=@ViewBag.Status&search=@ViewBag.Search">
                    <i class="fas fa-chevron-right"></i>
                </a>
            </li>
        </ul>
    </nav>
}

<!-- Bulk Actions -->
<div class="bulk-actions" id="bulkActions">
    <span class="text-muted me-3">
        <span id="selectedCount">0</span> học viên được chọn
    </span>
    <button class="btn btn-sm btn-warning" onclick="bulkLock()">
        <i class="fas fa-lock me-1"></i>Khóa hàng loạt
    </button>
    <button class="btn btn-sm btn-info" onclick="bulkUnlock()">
        <i class="fas fa-unlock me-1"></i>Mở khóa hàng loạt
    </button>
    <button class="btn btn-sm btn-danger" onclick="bulkDelete()">
        <i class="fas fa-trash me-1"></i>Xóa hàng loạt
    </button>
    <button class="btn btn-sm btn-secondary" onclick="cancelSelection()">
        <i class="fas fa-times me-1"></i>Hủy
    </button>
</div>

@section Scripts {
    <script>
        let selectedStudents = [];
        let currentView = 'grid';

        $(document).ready(function() {
            // Initialize DataTable for table view
            $('#studentsTable').DataTable({
                paging: false,
                searching: false,
                info: false,
                order: [[4, 'desc']],
                language: {
                    emptyTable: "Không có dữ liệu",
                    zeroRecords: "Không tìm thấy kết quả"
                }
            });

            // Handle checkbox changes
            $(document).on('change', '.student-checkbox, .student-checkbox-table', function() {
                const studentId = $(this).val();

                if ($(this).is(':checked')) {
                    if (!selectedStudents.includes(studentId)) {
                        selectedStudents.push(studentId);
                    }
                } else {
                    selectedStudents = selectedStudents.filter(id => id !== studentId);
                }

                updateBulkActions();
            });

            // Select all functionality
            $('#selectAll').change(function() {
                const isChecked = $(this).is(':checked');
                $('.student-checkbox-table').prop('checked', isChecked);

                if (isChecked) {
                    selectedStudents = $('.student-checkbox-table').map(function() {
                        return $(this).val();
                    }).get();
                } else {
                    selectedStudents = [];
                }

                updateBulkActions();
            });
        });

        function updateBulkActions() {
            const count = selectedStudents.length;
            $('#selectedCount').text(count);

            if (count > 0) {
                $('#bulkActions').addClass('show');
            } else {
                $('#bulkActions').removeClass('show');
            }
        }

        function cancelSelection() {
            selectedStudents = [];
            $('.student-checkbox, .student-checkbox-table').prop('checked', false);
            $('#selectAll').prop('checked', false);
            updateBulkActions();
        }

        function switchView(view) {
            currentView = view;
            $('.view-mode-btn').removeClass('active');

            if (view === 'grid') {
                $('#gridView').show();
                $('#tableView').hide();
                $('.view-mode-btn:first-child').addClass('active');
            } else {
                $('#gridView').hide();
                $('#tableView').show();
                $('.view-mode-btn:last-child').addClass('active');
            }
        }

        function lockStudent(studentId) {
            Swal.fire({
                title: 'Khóa tài khoản',
                text: 'Bạn có chắc chắn muốn khóa tài khoản học viên này?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#ef4444',
                cancelButtonColor: '#6b7280',
                confirmButtonText: 'Khóa',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('@Url.Action("LockStudent", "Admin")', {
                        id: studentId,
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val()
                    })
                    .done(function(response) {
                        if (response.success) {
                            toastr.success(response.message);
                            setTimeout(() => location.reload(), 1500);
                        } else {
                            toastr.error(response.message);
                        }
                    })
                    .fail(function() {
                        toastr.error('Có lỗi xảy ra!');
                    });
                }
            });
        }

        function unlockStudent(studentId) {
            Swal.fire({
                title: 'Mở khóa tài khoản',
                text: 'Bạn có chắc chắn muốn mở khóa tài khoản học viên này?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3b82f6',
                cancelButtonColor: '#6b7280',
                confirmButtonText: 'Mở khóa',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('@Url.Action("LockStudent", "Admin")', {
                        id: studentId,
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val()
                    })
                    .done(function(response) {
                        if (response.success) {
                            toastr.success(response.message);
                            setTimeout(() => location.reload(), 1500);
                        } else {
                            toastr.error(response.message);
                        }
                    })
                    .fail(function() {
                        toastr.error('Có lỗi xảy ra!');
                    });
                }
            });
        }

        function promoteToTeacher(studentId) {
            Swal.fire({
                title: 'Nâng cấp thành giảng viên',
                text: 'Bạn có chắc chắn muốn nâng cấp học viên này thành giảng viên?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#10b981',
                cancelButtonColor: '#6b7280',
                confirmButtonText: 'Nâng cấp',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('@Url.Action("PromoteToTeacher", "Admin")', {
                        id: studentId,
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val()
                    })
                    .done(function(response) {
                        if (response.success) {
                            toastr.success(response.message);
                            setTimeout(() => location.reload(), 1500);
                        } else {
                            toastr.error(response.message);
                        }
                    })
                    .fail(function() {
                        toastr.error('Có lỗi xảy ra!');
                    });
                }
            });
        }

        function bulkLock() {
            if (selectedStudents.length === 0) {
                toastr.warning('Vui lòng chọn ít nhất một học viên!');
                return;
            }

            Swal.fire({
                title: 'Khóa hàng loạt',
                text: `Bạn có chắc chắn muốn khóa ${selectedStudents.length} tài khoản?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#ef4444',
                cancelButtonColor: '#6b7280',
                confirmButtonText: 'Khóa tất cả',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('@Url.Action("BulkLockUsers", "Admin")', {
                        userIds: selectedStudents,
                        lockStatus: true,
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val()
                    })
                    .done(function(response) {
                        if (response.success) {
                            toastr.success(response.message);
                            setTimeout(() => location.reload(), 1500);
                        } else {
                            toastr.error(response.message);
                        }
                    })
                    .fail(function() {
                        toastr.error('Có lỗi xảy ra!');
                    });
                }
            });
        }

        function bulkUnlock() {
            if (selectedStudents.length === 0) {
                toastr.warning('Vui lòng chọn ít nhất một học viên!');
                return;
            }

            Swal.fire({
                title: 'Mở khóa hàng loạt',
                text: `Bạn có chắc chắn muốn mở khóa ${selectedStudents.length} tài khoản?`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3b82f6',
                cancelButtonColor: '#6b7280',
                confirmButtonText: 'Mở khóa tất cả',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('@Url.Action("BulkLockUsers", "Admin")', {
                        userIds: selectedStudents,
                        lockStatus: false,
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val()
                    })
                    .done(function(response) {
                        if (response.success) {
                            toastr.success(response.message);
                            setTimeout(() => location.reload(), 1500);
                        } else {
                            toastr.error(response.message);
                        }
                    })
                    .fail(function() {
                        toastr.error('Có lỗi xảy ra!');
                    });
                }
            });
        }

        function bulkDelete() {
            if (selectedStudents.length === 0) {
                toastr.warning('Vui lòng chọn ít nhất một học viên!');
                return;
            }

            Swal.fire({
                title: 'Xóa hàng loạt',
                text: `Bạn có chắc chắn muốn xóa ${selectedStudents.length} học viên? Hành động này không thể hoàn tác!`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#ef4444',
                cancelButtonColor: '#6b7280',
                confirmButtonText: 'Xóa tất cả',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Implement bulk delete if needed
                    toastr.info('Tính năng đang phát triển');
                }
            });
        }

        // Export functionality
        function exportStudents(format) {
            const params = new URLSearchParams({
                userType: 'User',
                status: '@ViewBag.Status',
                search: '@ViewBag.Search'
            });

            window.location.href = '@Url.Action("ExportUsers", "Admin")?' + params.toString();
        }
    </script>
}

@Html.AntiForgeryToken()