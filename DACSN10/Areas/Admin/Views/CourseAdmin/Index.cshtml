@model List<DACSN10.Areas.Admin.Models.CourseAdminViewModel>
@{
    ViewData["Title"] = "Quản lý khóa học";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid px-4 animate__animated animate__fadeIn">
    <h1 class="mt-4">Quản lý khóa học</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/Admin">Trang chủ</a></li>
        <li class="breadcrumb-item active">Khóa học</li>
    </ol>

    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <div>
                <i class="fas fa-graduation-cap me-1"></i>
                Danh sách khóa học
            </div>
            <div>
                <a asp-action="Create" class="btn btn-success" data-intro="Nhấp vào đây để thêm khóa học mới">
                    <i class="fas fa-plus-circle"></i> Thêm mới
                </a>
                <a asp-action="Search" class="btn btn-info text-white">
                    <i class="fas fa-search"></i> Tìm kiếm
                </a>
                <a asp-action="Approval" class="btn btn-warning text-dark" data-intro="Xem danh sách khóa học chờ duyệt">
                    <i class="fas fa-clipboard-check"></i> Phê duyệt
                    <span class="badge bg-danger" id="pendingCount"></span>
                </a>
            </div>
        </div>
        <div class="card-body">
            <table id="datatablesCourses" class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Tên khóa học</th>
                        <th>Giá</th>
                        <th>Giảng viên</th>
                        <th>Trạng thái</th>
                        <th>Ngày tạo</th>
                        <th>Thao tác</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.CourseID</td>
                            <td>
                                <a asp-action="Details" asp-route-id="@item.CourseID" class="text-decoration-none">
                                    @item.TenKhoaHoc
                                </a>
                            </td>
                            <td>@item.Gia.ToString("N0") VNĐ</td>
                            <td>@item.TenGiangVien</td>
                            <td>
                                @if (item.TrangThai == "Đang hoạt động")
                                {
                                    <span class="badge bg-success">@item.TrangThai</span>
                                }
                                else if (item.TrangThai == "Chờ duyệt")
                                {
                                    <span class="badge bg-warning text-dark">@item.TrangThai</span>
                                }
                                else if (item.TrangThai == "Bị từ chối")
                                {
                                    <span class="badge bg-danger">@item.TrangThai</span>
                                }
                                else if (item.TrangThai == "Tạm ngưng")
                                {
                                    <span class="badge bg-secondary">@item.TrangThai</span>
                                }
                                else
                                {
                                    <span class="badge bg-info">@item.TrangThai</span>
                                }
                            </td>
                            <td>@item.NgayTao.ToString("dd/MM/yyyy")</td>
                            <td>
                                <div class="btn-group" role="group">
                                    <a asp-action="Edit" asp-route-id="@item.CourseID" class="btn btn-primary btn-sm" data-bs-toggle="tooltip" title="Chỉnh sửa">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a asp-action="Details" asp-route-id="@item.CourseID" class="btn btn-info btn-sm text-white" data-bs-toggle="tooltip" title="Chi tiết">
                                        <i class="fas fa-info-circle"></i>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@item.CourseID" class="btn btn-danger btn-sm" data-bs-toggle="tooltip" title="Xóa">
                                        <i class="fas fa-trash-alt"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Biểu đồ thống kê -->
    <div class="row">
        <div class="col-xl-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-bar me-1"></i>
                    Thống kê khóa học theo trạng thái
                </div>
                <div class="card-body">
                    <canvas id="courseStatusChart" width="100%" height="40"></canvas>
                </div>
            </div>
        </div>
        <div class="col-xl-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-pie me-1"></i>
                    Phân bố giá khóa học
                </div>
                <div class="card-body">
                    <canvas id="coursePriceChart" width="100%" height="40"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Syncfusion Dashboard -->
    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-tachometer-alt me-1"></i>
            Thống kê tổng quan
        </div>
        <div class="card-body">
            <div id="dashboardContainer"></div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // DataTables
            $('#datatablesCourses').DataTable({
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.10.25/i18n/Vietnamese.json'
                },
                responsive: true,
                order: [[5, 'desc']]
            });

            // Tooltips
            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Hiển thị thông báo thành công nếu có
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                    toastr.success('@TempData["SuccessMessage"]', 'Thành công');
            </text>
        }

            // Hiển thị thông báo lỗi nếu có
        @if (TempData["ErrorMessage"] != null)
        {
            <text>
                    toastr.error('@TempData["ErrorMessage"]', 'Lỗi');
            </text>
        }

            // Lấy số liệu thống kê từ model
            const courses = @Html.Raw(Json.Serialize(Model));

            // Đếm số lượng khóa học theo trạng thái
            const statusCounts = {};
            courses.forEach(course => {
                if (statusCounts[course.TrangThai]) {
                    statusCounts[course.TrangThai]++;
                } else {
                    statusCounts[course.TrangThai] = 1;
                }
            });

            // Hiển thị số lượng khóa học chờ duyệt
            const pendingCount = statusCounts["Chờ duyệt"] || 0;
            if (pendingCount > 0) {
                $('#pendingCount').text(pendingCount);
            }

            // Biểu đồ trạng thái khóa học
            var ctxStatus = document.getElementById("courseStatusChart");
            var courseStatusChart = new Chart(ctxStatus, {
                type: 'bar',
                data: {
                    labels: Object.keys(statusCounts),
                    datasets: [{
                        label: "Số lượng",
                        backgroundColor: [
                            "#4e73df", "#1cc88a", "#36b9cc", "#f6c23e", "#e74a3b"
                        ],
                        data: Object.values(statusCounts),
                    }],
                },
                options: {
                    maintainAspectRatio: false,
                    layout: {
                        padding: {
                            left: 10,
                            right: 25,
                            top: 25,
                            bottom: 0
                        }
                    },
                    scales: {
                        xAxes: [{
                            time: {
                                unit: 'status'
                            },
                            gridLines: {
                                display: false,
                                drawBorder: false
                            },
                            ticks: {
                                maxTicksLimit: 6
                            },
                            maxBarThickness: 25,
                        }],
                        yAxes: [{
                            ticks: {
                                min: 0,
                                max: Math.max(...Object.values(statusCounts)) + 1,
                                maxTicksLimit: 5,
                                padding: 10,
                            },
                            gridLines: {
                                color: "rgb(234, 236, 244)",
                                zeroLineColor: "rgb(234, 236, 244)",
                                drawBorder: false,
                                borderDash: [2],
                                zeroLineBorderDash: [2]
                            }
                        }],
                    },
                    legend: {
                        display: false
                    },
                    tooltips: {
                        titleMarginBottom: 10,
                        titleFontColor: '#6e707e',
                        titleFontSize: 14,
                        backgroundColor: "rgb(255,255,255)",
                        bodyFontColor: "#858796",
                        borderColor: '#dddfeb',
                        borderWidth: 1,
                        xPadding: 15,
                        yPadding: 15,
                        displayColors: false,
                        caretPadding: 10,
                    },
                }
            });

            // Chia giá thành các khoảng
            const priceRanges = {
                "Miễn phí": 0,
                "< 500.000 VNĐ": 0,
                "500.000 - 1.000.000 VNĐ": 0,
                "1.000.000 - 2.000.000 VNĐ": 0,
                "> 2.000.000 VNĐ": 0
            };

            courses.forEach(course => {
                const price = course.Gia;
                if (price === 0) {
                    priceRanges["Miễn phí"]++;
                } else if (price < 500000) {
                    priceRanges["< 500.000 VNĐ"]++;
                } else if (price >= 500000 && price < 1000000) {
                    priceRanges["500.000 - 1.000.000 VNĐ"]++;
                } else if (price >= 1000000 && price < 2000000) {
                    priceRanges["1.000.000 - 2.000.000 VNĐ"]++;
                } else {
                    priceRanges["> 2.000.000 VNĐ"]++;
                }
            });

            // Biểu đồ phân bố giá
            var ctxPrice = document.getElementById("coursePriceChart");
            var coursePriceChart = new Chart(ctxPrice, {
                type: 'pie',
                data: {
                    labels: Object.keys(priceRanges),
                    datasets: [{
                        data: Object.values(priceRanges),
                        backgroundColor: ['#4e73df', '#1cc88a', '#36b9cc', '#f6c23e', '#e74a3b'],
                        hoverBackgroundColor: ['#2e59d9', '#17a673', '#2c9faf', '#f4b619', '#e02d1b'],
                        hoverBorderColor: "rgba(234, 236, 244, 1)",
                    }],
                },
                options: {
                    maintainAspectRatio: false,
                    tooltips: {
                        backgroundColor: "rgb(255,255,255)",
                        bodyFontColor: "#858796",
                        borderColor: '#dddfeb',
                        borderWidth: 1,
                        xPadding: 15,
                        yPadding: 15,
                        displayColors: false,
                        caretPadding: 10,
                    },
                    legend: {
                        display: true,
                        position: 'bottom'
                    },
                    cutoutPercentage: 80,
                },
            });

            // Syncfusion Dashboard
            const dashboardData = [
                { name: "Tổng khóa học", value: courses.length, icon: "fa-book" },
                { name: "Khóa học đang hoạt động", value: statusCounts["Đang hoạt động"] || 0, icon: "fa-check-circle" },
                { name: "Khóa học chờ duyệt", value: pendingCount, icon: "fa-clock" },
                { name: "Khóa học miễn phí", value: priceRanges["Miễn phí"], icon: "fa-gift" }
            ];

            // Initialize Syncfusion card widget
            $("#dashboardContainer").ejDashboardLayout({
                allowDragging: false,
                columns: 4,
                cellSpacing: [10, 10],
                panels: [
                    { row: 0, col: 0, sizeX: 1, sizeY: 1, content: createCardContent(dashboardData[0]) },
                    { row: 0, col: 1, sizeX: 1, sizeY: 1, content: createCardContent(dashboardData[1]) },
                    { row: 0, col: 2, sizeX: 1, sizeY: 1, content: createCardContent(dashboardData[2]) },
                    { row: 0, col: 3, sizeX: 1, sizeY: 1, content: createCardContent(dashboardData[3]) }
                ]
            });

            function createCardContent(data) {
                return `
                    <div class="card border-left-primary shadow h-100 py-2">
                        <div class="card-body">
                            <div class="row no-gutters align-items-center">
                                <div class="col mr-2">
                                    <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                        ${data.name}</div>
                                    <div class="h5 mb-0 font-weight-bold text-gray-800">${data.value}</div>
                                </div>
                                <div class="col-auto">
                                    <i class="fas ${data.icon} fa-2x text-gray-300"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            }

            // Hướng dẫn sử dụng với Intro.js
            function startTutorial() {
                introJs().setOptions({
                    steps: [
                        {
                            element: document.querySelector('.card-header'),
                            intro: 'Đây là phần quản lý khóa học.'
                        },
                        {
                            element: document.querySelector('a[asp-action="Create"]'),
                            intro: 'Nhấn vào đây để thêm khóa học mới.'
                        },
                        {
                            element: document.querySelector('a[asp-action="Approval"]'),
                            intro: 'Nhấn vào đây để xem các khóa học chờ phê duyệt.'
                        },
                        {
                            element: document.querySelector('#datatablesCourses'),
                            intro: 'Bảng này hiển thị tất cả các khóa học hiện có.'
                        }
                    ],
                    prevLabel: 'Trước',
                    nextLabel: 'Tiếp',
                    skipLabel: 'Bỏ qua',
                    doneLabel: 'Xong'
                }).start();
            }

            // Thêm nút hướng dẫn
            $('<button class="btn btn-sm btn-outline-primary ms-2" onclick="startTutorial()"><i class="fas fa-question-circle"></i> Hướng dẫn</button>')
                .appendTo('.card-header div:first');
        });
    </script>
}