@model DACSN10.Areas.Admin.Models.CourseSearchViewModel
@{
    ViewData["Title"] = "Tìm kiếm khóa học";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid px-4 animate__animated animate__fadeIn">
    <h1 class="mt-4">Tìm kiếm khóa học</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/Admin">Trang chủ</a></li>
        <li class="breadcrumb-item"><a asp-action="Index">Khóa học</a></li>
        <li class="breadcrumb-item active">Tìm kiếm</li>
    </ol>

    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-search me-1"></i>
            Tìm kiếm khóa học
        </div>
        <div class="card-body">
            <form asp-action="Search" method="post" id="searchForm">
                <!-- Bộ lọc tìm kiếm -->
                <div class="row mb-4">
                    <div class="col-md-8">
                        <div class="form-outline mb-3">
                            <label asp-for="Keyword" class="form-label">Từ khóa</label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fas fa-search"></i>
                                </span>
                                <input asp-for="Keyword" class="form-control" placeholder="Nhập tên hoặc mô tả khóa học..." />
                            </div>
                            <small class="form-text text-muted">Tìm kiếm theo tên hoặc mô tả khóa học</small>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-outline mb-3">
                            <label asp-for="Status" class="form-label">Trạng thái</label>
                            <select asp-for="Status" class="form-select">
                                <option value="">-- Tất cả trạng thái --</option>
                                <option value="Đang hoạt động">Đang hoạt động</option>
                                <option value="Chờ duyệt">Chờ duyệt</option>
                                <option value="Tạm ngưng">Tạm ngưng</option>
                                <option value="Bị từ chối">Bị từ chối</option>
                            </select>
                        </div>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="form-outline mb-3">
                            <label class="form-label">Lọc theo danh mục</label>
                            <div class="categories-container border rounded p-2" style="max-height: 200px; overflow-y: auto;">
                                @if (Model.AvailableCategories != null)
                                {
                                    foreach (var category in Model.AvailableCategories)
                                    {
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" name="CategoryFilter" value="@category.CategoryID" 
                                                id="category_@category.CategoryID" 
                                                @(Model.CategoryFilter != null && Model.CategoryFilter.Contains(category.CategoryID) ? "checked" : "") />
                                            <label class="form-check-label" for="category_@category.CategoryID">
                                                @category.Name
                                            </label>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-outline mb-3">
                                    <label asp-for="MinPrice" class="form-label">Giá tối thiểu</label>
                                    <input asp-for="MinPrice" class="form-control" type="number" min="0" step="10000" />
                                </div>
                            </div>
                            
                            <div class="col-md-6">
                                <div class="form-outline mb-3">
                                    <label asp-for="MaxPrice" class="form-label">Giá tối đa</label>
                                    <input asp-for="MaxPrice" class="form-control" type="number" min="0" step="10000" />
                                </div>
                            </div>
                        </div>
                        
                        <div class="form-outline mb-3">
                            <label asp-for="TeacherID" class="form-label">Giảng viên</label>
                            <select asp-for="TeacherID" class="form-select">
                                <option value="">-- Tất cả giảng viên --</option>
                                @if (Model.AvailableTeachers != null)
                                {
                                    foreach (var teacher in Model.AvailableTeachers)
                                    {
                                        <option value="@teacher.Id">@teacher.HoTen</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                </div>

                <div class="d-flex justify-content-between">
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-arrow-left me-1"></i> Trở về danh sách
                    </a>
                    <div>
                        <button type="reset" class="btn btn-outline-secondary me-2">
                            <i class="fas fa-undo me-1"></i> Xóa bộ lọc
                        </button>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search me-1"></i> Tìm kiếm
                        </button>
                    </div>
                </div>
            </form>
            
            <!-- Kết quả tìm kiếm -->
            @if (Model.SearchResults != null)
            {
                <hr />
                <h5>Kết quả tìm kiếm (@Model.SearchResults.Count khóa học)</h5>
                
                @if (Model.SearchResults.Any())
                {
                    <div class="table-responsive mt-3">
                        <table id="searchResultsTable" class="table table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Tên khóa học</th>
                                    <th>Giá</th>
                                    <th>Giảng viên</th>
                                    <th>Trạng thái</th>
                                    <th>Ngày tạo</th>
                                    <th>Thao tác</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.SearchResults)
                                {
                                    <tr>
                                        <td>@item.CourseID</td>
                                        <td>
                                            <a asp-action="Details" asp-route-id="@item.CourseID" class="text-decoration-none">
                                                @item.TenKhoaHoc
                                            </a>
                                        </td>
                                        <td>@item.Gia.ToString("N0") VNĐ</td>
                                        <td>@item.TenGiangVien</td>
                                        <td>
                                            @if (item.TrangThai == "Đang hoạt động")
                                            {
                                                <span class="badge bg-success">@item.TrangThai</span>
                                            }
                                            else if (item.TrangThai == "Chờ duyệt")
                                            {
                                                <span class="badge bg-warning text-dark">@item.TrangThai</span>
                                            }
                                            else if (item.TrangThai == "Bị từ chối")
                                            {
                                                <span class="badge bg-danger">@item.TrangThai</span>
                                            }
                                            else if (item.TrangThai == "Tạm ngưng")
                                            {
                                                <span class="badge bg-secondary">@item.TrangThai</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-info">@item.TrangThai</span>
                                            }
                                        </td>
                                        <td>@item.NgayTao.ToString("dd/MM/yyyy")</td>
                                        <td>
                                            <div class="btn-group" role="group">
                                                <a asp-action="Edit" asp-route-id="@item.CourseID" class="btn btn-primary btn-sm" data-bs-toggle="tooltip" title="Chỉnh sửa">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <a asp-action="Details" asp-route-id="@item.CourseID" class="btn btn-info btn-sm text-white" data-bs-toggle="tooltip" title="Chi tiết">
                                                    <i class="fas fa-info-circle"></i>
                                                </a>
                                                <a asp-action="Delete" asp-route-id="@item.CourseID" class="btn btn-danger btn-sm" data-bs-toggle="tooltip" title="Xóa">
                                                    <i class="fas fa-trash-alt"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="alert alert-info mt-3">
                        <i class="fas fa-info-circle me-2"></i> Không tìm thấy khóa học nào phù hợp với điều kiện tìm kiếm.
                    </div>
                }
                
                @if (Model.SearchResults.Count > 0)
                {
                    <div class="row mt-4">
                        <div class="col-xl-6">
                            <div class="card">
                                <div class="card-header bg-light">
                                    <i class="fas fa-chart-bar me-1"></i>
                                    Phân bố theo trạng thái
                                </div>
                                <div class="card-body">
                                    <canvas id="statusChart" width="100%" height="200"></canvas>
                                </div>
                            </div>
                        </div>
                        <div class="col-xl-6">
                            <div class="card">
                                <div class="card-header bg-light">
                                    <i class="fas fa-chart-pie me-1"></i>
                                    Phân bố theo giá
                                </div>
                                <div class="card-body">
                                    <canvas id="priceChart" width="100%" height="200"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Define startTutorial function in the global scope
        function startTutorial() {
            introJs().setOptions({
                steps: [
                    {
                        element: document.querySelector('[asp-for="Keyword"]'),
                        intro: 'Nhập từ khóa tìm kiếm tại đây. Có thể tìm theo tên hoặc mô tả khóa học.'
                    },
                    {
                        element: document.querySelector('.categories-container'),
                        intro: 'Chọn một hoặc nhiều danh mục để lọc kết quả.'
                    },
                    {
                        element: document.querySelector('[asp-for="MinPrice"]').parentNode,
                        intro: 'Thiết lập khoảng giá cho khóa học.'
                    },
                    {
                        element: document.querySelector('button[type="submit"]'),
                        intro: 'Nhấn nút này để bắt đầu tìm kiếm.'
                    }
                ],
                prevLabel: 'Trước',
                nextLabel: 'Tiếp',
                skipLabel: 'Bỏ qua',
                doneLabel: 'Xong'
            }).start();
        }
        
        $(document).ready(function () {
            // jQuery UI Slider cho khoảng giá
            const minPrice = @(Model.MinPrice.HasValue ? Model.MinPrice.Value : 0);
            const maxPrice = @(Model.MaxPrice.HasValue ? Model.MaxPrice.Value : 5000000);
            
            $("#price-range").slider({
                range: true,
                min: 0,
                max: 5000000,
                step: 100000,
                values: [minPrice, maxPrice],
                slide: function(event, ui) {
                    $("#MinPrice").val(ui.values[0]);
                    $("#MaxPrice").val(ui.values[1]);
                    $("#price-label").text(ui.values[0].toLocaleString('vi-VN') + " VNĐ - " + ui.values[1].toLocaleString('vi-VN') + " VNĐ");
                }
            });
            
            // DataTables
            $('#searchResultsTable').DataTable({
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.10.25/i18n/Vietnamese.json'
                },
                responsive: true,
                order: [[5, 'desc']]
            });

            // Tooltips
            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Hiển thị thông báo thành công nếu có
            @if (TempData["SuccessMessage"] != null)
            {
                <text>
                toastr.success('@TempData["SuccessMessage"]', 'Thành công');
                </text>
            }

            // Hiển thị thông báo lỗi nếu có
            @if (TempData["ErrorMessage"] != null)
            {
                <text>
                toastr.error('@TempData["ErrorMessage"]', 'Lỗi');
                </text>
            }

            @if (Model.SearchResults != null && Model.SearchResults.Count > 0)
            {
                <text>
                // Thống kê dữ liệu
                const courses = @Html.Raw(Json.Serialize(Model.SearchResults));
                
                // Biểu đồ phân bố theo trạng thái
                const statusCounts = {};
                courses.forEach(course => {
                    if (statusCounts[course.TrangThai]) {
                        statusCounts[course.TrangThai]++;
                    } else {
                        statusCounts[course.TrangThai] = 1;
                    }
                });
                
                const statusLabels = Object.keys(statusCounts);
                const statusData = Object.values(statusCounts);
                const statusColors = [
                    '#4e73df', '#1cc88a', '#36b9cc', '#f6c23e', '#e74a3b'
                ];
                
                var ctxStatus = document.getElementById('statusChart');
                if (ctxStatus) {
                    new Chart(ctxStatus, {
                        type: 'bar',
                        data: {
                            labels: statusLabels,
                            datasets: [{
                                label: 'Số lượng',
                                data: statusData,
                                backgroundColor: statusColors,
                                borderColor: statusColors,
                                borderWidth: 1
                            }]
                        },
                        options: {
                            scales: {
                                yAxes: [{
                                    ticks: {
                                        beginAtZero: true,
                                        stepSize: 1
                                    }
                                }]
                            },
                            legend: {
                                display: false
                            },
                            title: {
                                display: true,
                                text: 'Phân bố khóa học theo trạng thái'
                            }
                        }
                    });
                }
                
                const priceLabels = Object.keys(priceRanges);
                const priceData = Object.values(priceRanges);
                const priceColors = [
                    '#4e73df', '#1cc88a', '#36b9cc', '#f6c23e', '#e74a3b'
                ];
                
                var ctxPrice = document.getElementById('priceChart');
                if (ctxPrice) {
                    new Chart(ctxPrice, {
                        type: 'pie',
                        data: {
                            labels: priceLabels,
                            datasets: [{
                                data: priceData,
                                backgroundColor: priceColors,
                                hoverBackgroundColor: priceColors,
                                hoverBorderColor: "rgba(234, 236, 244, 1)"
                            }]
                        },
                        options: {
                            legend: {
                                display: true,
                                position: 'right'
                            },
                            title: {
                                display: true,
                                text: 'Phân bố khóa học theo giá'
                            }
                        }
                    });
                }
                </text>
            }
            
            // Hiệu ứng Animate.css
            $(".card").addClass("animate__animated animate__fadeIn");
            
            // Syncfusion MultiSelect cho danh mục
            $("#categoryMultiSelect").ejMultiSelect({
                dataSource: @Html.Raw(Json.Serialize(Model.AvailableCategories)),
                fields: { text: "Name", value: "CategoryID" },
                placeholder: "Chọn danh mục...",
                mode: "Default",
                enableGroupCheckBox: true,
                showSelectAll: true,
                selectAllText: "Chọn tất cả",
                unSelectAllText: "Bỏ chọn tất cả",
                floatLabelType: "Always",
                allowFiltering: true
            });
            
            // Thêm nút hướng dẫn
            $('<button type="button" class="btn btn-sm btn-outline-info float-end ms-2" id="helpButton"><i class="fas fa-question-circle"></i> Hướng dẫn</button>')
                .insertBefore('.card-header i:first');
                
            // Bind event handler for help button
            $("#helpButton").on('click', function() {
                startTutorial();
            });
        });
    </script>
}