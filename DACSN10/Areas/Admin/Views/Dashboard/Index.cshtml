@model DACSN10.Areas.Admin.Models.DashboardViewModel
@{
    ViewData["Title"] = "Tổng quan";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";

    // Tính toán các chỉ số % so với tổng
    double coursePercent = Model.TotalCourses > 0 ? (double)Model.NewCoursesThisWeek / Model.TotalCourses * 100 : 0;
    double userPercent = Model.TotalUsers > 0 ? (double)Model.NewUsersThisWeek / Model.TotalUsers * 100 : 0;
    double teacherPercent = Model.TotalUsers > 0 ? (double)Model.TotalTeachers / Model.TotalUsers * 100 : 0;
}

<div class="container-fluid px-4 animate__animated animate__fadeIn">
    <h1 class="mt-4">Tổng quan hệ thống</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item active">Trang chủ</li>
    </ol>

    <!-- Intro button -->
    <div class="text-end mb-3">
        <button id="startTour" class="btn btn-outline-primary btn-sm">
            <i class="fas fa-question-circle me-1"></i> Hướng dẫn
        </button>
    </div>

    <!-- Thẻ thông tin nhanh -->
    <div class="row">
        <div class="col-xl-3 col-md-6">
            <div class="card bg-primary text-white mb-4 shadow-sm animate__animated animate__fadeInUp" id="card-users">
                <div class="card-body">
                    <div class="d-flex align-items-center justify-content-between">
                        <div>
                            <div class="small text-white-50">Tổng số học viên</div>
                            <div class="display-6">@Model.TotalStudents</div>
                        </div>
                        <i class="fas fa-users fa-3x text-white-50 opacity-50"></i>
                    </div>
                    <div class="small mt-2">
                        <span class="text-success"><i class="fas fa-arrow-up me-1"></i>@Model.NewUsersThisWeek mới trong tuần này</span>
                    </div>
                </div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link" href="/Admin/StudentAdmin">Xem chi tiết</a>
                    <div class="small text-white"><i class="fas fa-angle-right"></i></div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-success text-white mb-4 shadow-sm animate__animated animate__fadeInUp" style="animation-delay: 0.1s" id="card-revenue">
                <div class="card-body">
                    <div class="d-flex align-items-center justify-content-between">
                        <div>
                            <div class="small text-white-50">Doanh thu tháng này</div>
                            <div class="display-6">@Model.MonthlyRevenue.ToString("N0") ₫</div>
                        </div>
                        <i class="fas fa-money-bill-wave fa-3x text-white-50 opacity-50"></i>
                    </div>
                    <div class="small mt-2">
                        <span class="text-white"><i class="fas fa-info-circle me-1"></i>@Model.WeeklyRevenue.ToString("N0") ₫ trong tuần này</span>
                    </div>
                </div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link" href="/Admin/PaymentAdmin">Xem chi tiết</a>
                    <div class="small text-white"><i class="fas fa-angle-right"></i></div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-warning text-white mb-4 shadow-sm animate__animated animate__fadeInUp" style="animation-delay: 0.2s" id="card-courses">
                <div class="card-body">
                    <div class="d-flex align-items-center justify-content-between">
                        <div>
                            <div class="small text-white-50">Tổng số khóa học</div>
                            <div class="display-6">@Model.TotalCourses</div>
                        </div>
                        <i class="fas fa-graduation-cap fa-3x text-white-50 opacity-50"></i>
                    </div>
                    <div class="small mt-2">
                        <span class="text-dark"><i class="fas fa-circle me-1"></i>@Model.PendingCourses khóa học chờ duyệt</span>
                    </div>
                </div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link" href="/Admin/CourseAdmin">Xem chi tiết</a>
                    <div class="small text-white"><i class="fas fa-angle-right"></i></div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-danger text-white mb-4 shadow-sm animate__animated animate__fadeInUp" style="animation-delay: 0.3s" id="card-teachers">
                <div class="card-body">
                    <div class="d-flex align-items-center justify-content-between">
                        <div>
                            <div class="small text-white-50">Tổng số giảng viên</div>
                            <div class="display-6">@Model.TotalTeachers</div>
                        </div>
                        <i class="fas fa-chalkboard-teacher fa-3x text-white-50 opacity-50"></i>
                    </div>
                    <div class="small mt-2">
                        <span class="text-white">
                            <i class="fas fa-percentage me-1"></i>@teacherPercent.ToString("0.0")% tổng người dùng
                        </span>
                    </div>
                </div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link" href="/Admin/TeacherAdmin">Xem chi tiết</a>
                    <div class="small text-white"><i class="fas fa-angle-right"></i></div>
                </div>
            </div>
        </div>
    </div>

    <!-- Biểu đồ và thống kê -->
    <div class="row">
        <!-- Biểu đồ doanh thu -->
        <div class="col-xl-8" id="revenue-chart-section">
            <div class="card mb-4 shadow-sm">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <div>
                        <i class="fas fa-chart-area me-1"></i>
                        Doanh thu theo thời gian
                    </div>
                    <div class="btn-group btn-group-sm" role="group" aria-label="Chọn thời gian">
                        <button type="button" class="btn btn-outline-primary active" id="revenuePeriod-week">Tuần</button>
                        <button type="button" class="btn btn-outline-primary" id="revenuePeriod-month">Tháng</button>
                        <button type="button" class="btn btn-outline-primary" id="revenuePeriod-year">Năm</button>
                    </div>
                </div>
                <div class="card-body">
                    <canvas id="revenueChart" width="100%" height="40"></canvas>
                </div>
                <div class="card-footer small text-muted">Cập nhật lần cuối: @DateTime.Now.ToString("HH:mm:ss dd/MM/yyyy")</div>
            </div>
        </div>

        <!-- Biểu đồ tròn -->
        <div class="col-xl-4" id="user-pie-section">
            <div class="card mb-4 shadow-sm">
                <div class="card-header">
                    <i class="fas fa-chart-pie me-1"></i>
                    Phân bổ người dùng
                </div>
                <div class="card-body">
                    <canvas id="userDistributionChart" width="100%" height="50"></canvas>
                </div>
                <div class="card-footer small text-muted">Cập nhật lần cuối: @DateTime.Now.ToString("HH:mm:ss dd/MM/yyyy")</div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Thống kê, so sánh theo thời gian -->
        <div class="col-xl-6">
            <div class="card mb-4 shadow-sm" id="stats-comparison">
                <div class="card-header">
                    <i class="fas fa-chart-bar me-1"></i>
                    Thống kê so sánh
                </div>
                <div class="card-body">
                    <div class="mb-4">
                        <p class="mb-1 d-flex justify-content-between">
                            <span>Khóa học mới (tuần này)</span>
                            <span class="text-success">@Model.NewCoursesThisWeek</span>
                        </p>
                        <div class="progress">
                            <div class="progress-bar bg-success" role="progressbar" style="width: @coursePercent%;"
                                 aria-valuenow="@coursePercent" aria-valuemin="0" aria-valuemax="100">
                                @coursePercent.ToString("0.0")%
                            </div>
                        </div>
                    </div>
                    <div class="mb-4">
                        <p class="mb-1 d-flex justify-content-between">
                            <span>Người dùng mới (tuần này)</span>
                            <span class="text-info">@Model.NewUsersThisWeek</span>
                        </p>
                        <div class="progress">
                            <div class="progress-bar bg-info" role="progressbar" style="width: @userPercent%;"
                                 aria-valuenow="@userPercent" aria-valuemin="0" aria-valuemax="100">
                                @userPercent.ToString("0.0")%
                            </div>
                        </div>
                    </div>
                    <div>
                        <p class="mb-1 d-flex justify-content-between">
                            <span>Tỷ lệ giảng viên/người dùng</span>
                            <span class="text-warning">@Model.TotalTeachers / @Model.TotalUsers</span>
                        </p>
                        <div class="progress">
                            <div class="progress-bar bg-warning" role="progressbar" style="width: @teacherPercent%;"
                                 aria-valuenow="@teacherPercent" aria-valuemin="0" aria-valuemax="100">
                                @teacherPercent.ToString("0.0")%
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Nút thống kê nâng cao -->
                <div class="card-footer text-center">
                    <button id="showAdvancedStats" class="btn btn-sm btn-outline-primary">
                        <i class="fas fa-chart-line me-1"></i> Xem thống kê nâng cao
                    </button>
                </div>
            </div>
        </div>

        <!-- Syncfusion Dashboard -->
        <div class="col-xl-6" id="syncfusion-dashboard">
            <div class="card mb-4 shadow-sm">
                <div class="card-header">
                    <i class="fas fa-tachometer-alt me-1"></i>
                    Hoạt động hệ thống
                </div>
                <div class="card-body">
                    <div id="activityGauge"></div>
                </div>
            </div>
        </div>
    </div>

    <!-- Danh sách khóa học chờ phê duyệt -->
    <div class="row" id="pending-courses-section">
        <div class="col-12">
            <div class="card mb-4 shadow-sm">
                <div class="card-header">
                    <i class="fas fa-clipboard-check me-1"></i>
                    Khóa học chờ phê duyệt (@Model.PendingCourses)
                </div>
                <div class="card-body">
                    <div class="table-responsive" id="pendingCoursesTableContainer">
                        <!-- DataTables sẽ được load bằng AJAX -->
                        <div class="text-center py-5">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Đang tải...</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer text-center">
                    <a href="/Admin/CourseAdmin/Approval" class="btn btn-sm btn-primary">
                        <i class="fas fa-list me-1"></i> Xem tất cả
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Thống kê nâng cao -->
<div class="modal fade" id="advancedStatsModal" tabindex="-1" aria-labelledby="advancedStatsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="advancedStatsModalLabel">Thống kê nâng cao</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <ul class="nav nav-tabs" id="statsTab" role="tablist">
                    <li class="nav-item" role="presentation">
                        <a class="nav-link active" id="revenue-tab" data-bs-toggle="tab" href="#revenue" role="tab">
                            Doanh thu
                        </a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link" id="users-tab" data-bs-toggle="tab" href="#users" role="tab">
                            Người dùng
                        </a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link" id="courses-tab" data-bs-toggle="tab" href="#courses" role="tab">
                            Khóa học
                        </a>
                    </li>
                </ul>

                <div class="tab-content p-3" id="statsTabContent">
                    <div class="tab-pane fade show active" id="revenue" role="tabpanel">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="card mb-3">
                                    <div class="card-body text-center">
                                        <h5 class="card-title text-primary">Tổng doanh thu</h5>
                                        <h2>@Model.TotalRevenue.ToString("N0") ₫</h2>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="card mb-3">
                                    <div class="card-body text-center">
                                        <h5 class="card-title text-success">Doanh thu tháng này</h5>
                                        <h2>@Model.MonthlyRevenue.ToString("N0") ₫</h2>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="card mb-3">
                                    <div class="card-body text-center">
                                        <h5 class="card-title text-info">Doanh thu tuần này</h5>
                                        <h2>@Model.WeeklyRevenue.ToString("N0") ₫</h2>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div>
                            <canvas id="advancedRevenueChart" width="100%" height="300"></canvas>
                        </div>
                    </div>

                    <div class="tab-pane fade" id="users" role="tabpanel">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="card mb-3">
                                    <div class="card-body text-center">
                                        <h5 class="card-title text-primary">Tổng người dùng</h5>
                                        <h2>@Model.TotalUsers</h2>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="card mb-3">
                                    <div class="card-body text-center">
                                        <h5 class="card-title text-success">Học viên</h5>
                                        <h2>@Model.TotalStudents</h2>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="card mb-3">
                                    <div class="card-body text-center">
                                        <h5 class="card-title text-info">Giảng viên</h5>
                                        <h2>@Model.TotalTeachers</h2>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div>
                            <canvas id="advancedUsersChart" width="100%" height="300"></canvas>
                        </div>
                    </div>

                    <div class="tab-pane fade" id="courses" role="tabpanel">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="card mb-3">
                                    <div class="card-body text-center">
                                        <h5 class="card-title text-primary">Tổng khóa học</h5>
                                        <h2>@Model.TotalCourses</h2>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="card mb-3">
                                    <div class="card-body text-center">
                                        <h5 class="card-title text-warning">Chờ phê duyệt</h5>
                                        <h2>@Model.PendingCourses</h2>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="card mb-3">
                                    <div class="card-body text-center">
                                        <h5 class="card-title text-info">Danh mục</h5>
                                        <h2>@Model.TotalCategories</h2>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div>
                            <canvas id="advancedCoursesChart" width="100%" height="300"></canvas>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-1"></i> Đóng
                </button>
                <button type="button" class="btn btn-primary" id="downloadStats">
                    <i class="fas fa-download me-1"></i> Tải xuống báo cáo
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Khởi tạo Toastr
            toastr.options = {
                "closeButton": true,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "timeOut": "3000"
            };

            // Xử lý hiển thị thông báo với Toastr
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                    toastr.success('@TempData["SuccessMessage"]', 'Thành công');
            </text>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <text>
                    toastr.error('@TempData["ErrorMessage"]', 'Lỗi');
            </text>
        }

            // Hiệu ứng Animate.css cho các card
            $('.card').each(function(index) {
                $(this).css('animation-delay', (index * 0.1) + 's');
                $(this).addClass('animate__animated animate__fadeIn');
            });

            // Biểu đồ doanh thu theo thời gian (Chart.js)
            var revenueCtx = document.getElementById("revenueChart");
            var revenueChart = new Chart(revenueCtx, {
                type: 'line',
                data: {
                    labels: ["T2", "T3", "T4", "T5", "T6", "T7", "CN"],
                    datasets: [{
                        label: "Doanh thu (VNĐ)",
                        backgroundColor: "rgba(2, 117, 216, 0.2)",
                        borderColor: "rgba(2, 117, 216, 1)",
                        pointRadius: 5,
                        pointBackgroundColor: "rgba(2, 117, 216, 1)",
                        pointBorderColor: "rgba(255, 255, 255, 0.8)",
                        pointHoverRadius: 7,
                        pointHoverBackgroundColor: "rgba(2, 117, 216, 1)",
                        pointHitRadius: 50,
                        pointBorderWidth: 2,
                        data: [
        @(new Random().Next(1000000, 5000000)),
        @(new Random().Next(1000000, 5000000)),
        @(new Random().Next(1000000, 5000000)),
        @(new Random().Next(1000000, 5000000)),
        @(new Random().Next(1000000, 5000000)),
        @(new Random().Next(1000000, 5000000)),
        @(Model.WeeklyRevenue)
                        ],
                    }],
                },
                options: {
                    scales: {
                        xAxes: [{
                            gridLines: {
                                display: false
                            },
                            ticks: {
                                maxTicksLimit: 7
                            }
                        }],
                        yAxes: [{
                            ticks: {
                                min: 0,
                                max: @(Math.Max(5000000, (int)Model.WeeklyRevenue)),
                                maxTicksLimit: 5,
                                callback: function(value) {
                                    return value.toLocaleString('vi-VN') + ' ₫';
                                }
                            },
                            gridLines: {
                                color: "rgba(0, 0, 0, .125)",
                            }
                        }],
                    },
                    legend: {
                        display: false
                    },
                    tooltips: {
                        callbacks: {
                            label: function(tooltipItem, data) {
                                return tooltipItem.yLabel.toLocaleString('vi-VN') + ' ₫';
                            }
                        }
                    }
                }
            });

            // Biểu đồ phân bổ người dùng (Chart.js)
            var userCtx = document.getElementById("userDistributionChart");
            var userChart = new Chart(userCtx, {
                type: 'doughnut',
                data: {
                    labels: ["Học viên", "Giảng viên", "Quản trị viên"],
                    datasets: [{
                        data: [
        @(Model.TotalStudents - Model.TotalTeachers),
        @Model.TotalTeachers,
                            1
                        ],
                        backgroundColor: ['#0275d8', '#f0ad4e', '#d9534f'],
                        hoverBackgroundColor: ['#025aa5', '#ec971f', '#c9302c'],
                        hoverBorderColor: "rgba(234, 236, 244, 1)",
                    }],
                },
                options: {
                    maintainAspectRatio: false,
                    tooltips: {
                        backgroundColor: "rgb(255,255,255)",
                        bodyFontColor: "#858796",
                        borderColor: '#dddfeb',
                        borderWidth: 1,
                        xPadding: 15,
                        yPadding: 15,
                        displayColors: false,
                        caretPadding: 10,
                    },
                    legend: {
                        display: true,
                        position: 'bottom'
                    },
                    cutoutPercentage: 70,
                },
            });

            // Syncfusion CircularGauge
            $("#activityGauge").ejCircularGauge({
                width: 500,
                height: 300,
                tooltip: {
                    showTooltip: true
                },
                scales: [{
                    showLabels: true,
                    radius: 150,
                    showRanges: true,
                    ranges: [
                        { startValue: 0, endValue: 35, backgroundColor: "#9DD54C", border: { width: 0 } },
                        { startValue: 35, endValue: 70, backgroundColor: "#FCBF31", border: { width: 0 } },
                        { startValue: 70, endValue: 100, backgroundColor: "#F71458", border: { width: 0 } }
                    ],
                    pointers: [{
                        value: @(new Random().Next(20, 80)),
                        showBackNeedle: true,
                        backNeedleLength: 20,
                        length: 100,
                        width: 7,
                        pointerCap: {
                            radius: 12,
                            borderWidth: 0,
                            backgroundColor: "#4D4D4D"
                        }
                    }],
                    ticks: [{
                        type: "major",
                        distanceFromScale: 2,
                        height: 16,
                        width: 1,
                        color: "#8c8c8c"
                    }, {
                        type: "minor",
                        height: 8,
                        width: 1,
                        distanceFromScale: 2,
                        color: "#8c8c8c"
                    }],
                    labels: [{
                        color: "#8c8c8c",
                    }],
                    majorIntervalValue: 10,
                    minorIntervalValue: 5
                }]
            });

            // Chuyển đổi giữa các loại thời gian cho biểu đồ doanh thu
            $('#revenuePeriod-week').click(function() {
                $(this).addClass('active').siblings().removeClass('active');
                revenueChart.data.labels = ["T2", "T3", "T4", "T5", "T6", "T7", "CN"];
                revenueChart.data.datasets[0].data = [
        @(new Random().Next(1000000, 5000000)),
        @(new Random().Next(1000000, 5000000)),
        @(new Random().Next(1000000, 5000000)),
        @(new Random().Next(1000000, 5000000)),
        @(new Random().Next(1000000, 5000000)),
        @(new Random().Next(1000000, 5000000)),
        @(Model.WeeklyRevenue)
                ];
                revenueChart.update();
            });

            $('#revenuePeriod-month').click(function() {
                $(this).addClass('active').siblings().removeClass('active');
                revenueChart.data.labels = Array.from({length: new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0).getDate()}, (_, i) => i + 1);
                revenueChart.data.datasets[0].data = Array.from({length: revenueChart.data.labels.length}, () => Math.floor(Math.random() * 5000000) + 500000);
                // Đặt giá trị cuối cùng là doanh thu tháng
                revenueChart.data.datasets[0].data[revenueChart.data.datasets[0].data.length - 1] = @Model.MonthlyRevenue;
                revenueChart.options.scales.xAxes[0].ticks.maxTicksLimit = 10;
                revenueChart.update();
            });

            $('#revenuePeriod-year').click(function() {
                $(this).addClass('active').siblings().removeClass('active');
                revenueChart.data.labels = ["T1", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "T10", "T11", "T12"];
                revenueChart.data.datasets[0].data = Array.from({length: 12}, () => Math.floor(Math.random() * 30000000) + 5000000);
                // Đặt giá trị tháng hiện tại là tổng doanh thu
                revenueChart.data.datasets[0].data[new Date().getMonth()] = @Model.TotalRevenue;
                revenueChart.options.scales.xAxes[0].ticks.maxTicksLimit = 12;
                revenueChart.update();
            });

            // Ajax load danh sách khóa học chờ phê duyệt
            setTimeout(function() {
                $.ajax({
                    url: '/Admin/Dashboard/GetPendingCourses',
                    type: 'GET',
                    success: function(data) {
                        if (data && data.length > 0) {
                            let tableHtml = `
                                <table id="pendingCoursesTable" class="table table-bordered table-hover">
                                    <thead>
                                        <tr>
                                            <th>ID</th>
                                            <th>Tên khóa học</th>
                                            <th>Giảng viên</th>
                                            <th>Ngày tạo</th>
                                            <th>Thao tác</th>
                                        </tr>
                                    </thead>
                                    <tbody>`;

                            data.forEach(function(course) {
                                tableHtml += `
                                    <tr>
                                        <td>${course.courseID}</td>
                                        <td>${course.tenKhoaHoc}</td>
                                        <td>${course.tenGiangVien}</td>
                                        <td>${new Date(course.ngayTao).toLocaleDateString('vi-VN')}</td>
                                        <td>
                                            <div class="btn-group" role="group">
                                                <a href="/Admin/CourseAdmin/Details/${course.courseID}" class="btn btn-info btn-sm text-white">
                                                    <i class="fas fa-info-circle"></i>
                                                </a>
                                                <button type="button" class="btn btn-success btn-sm approve-course" data-id="${course.courseID}">
                                                    <i class="fas fa-check"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>`;
                            });

                            tableHtml += `
                                    </tbody>
                                </table>`;

                            $('#pendingCoursesTableContainer').html(tableHtml);

                            // Khởi tạo DataTables
                            $('#pendingCoursesTable').DataTable({
                                language: {
                                    url: '//cdn.datatables.net/plug-ins/1.10.25/i18n/Vietnamese.json'
                                },
                                responsive: true,
                                pageLength: 5,
                                lengthMenu: [[5, 10, 25, -1], [5, 10, 25, "Tất cả"]]
                            });

                            // Xử lý nút phê duyệt khóa học
                            $('.approve-course').click(function() {
                                const courseId = $(this).data('id');

                                bootbox.confirm({
                                    title: "Xác nhận phê duyệt",
                                    message: "Bạn có chắc chắn muốn phê duyệt khóa học này?",
                                    buttons: {
                                        cancel: {
                                            label: '<i class="fa fa-times"></i> Hủy bỏ',
                                            className: 'btn-secondary'
                                        },
                                        confirm: {
                                            label: '<i class="fa fa-check"></i> Phê duyệt',
                                            className: 'btn-success'
                                        }
                                    },
                                    callback: function(result) {
                                        if (result) {
                                            // Gửi yêu cầu phê duyệt
                                            $.ajax({
                                                url: '/Admin/CourseAdmin/ApproveCourse',
                                                type: 'POST',
                                                data: { id: courseId },
                                                success: function() {
                                                    toastr.success('Khóa học đã được phê duyệt thành công!');
                                                    // Reload để cập nhật danh sách
                                                    setTimeout(function() {
                                                        location.reload();
                                                    }, 1000);
                                                },
                                                error: function() {
                                                    toastr.error('Có lỗi xảy ra khi phê duyệt khóa học.');
                                                }
                                            });
                                        }
                                    }
                                });
                            });
                        } else {
                            $('#pendingCoursesTableContainer').html('<div class="alert alert-info">Không có khóa học nào đang chờ phê duyệt.</div>');
                        }
                    },
                    error: function() {
                        $('#pendingCoursesTableContainer').html('<div class="alert alert-danger">Có lỗi xảy ra khi tải dữ liệu. Vui lòng thử lại sau.</div>');
                    }
                });
            }, 1000);

            // Hiển thị modal thống kê nâng cao
            $('#showAdvancedStats').click(function() {
                $('#advancedStatsModal').modal('show');

                // Biểu đồ doanh thu nâng cao
                setTimeout(function() {
                    var advRevenueCtx = document.getElementById("advancedRevenueChart");
                    if (advRevenueCtx) {
                        new Chart(advRevenueCtx, {
                            type: 'bar',
                            data: {
                                labels: ["T1", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "T10", "T11", "T12"],
                                datasets: [{
                                    label: "Doanh thu (VNĐ)",
                                    backgroundColor: "rgba(2, 117, 216, 0.8)",
                                    borderColor: "rgba(2, 117, 216, 1)",
                                    data: Array.from({length: 12}, () => Math.floor(Math.random() * 50000000) + 5000000),
                                }]
                            },
                            options: {
                                scales: {
                                    yAxes: [{
                                        ticks: {
                                            beginAtZero: true,
                                            callback: function(value) {
                                                return value.toLocaleString('vi-VN') + ' ₫';
                                            }
                                        }
                                    }]
                                },
                                tooltips: {
                                    callbacks: {
                                        label: function(tooltipItem, data) {
                                            return tooltipItem.yLabel.toLocaleString('vi-VN') + ' ₫';
                                        }
                                    }
                                }
                            }
                        });
                    }

                    // Biểu đồ người dùng nâng cao
                    var advUsersCtx = document.getElementById("advancedUsersChart");
                    if (advUsersCtx) {
                        new Chart(advUsersCtx, {
                            type: 'line',
                            data: {
                                labels: ["T1", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "T10", "T11", "T12"],
                                datasets: [{
                                    label: "Học viên",
                                    borderColor: "#0275d8",
                                    backgroundColor: "rgba(2, 117, 216, 0.2)",
                                    data: Array.from({length: 12}, (_, i) => Math.floor(Math.random() * 100) + 50 + (i * 20)),
                                }, {
                                    label: "Giảng viên",
                                    borderColor: "#f0ad4e",
                                    backgroundColor: "rgba(240, 173, 78, 0.2)",
                                    data: Array.from({length: 12}, (_, i) => Math.floor(Math.random() * 20) + 5 + (i * 2)),
                                }]
                            },
                            options: {
                                scales: {
                                    yAxes: [{
                                        ticks: {
                                            beginAtZero: true
                                        }
                                    }]
                                }
                            }
                        });
                    }

                    // Biểu đồ khóa học nâng cao
                    var advCoursesCtx = document.getElementById("advancedCoursesChart");
                    if (advCoursesCtx) {
                        new Chart(advCoursesCtx, {
                            type: 'bar',
                            data: {
                                labels: ["T1", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "T10", "T11", "T12"],
                                datasets: [{
                                    label: "Khóa học mới",
                                    backgroundColor: "rgba(2, 117, 216, 0.8)",
                                    data: Array.from({length: 12}, () => Math.floor(Math.random() * 15) + 1),
                                }]
                            },
                            options: {
                                scales: {
                                    yAxes: [{
                                        ticks: {
                                            beginAtZero: true,
                                            stepSize: 1
                                        }
                                    }]
                                }
                            }
                        });
                    }
                }, 500);
            });

            // Nút tải xuống báo cáo
            $('#downloadStats').click(function() {
                Swal.fire({
                    title: 'Xuất báo cáo thống kê',
                    text: 'Vui lòng chọn định dạng báo cáo',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Excel',
                    cancelButtonText: 'PDF',
                    showDenyButton: true,
                    denyButtonText: 'Hủy bỏ',
                    denyButtonColor: '#6c757d'
                }).then((result) => {
                    if (result.isConfirmed) {
                        toastr.success('Đang xuất báo cáo Excel... Vui lòng đợi trong giây lát.');
                        setTimeout(function() {
                            toastr.info('Tải xuống thành công! (Chức năng mô phỏng)');
                        }, 1500);
                    } else if (result.dismiss === Swal.DismissReason.cancel) {
                        toastr.success('Đang xuất báo cáo PDF... Vui lòng đợi trong giây lát.');
                        setTimeout(function() {
                            toastr.info('Tải xuống thành công! (Chức năng mô phỏng)');
                        }, 1500);
                    }
                });
            });

            // Hướng dẫn sử dụng với Intro.js
            $('#startTour').click(function() {
                introJs().setOptions({
                    steps: [
                        {
                            element: document.querySelector('#card-users'),
                            intro: 'Thống kê tổng số học viên đã đăng ký trên hệ thống.'
                        },
                        {
                            element: document.querySelector('#card-revenue'),
                            intro: 'Thống kê doanh thu theo tháng và tuần.'
                        },
                        {
                            element: document.querySelector('#card-courses'),
                            intro: 'Tổng số khóa học trên hệ thống và số khóa học đang chờ duyệt.'
                        },
                        {
                            element: document.querySelector('#card-teachers'),
                            intro: 'Thống kê tổng số giảng viên trên hệ thống.'
                        },
                        {
                            element: document.querySelector('#revenue-chart-section'),
                            intro: 'Biểu đồ thể hiện doanh thu theo thời gian. Bạn có thể chuyển đổi giữa các mốc thời gian khác nhau.'
                        },
                        {
                            element: document.querySelector('#user-pie-section'),
                            intro: 'Biểu đồ phân bố người dùng theo vai trò trên hệ thống.'
                        },
                        {
                            element: document.querySelector('#stats-comparison'),
                            intro: 'Thống kê so sánh các chỉ số quan trọng.'
                        },
                        {
                            element: document.querySelector('#syncfusion-dashboard'),
                            intro: 'Biểu đồ thể hiện hoạt động của hệ thống.'
                        },
                        {
                            element: document.querySelector('#pending-courses-section'),
                            intro: 'Danh sách khóa học đang chờ phê duyệt.'
                        },
                        {
                            element: document.querySelector('#showAdvancedStats'),
                            intro: 'Nhấn vào đây để xem thống kê nâng cao và xuất báo cáo.'
                        }
                    ],
                    prevLabel: 'Trước',
                    nextLabel: 'Tiếp',
                    skipLabel: 'Bỏ qua',
                    doneLabel: 'Hoàn thành'
                }).start();
            });
        });
    </script>
}