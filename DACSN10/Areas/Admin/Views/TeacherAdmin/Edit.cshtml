@model DACSN10.Areas.Admin.Models.UserAdminViewModel
@{
    ViewData["Title"] = "Chỉnh sửa giảng viên";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid px-4 animate__animated animate__fadeIn">
    <h1 class="mt-4">Chỉnh sửa thông tin giảng viên</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/Admin">Trang chủ</a></li>
        <li class="breadcrumb-item"><a asp-action="Index">Giảng viên</a></li>
        <li class="breadcrumb-item active">Chỉnh sửa</li>
    </ol>

    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-user-edit me-1"></i>
            Thông tin giảng viên #@Model.Id
        </div>
        <div class="card-body">
            <form asp-action="Edit" method="post" id="editForm">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                <input type="hidden" asp-for="Id" />
                
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="form-outline mb-4">
                            <label asp-for="HoTen" class="form-label">Họ tên <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-user"></i></span>
                                <input asp-for="HoTen" class="form-control" required />
                            </div>
                            <span asp-validation-for="HoTen" class="text-danger"></span>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-outline mb-4">
                            <label asp-for="Email" class="form-label">Email <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                                <input asp-for="Email" type="email" class="form-control" required />
                            </div>
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="form-outline mb-4">
                            <label asp-for="Password" class="form-label">Mật khẩu mới <small class="text-muted">(để trống nếu không đổi)</small></label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-lock"></i></span>
                                <input asp-for="Password" type="password" class="form-control" id="password" />
                                <button type="button" class="btn btn-outline-secondary" id="togglePassword">
                                    <i class="fas fa-eye" id="toggleIcon"></i>
                                </button>
                            </div>
                            <span asp-validation-for="Password" class="text-danger"></span>
                            <div class="progress mt-1" style="height: 5px;">
                                <div class="progress-bar" id="password-strength" role="progressbar"></div>
                            </div>
                            <small class="form-text text-muted" id="password-feedback"></small>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-outline mb-4">
                            <label asp-for="ConfirmPassword" class="form-label">Xác nhận mật khẩu mới</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-lock"></i></span>
                                <input asp-for="ConfirmPassword" type="password" class="form-control" />
                            </div>
                            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="form-outline mb-4">
                            <label asp-for="PhoneNumber" class="form-label">Số điện thoại</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-phone"></i></span>
                                <input asp-for="PhoneNumber" class="form-control" data-mask="0000 000 000" placeholder="XXXX XXX XXX" />
                            </div>
                            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-outline mb-4">
                            <label asp-for="TrangThai" class="form-label">Trạng thái <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-toggle-on"></i></span>
                                <select asp-for="TrangThai" class="form-select" required>
                                    <option value="Active">Hoạt động</option>
                                    <option value="Locked">Đã khóa</option>
                                    <option value="Inactive">Không hoạt động</option>
                                </select>
                            </div>
                            <span asp-validation-for="TrangThai" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="form-outline mb-4">
                            <label class="form-label">Ngày đăng ký</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                                <input type="text" class="form-control" value="@Model.NgayDangKy.ToString("dd/MM/yyyy HH:mm")" readonly />
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-outline mb-4">
                                    <label class="form-label">Số khóa học</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="fas fa-book"></i></span>
                                        <input type="text" class="form-control" value="@Model.CourseCount" readonly />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-outline mb-4">
                                    <label class="form-label">Số người theo dõi</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="fas fa-users"></i></span>
                                        <input type="text" class="form-control" value="@Model.FollowerCount" readonly />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <hr />
                
                <div class="form-check mb-4">
                    <input class="form-check-input" type="checkbox" id="sendCredentials" />
                    <label class="form-check-label" for="sendCredentials">
                        Gửi thông báo cập nhật qua email
                    </label>
                </div>

                <div class="d-flex justify-content-between mt-4">
                    <div>
                        <a asp-action="Index" class="btn btn-secondary me-2">
                            <i class="fas fa-arrow-left me-1"></i> Trở về danh sách
                        </a>
                        <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-info text-white">
                            <i class="fas fa-info-circle me-1"></i> Chi tiết
                        </a>
                    </div>
                    <div class="btn-group">
                        @if (Model.TrangThai == "Active")
                        {
                            <button type="button" id="lockAccountBtn" class="btn btn-warning me-2">
                                <i class="fas fa-lock me-1"></i> Khóa tài khoản
                            </button>
                        }
                        else if (Model.TrangThai == "Locked")
                        {
                            <button type="button" id="unlockAccountBtn" class="btn btn-success me-2">
                                <i class="fas fa-unlock me-1"></i> Mở khóa tài khoản
                            </button>
                        }
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save me-1"></i> Cập nhật
                        </button>
                    </div>
                </div>
            </form>
            
            <!-- Forms ẩn cho các thao tác -->
            <form id="formLockAccount" asp-action="LockAccount" method="post" class="d-none">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model.Id" />
            </form>

            <form id="formUnlockAccount" asp-action="UnlockAccount" method="post" class="d-none">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model.Id" />
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // jQuery UI enhancements
            $('select').selectmenu();
            
            // Animate.css effects
            $('.card').addClass('animate__animated animate__fadeIn');
            
            // Material Design effect for inputs
            $('.form-control, .form-select').each(function() {
                if ($(this).val()) {
                    $(this).parent().addClass('is-filled');
                }
            }).on('focusin', function() {
                $(this).parent().addClass('is-focused is-filled');
            }).on('focusout', function() {
                $(this).parent().removeClass('is-focused');
                if (!$(this).val()) {
                    $(this).parent().removeClass('is-filled');
                }
            });
            
            // Form validation
            $("#editForm").validate({
                rules: {
                    HoTen: {
                        required: true,
                        minlength: 3,
                        maxlength: 50
                    },
                    Email: {
                        required: true,
                        email: true
                    },
                    Password: {
                        minlength: {
                            param: 6,
                            depends: function(element) {
                                return $(element).val() !== "";
                            }
                        }
                    },
                    ConfirmPassword: {
                        equalTo: "#password",
                        depends: function(element) {
                            return $("#password").val() !== "";
                        }
                    },
                    PhoneNumber: {
                        pattern: "(84|0[3|5|7|8|9])+([0-9]{8})"
                    }
                },
                messages: {
                    HoTen: {
                        required: "Vui lòng nhập họ tên",
                        minlength: "Họ tên phải có ít nhất 3 ký tự",
                        maxlength: "Họ tên không được vượt quá 50 ký tự"
                    },
                    Email: {
                        required: "Vui lòng nhập email",
                        email: "Vui lòng nhập địa chỉ email hợp lệ"
                    },
                    Password: {
                        minlength: "Mật khẩu phải có ít nhất 6 ký tự"
                    },
                    ConfirmPassword: {
                        equalTo: "Xác nhận mật khẩu không khớp"
                    },
                    PhoneNumber: {
                        pattern: "Vui lòng nhập số điện thoại hợp lệ (VD: 0912345678)"
                    }
                },
                errorElement: "div",
                errorClass: "invalid-feedback",
                highlight: function (element) {
                    $(element).addClass("is-invalid").removeClass("is-valid");
                },
                unhighlight: function (element) {
                    $(element).addClass("is-valid").removeClass("is-invalid");
                },
                errorPlacement: function (error, element) {
                    error.insertAfter(element.closest(".input-group"));
                }
            });

            // Toggle password visibility
            $("#togglePassword").click(function () {
                const passwordInput = $("#password");
                const toggleIcon = $("#toggleIcon");
                
                if (passwordInput.attr("type") === "password") {
                    passwordInput.attr("type", "text");
                    toggleIcon.removeClass("fa-eye").addClass("fa-eye-slash");
                } else {
                    passwordInput.attr("type", "password");
                    toggleIcon.removeClass("fa-eye-slash").addClass("fa-eye");
                }
            });
            
            // Password strength meter
            function checkPasswordStrength(password) {
                if (!password) return { strength: 0, color: "", feedback: "" };
                
                let strength = 0;
                const feedback = [];
                
                if (password.length < 6) {
                    feedback.push("Mật khẩu quá ngắn");
                } else {
                    strength += 20;
                }
                
                if (password.length >= 8) {
                    strength += 10;
                }
                
                if (password.match(/[a-z]+/)) {
                    strength += 15;
                } else {
                    feedback.push("Nên có ít nhất một chữ cái thường");
                }
                
                if (password.match(/[A-Z]+/)) {
                    strength += 15;
                } else {
                    feedback.push("Nên có ít nhất một chữ cái hoa");
                }
                
                if (password.match(/[0-9]+/)) {
                    strength += 15;
                } else {
                    feedback.push("Nên có ít nhất một chữ số");
                }
                
                if (password.match(/[!@@#$%^&*(),.?":{}|<>]+/)) {
                    strength += 25;
                } else {
                    feedback.push("Nên có ít nhất một ký tự đặc biệt");
                }
                
                let message;
                let color;
                
                if (strength < 30) {
                    message = "Yếu";
                    color = "bg-danger";
                } else if (strength < 60) {
                    message = "Trung bình";
                    color = "bg-warning";
                } else if (strength < 80) {
                    message = "Khá mạnh";
                    color = "bg-info";
                } else {
                    message = "Mạnh";
                    color = "bg-success";
                }
                
                if (strength >= 60) {
                    feedback.unshift(`Mật khẩu ${message.toLowerCase()}`);
                } else if (strength > 0) {
                    feedback.unshift(`Mật khẩu ${message.toLowerCase()}, nên cải thiện thêm`);
                }
                
                return {
                    strength: strength,
                    color: color,
                    feedback: feedback.join(". ")
                };
            }
            
            // Update password strength when typing
            $("#password").on("input", function() {
                const password = $(this).val();
                if (!password) {
                    $("#password-strength").css("width", "0%").removeClass("bg-danger bg-warning bg-info bg-success");
                    $("#password-feedback").text("");
                    return;
                }
                
                const result = checkPasswordStrength(password);
                
                $("#password-strength")
                    .removeClass("bg-danger bg-warning bg-info bg-success")
                    .addClass(result.color)
                    .css("width", result.strength + "%");
                    
                $("#password-feedback").text(result.feedback);
            });
            
            // Xử lý các nút thao tác
            $("#lockAccountBtn").click(function() {
                Swal.fire({
                    title: 'Xác nhận khóa tài khoản',
                    text: `Bạn có chắc chắn muốn khóa tài khoản của giảng viên "${@Html.Raw(Json.Serialize(Model.HoTen))}"?`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Xác nhận',
                    cancelButtonText: 'Hủy bỏ'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $("#formLockAccount").submit();
                    }
                });
            });
            
            $("#unlockAccountBtn").click(function() {
                Swal.fire({
                    title: 'Xác nhận mở khóa tài khoản',
                    text: `Bạn có chắc chắn muốn mở khóa tài khoản của giảng viên "${@Html.Raw(Json.Serialize(Model.HoTen))}"?`,
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Xác nhận',
                    cancelButtonText: 'Hủy bỏ'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $("#formUnlockAccount").submit();
                    }
                });
            });
            
            // Xử lý form submit
            $("#editForm").on("submit", function(e) {
                if (!$(this).valid()) {
                    e.preventDefault();
                    toastr.error("Vui lòng kiểm tra lại thông tin!", "Lỗi");
                    return false;
                }
                
                // Kiểm tra mật khẩu
                if ($("#password").val() && $("#password").val() !== $("#ConfirmPassword").val()) {
                    e.preventDefault();
                    toastr.error("Xác nhận mật khẩu không khớp!", "Lỗi");
                    return false;
                }
                
                // Kiểm tra độ mạnh mật khẩu nếu có cập nhật mật khẩu
                if ($("#password").val()) {
                    const passwordStrength = checkPasswordStrength($("#password").val());
                    
                    if (passwordStrength.strength < 40) {
                        e.preventDefault();
                        
                        Swal.fire({
                            title: 'Mật khẩu yếu',
                            text: 'Mật khẩu của bạn không đủ mạnh. Bạn vẫn muốn tiếp tục?',
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Tiếp tục',
                            cancelButtonText: 'Cải thiện mật khẩu'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                // Thêm hidden field cho việc gửi thông báo nếu được chọn
                                if ($("#sendCredentials").is(":checked")) {
                                    $("#editForm").append('<input type="hidden" name="SendCredentials" value="true">');
                                }
                                
                                document.getElementById('editForm').submit();
                            }
                        });
                        
                        return false;
                    }
                }
                
                // Thêm hidden field cho việc gửi thông báo nếu được chọn
                if ($("#sendCredentials").is(":checked")) {
                    $("#editForm").append('<input type="hidden" name="SendCredentials" value="true">');
                }
                
                return true;
            });
        });
    </script>
}