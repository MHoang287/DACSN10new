@model DACSN10.Areas.Teacher.Models.QuizViewModel

@{
    ViewData["Title"] = "Create Quiz";
    Layout = "~/Areas/Teacher/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid px-4 animate__animated animate__fadeIn">
    <h1 class="mt-4 mb-4">
        <i class="fas fa-plus-circle"></i> Create New Quiz
    </h1>

    <div class="row">
        <div class="col-xl-9">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-question-circle me-1"></i>
                    Quiz Details
                </div>
                <div class="card-body">
                    <form asp-action="CreateQuiz" id="createQuizForm">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="CourseID" />

                        <div class="mb-4">
                            <label asp-for="Title" class="form-label">Quiz Title</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-heading"></i></span>
                                <input asp-for="Title" class="form-control" placeholder="Enter quiz title" required />
                            </div>
                            <span asp-validation-for="Title" class="text-danger"></span>
                        </div>

                        <hr class="my-4">

                        <div class="mb-3">
                            <div class="d-flex justify-content-between align-items-center">
                                <h4>Questions</h4>
                                <button type="button" class="btn btn-outline-primary" id="addQuestionBtn">
                                    <i class="fas fa-plus"></i> Add Question
                                </button>
                            </div>
                        </div>

                        <div id="questionsContainer">
                            <!-- Initial question template -->
                            <div class="card mb-4 question-card" data-question-index="0">
                                <div class="card-header d-flex justify-content-between align-items-center">
                                    <div>
                                        <i class="fas fa-question me-1"></i>
                                        Question 1
                                    </div>
                                    <div>
                                        <button type="button" class="btn btn-sm btn-outline-danger remove-question-btn">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <div class="mb-3">
                                        <label class="form-label">Question Text</label>
                                        <textarea name="Questions[0].QuestionText" class="form-control question-text" rows="2" required></textarea>
                                    </div>

                                    <div class="row mb-3">
                                        <div class="col-md-6">
                                            <label class="form-label">Option A</label>
                                            <div class="input-group">
                                                <div class="input-group-text">
                                                    <input type="radio" name="Questions[0].CorrectAnswer" value="A" required>
                                                </div>
                                                <input type="text" name="Questions[0].OptionA" class="form-control" required>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <label class="form-label">Option B</label>
                                            <div class="input-group">
                                                <div class="input-group-text">
                                                    <input type="radio" name="Questions[0].CorrectAnswer" value="B">
                                                </div>
                                                <input type="text" name="Questions[0].OptionB" class="form-control" required>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <label class="form-label">Option C</label>
                                            <div class="input-group">
                                                <div class="input-group-text">
                                                    <input type="radio" name="Questions[0].CorrectAnswer" value="C">
                                                </div>
                                                <input type="text" name="Questions[0].OptionC" class="form-control" required>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <label class="form-label">Option D</label>
                                            <div class="input-group">
                                                <div class="input-group-text">
                                                    <input type="radio" name="Questions[0].CorrectAnswer" value="D">
                                                </div>
                                                <input type="text" name="Questions[0].OptionD" class="form-control" required>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="mt-4 text-end">
                            <a asp-action="Quizzes" asp-route-id="@Model.CourseID" class="btn btn-outline-secondary me-2">
                                <i class="fas fa-arrow-left"></i> Back to Quizzes
                            </a>
                            <button type="button" class="btn btn-success me-2" id="previewBtn">
                                <i class="fas fa-eye"></i> Preview
                            </button>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> Create Quiz
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-xl-3">
            <div class="card mb-4 border-info">
                <div class="card-header bg-info text-white">
                    <i class="fas fa-info-circle me-1"></i>
                    Tips for Creating Great Quizzes
                </div>
                <div class="card-body">
                    <ul class="fa-ul">
                        <li class="mb-3">
                            <span class="fa-li"><i class="fas fa-check-circle text-success"></i></span>
                            <strong>Clear Questions:</strong> Keep questions concise and unambiguous
                        </li>
                        <li class="mb-3">
                            <span class="fa-li"><i class="fas fa-check-circle text-success"></i></span>
                            <strong>Plausible Options:</strong> All answer choices should be reasonable
                        </li>
                        <li class="mb-3">
                            <span class="fa-li"><i class="fas fa-check-circle text-success"></i></span>
                            <strong>Varying Difficulty:</strong> Include both easy and challenging questions
                        </li>
                        <li class="mb-3">
                            <span class="fa-li"><i class="fas fa-check-circle text-success"></i></span>
                            <strong>Focus on Learning:</strong> Test key concepts from your lessons
                        </li>
                    </ul>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-file-import me-1"></i>
                    Import Questions
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label for="importFile" class="form-label">Upload Questions File</label>
                        <input type="file" class="form-control" id="importFile" accept=".xlsx,.csv">
                        <div class="form-text">Supported formats: Excel, CSV</div>
                    </div>
                    <div class="d-grid">
                        <button type="button" class="btn btn-outline-primary" id="importBtn">
                            <i class="fas fa-upload"></i> Import Questions
                        </button>
                    </div>
                    <hr>
                    <div class="text-center">
                        <a href="#" class="small text-decoration-none" id="downloadTemplateBtn">
                            <i class="fas fa-download"></i> Download Template
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Preview Modal -->
<div class="modal fade" id="previewModal" tabindex="-1" aria-labelledby="previewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="previewModalLabel">Quiz Preview</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="previewContent">
                    <!-- Preview content will be inserted here -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function() {
            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            });

            // Question counter
            let questionCount = 1;

            // Add question button
            $('#addQuestionBtn').on('click', function() {
                questionCount++;
                const newIndex = $('.question-card').length;

                const newQuestion = `
                    <div class="card mb-4 question-card animate__animated animate__fadeIn" data-question-index="${newIndex}">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <div>
                                <i class="fas fa-question me-1"></i>
                                Question ${questionCount}
                            </div>
                            <div>
                                <button type="button" class="btn btn-sm btn-outline-danger remove-question-btn">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="mb-3">
                                <label class="form-label">Question Text</label>
                                <textarea name="Questions[${newIndex}].QuestionText" class="form-control question-text" rows="2" required></textarea>
                            </div>

                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <label class="form-label">Option A</label>
                                    <div class="input-group">
                                        <div class="input-group-text">
                                            <input type="radio" name="Questions[${newIndex}].CorrectAnswer" value="A" required>
                                        </div>
                                        <input type="text" name="Questions[${newIndex}].OptionA" class="form-control" required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">Option B</label>
                                    <div class="input-group">
                                        <div class="input-group-text">
                                            <input type="radio" name="Questions[${newIndex}].CorrectAnswer" value="B">
                                        </div>
                                        <input type="text" name="Questions[${newIndex}].OptionB" class="form-control" required>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <label class="form-label">Option C</label>
                                    <div class="input-group">
                                        <div class="input-group-text">
                                            <input type="radio" name="Questions[${newIndex}].CorrectAnswer" value="C">
                                        </div>
                                        <input type="text" name="Questions[${newIndex}].OptionC" class="form-control" required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">Option D</label>
                                    <div class="input-group">
                                        <div class="input-group-text">
                                            <input type="radio" name="Questions[${newIndex}].CorrectAnswer" value="D">
                                        </div>
                                        <input type="text" name="Questions[${newIndex}].OptionD" class="form-control" required>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                `;

                $('#questionsContainer').append(newQuestion);

                // Scroll to the new question
                $('html, body').animate({
                    scrollTop: $(`[data-question-index="${newIndex}"]`).offset().top - 100
                }, 300);

                // Focus on the new question text field
                $(`[data-question-index="${newIndex}"] .question-text`).focus();
            });

            // Remove question button
            $(document).on('click', '.remove-question-btn', function() {
                const questionCard = $(this).closest('.question-card');

                // If it's the last question, don't remove it
                if ($('.question-card').length === 1) {
                    toastr.error('You need at least one question in the quiz.');
                    return;
                }

                // Confirm deletion
                Swal.fire({
                    title: 'Remove Question',
                    text: 'Are you sure you want to remove this question?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, remove it',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Remove the question card with animation
                        questionCard.addClass('animate__fadeOut');
                        setTimeout(() => {
                            questionCard.remove();

                            // Update question numbers
                            $('.question-card').each(function(index) {
                                $(this).find('.card-header div:first').html(`<i class="fas fa-question me-1"></i> Question ${index + 1}`);
                                $(this).attr('data-question-index', index);

                                // Update form field names
                                $(this).find('.question-text').attr('name', `Questions[${index}].QuestionText`);
                                $(this).find('input[type="radio"]').attr('name', `Questions[${index}].CorrectAnswer`);
                                $(this).find('input[name$=".OptionA"]').attr('name', `Questions[${index}].OptionA`);
                                $(this).find('input[name$=".OptionB"]').attr('name', `Questions[${index}].OptionB`);
                                $(this).find('input[name$=".OptionC"]').attr('name', `Questions[${index}].OptionC`);
                                $(this).find('input[name$=".OptionD"]').attr('name', `Questions[${index}].OptionD`);
                            });

                            questionCount = $('.question-card').length;
                        }, 300);
                    }
                });
            });

            // Preview button
            $('#previewBtn').on('click', function() {
                // Validate form first
                if (!validateQuizForm()) {
                    toastr.error('Please fill in all required fields before previewing.');
                    return;
                }

                // Get quiz title
                const quizTitle = $('#Title').val();

                // Set modal title
                $('#previewModalLabel').text(`Preview: ${quizTitle}`);

                // Generate quiz preview content
                let previewContent = `
                    <div class="quiz-preview">
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle"></i>
                            This is a preview mode. All questions and answers are shown here for review.
                        </div>

                        <h4 class="mb-4">${quizTitle}</h4>
                `;

                // Add each question to the preview
                $('.question-card').each(function(index) {
                    const questionNumber = index + 1;
                    const questionText = $(this).find('.question-text').val();
                    const optionA = $(this).find('input[name$=".OptionA"]').val();
                    const optionB = $(this).find('input[name$=".OptionB"]').val();
                    const optionC = $(this).find('input[name$=".OptionC"]').val();
                    const optionD = $(this).find('input[name$=".OptionD"]').val();
                    const correctAnswer = $(this).find('input[type="radio"]:checked').val() || '';

                    previewContent += `
                        <div class="card mb-3">
                            <div class="card-header">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <i class="fas fa-question me-1"></i>
                                        Question ${questionNumber}
                                    </div>
                                    <div>
                                        <span class="badge bg-success">Correct: Option ${correctAnswer}</span>
                                    </div>
                                </div>
                            </div>
                            <div class="card-body">
                                <p class="mb-3"><strong>${questionText}</strong></p>

                                <div class="form-check mb-2 ${correctAnswer === 'A' ? 'text-success fw-bold' : ''}">
                                    <input class="form-check-input" type="radio" disabled ${correctAnswer === 'A' ? 'checked' : ''}>
                                    <label class="form-check-label">
                                        A. ${optionA}
                                    </label>
                                </div>

                                <div class="form-check mb-2 ${correctAnswer === 'B' ? 'text-success fw-bold' : ''}">
                                    <input class="form-check-input" type="radio" disabled ${correctAnswer === 'B' ? 'checked' : ''}>
                                    <label class="form-check-label">
                                        B. ${optionB}
                                    </label>
                                </div>

                                <div class="form-check mb-2 ${correctAnswer === 'C' ? 'text-success fw-bold' : ''}">
                                    <input class="form-check-input" type="radio" disabled ${correctAnswer === 'C' ? 'checked' : ''}>
                                    <label class="form-check-label">
                                        C. ${optionC}
                                    </label>
                                </div>

                                <div class="form-check mb-2 ${correctAnswer === 'D' ? 'text-success fw-bold' : ''}">
                                    <input class="form-check-input" type="radio" disabled ${correctAnswer === 'D' ? 'checked' : ''}>
                                    <label class="form-check-label">
                                        D. ${optionD}
                                    </label>
                                </div>
                            </div>
                        </div>
                    `;
                });

                previewContent += `</div>`;

                // Populate modal with preview content
                $('#previewContent').html(previewContent);

                // Show the modal
                const previewModal = new bootstrap.Modal(document.getElementById('previewModal'));
                previewModal.show();
            });

            // Import questions button
            $('#importBtn').on('click', function() {
                const fileInput = $('#importFile')[0];

                if (!fileInput.files.length) {
                    toastr.error('Please select a file to import.');
                    return;
                }

                // Get file extension
                const fileName = fileInput.files[0].name;
                const fileExt = fileName.split('.').pop().toLowerCase();

                // Validate file type
                if (fileExt !== 'xlsx' && fileExt !== 'csv') {
                    toastr.error('Please upload an Excel (.xlsx) or CSV (.csv) file.');
                    return;
                }

                // In a real implementation, you'd process the file
                // For now, just show a loading and then success message
                Swal.fire({
                    title: 'Importing Questions',
                    text: 'Please wait while we process your file...',
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();

                        // Simulate processing delay
                        setTimeout(() => {
                            Swal.close();

                            // Add some sample questions from "import"
                            for (let i = 0; i < 3; i++) {
                                $('#addQuestionBtn').trigger('click');

                                const index = $('.question-card').length - 1;
                                const card = $(`.question-card[data-question-index="${index}"]`);

                                card.find('.question-text').val(`Imported question ${i + 1}`);
                                card.find('input[name$=".OptionA"]').val(`Option A for question ${i + 1}`);
                                card.find('input[name$=".OptionB"]').val(`Option B for question ${i + 1}`);
                                card.find('input[name$=".OptionC"]').val(`Option C for question ${i + 1}`);
                                card.find('input[name$=".OptionD"]').val(`Option D for question ${i + 1}`);
                                card.find('input[value="A"]').prop('checked', true);
                            }

                            toastr.success('Questions imported successfully!');
                        }, 1500);
                    }
                });
            });

            // Download template button
            $('#downloadTemplateBtn').on('click', function(e) {
                e.preventDefault();

                Swal.fire({
                    title: 'Download Template',
                    text: 'Choose your preferred file format:',
                    icon: 'question',
                    showDenyButton: true,
                    showCancelButton: true,
                    confirmButtonText: 'Excel (.xlsx)',
                    denyButtonText: 'CSV (.csv)',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed || result.isDenied) {
                        const format = result.isConfirmed ? 'Excel' : 'CSV';

                        // In a real implementation, you'd generate and download the template file
                        // For now, just show a success message
                        toastr.success(`${format} template downloaded successfully!`);
                    }
                });
            });

            // Form validation
            $('#createQuizForm').on('submit', function(e) {
                if (!validateQuizForm()) {
                    e.preventDefault();
                    toastr.error('Please fill in all required fields.');
                    return false;
                }

                // Show loading
                Swal.fire({
                    title: 'Creating Quiz',
                    text: 'Please wait while we save your quiz...',
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });

                return true;
            });

            // Helper function to validate the quiz form
            function validateQuizForm() {
                let isValid = true;

                // Check quiz title
                if (!$('#Title').val().trim()) {
                    $('#Title').addClass('is-invalid');
                    isValid = false;
                } else {
                    $('#Title').removeClass('is-invalid');
                }

                // Check each question
                $('.question-card').each(function() {
                    const questionText = $(this).find('.question-text').val().trim();
                    const optionA = $(this).find('input[name$=".OptionA"]').val().trim();
                    const optionB = $(this).find('input[name$=".OptionB"]').val().trim();
                    const optionC = $(this).find('input[name$=".OptionC"]').val().trim();
                    const optionD = $(this).find('input[name$=".OptionD"]').val().trim();
                    const correctAnswer = $(this).find('input[type="radio"]:checked').val();

                    // Highlight empty fields
                    if (!questionText) {
                        $(this).find('.question-text').addClass('is-invalid');
                        isValid = false;
                    } else {
                        $(this).find('.question-text').removeClass('is-invalid');
                    }

                    if (!optionA) $(this).find('input[name$=".OptionA"]').addClass('is-invalid');
                    else $(this).find('input[name$=".OptionA"]').removeClass('is-invalid');

                    if (!optionB) $(this).find('input[name$=".OptionB"]').addClass('is-invalid');
                    else $(this).find('input[name$=".OptionB"]').removeClass('is-invalid');

                    if (!optionC) $(this).find('input[name$=".OptionC"]').addClass('is-invalid');
                    else $(this).find('input[name$=".OptionC"]').removeClass('is-invalid');

                    if (!optionD) $(this).find('input[name$=".OptionD"]').addClass('is-invalid');
                    else $(this).find('input[name$=".OptionD"]').removeClass('is-invalid');

                    // Check if a correct answer is selected
                    if (!correctAnswer) {
                        $(this).find('.input-group-text').addClass('border-danger bg-danger text-white');
                        isValid = false;
                    } else {
                        $(this).find('.input-group-text').removeClass('border-danger bg-danger text-white');
                    }

                    if (!questionText || !optionA || !optionB || !optionC || !optionD || !correctAnswer) {
                        isValid = false;
                    }
                });

                return isValid;
            }

            // Make questions sortable
            $('#questionsContainer').sortable({
                handle: '.card-header',
                placeholder: 'card mb-4 bg-light',
                start: function(e, ui) {
                    ui.placeholder.height(ui.item.height());
                },
                update: function(event, ui) {
                    // Update question numbers and indices
                    $('.question-card').each(function(index) {
                        $(this).find('.card-header div:first').html(`<i class="fas fa-question me-1"></i> Question ${index + 1}`);
                        $(this).attr('data-question-index', index);

                        // Update form field names
                        $(this).find('.question-text').attr('name', `Questions[${index}].QuestionText`);
                        $(this).find('input[type="radio"]').attr('name', `Questions[${index}].CorrectAnswer`);
                        $(this).find('input[name$=".OptionA"]').attr('name', `Questions[${index}].OptionA`);
                        $(this).find('input[name$=".OptionB"]').attr('name', `Questions[${index}].OptionB`);
                        $(this).find('input[name$=".OptionC"]').attr('name', `Questions[${index}].OptionC`);
                        $(this).find('input[name$=".OptionD"]').attr('name', `Questions[${index}].OptionD`);
                    });
                }
            });

            // Initialize intro.js
            const startTour = () => {
                introJs().setOptions({
                    steps: [
                        {
                            element: document.querySelector('h1'),
                            intro: "Create a new quiz for your course!"
                        },
                        {
                            element: document.querySelector('#Title').parentNode,
                            intro: "Enter a clear, descriptive title for your quiz"
                        },
                        {
                            element: document.querySelector('#addQuestionBtn'),
                            intro: "Click here to add more questions to your quiz"
                        },
                        {
                            element: document.querySelector('.question-card'),
                            intro: "Add question details and define the correct answer by selecting the radio button"
                        },
                        {
                            element: document.querySelector('#importBtn').parentNode.parentNode,
                            intro: "You can also import questions from an Excel or CSV file"
                        }
                    ]
                }).start();
            };

            // Add a tour button
            $('<button class="btn btn-sm btn-info position-fixed" style="bottom: 20px; right: 20px;"><i class="fas fa-question-circle"></i> Help</button>')
                .appendTo('body')
                .on('click', startTour);
        });
    </script>
}