@model List<DACSN10.Models.Enrollment>
@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Areas/Teacher/Views/Shared/_TeacherLayout.cshtml";

    // Dùng Name hoặc họ tên, có thể thay bằng User.HoTen nếu bạn đã pass qua ViewBag
    var displayName = User.Identity?.Name ?? "Teacher";
    var appUserIdClaim = User.FindFirst("AppUserId")?.Value ?? "";
}

@section Styles {
    <link href="~/css/teacher-dashboard.css" rel="stylesheet" />
}

<!-- Welcome Banner -->
<div class="welcome-banner" data-aos="fade-down">
    <h2 class="mb-3">Chào mừng trở lại, @User.Identity.Name!</h2>
    <p class="mb-0 opacity-90">Hôm nay là @DateTime.Now.ToString("dddd, dd MMMM yyyy", new System.Globalization.CultureInfo("vi-VN"))</p>
</div>

<!-- Statistics Cards -->
<div class="row g-4 mb-4">
    <div class="col-xl-3 col-md-6" data-aos="fade-up" data-aos-delay="100">
        <div class="stat-card primary">
            <div class="stat-icon"><i class="fas fa-book-open"></i></div>
            <div class="stat-value counter" data-target="@ViewBag.TotalCourses">0</div>
            <div class="stat-label">Tổng khóa học</div>
        </div>
    </div>
    <div class="col-xl-3 col-md-6" data-aos="fade-up" data-aos-delay="200">
        <div class="stat-card success">
            <div class="stat-icon"><i class="fas fa-check-circle"></i></div>
            <div class="stat-value counter" data-target="@ViewBag.ActiveCourses">0</div>
            <div class="stat-label">Khóa học đang hoạt động</div>
        </div>
    </div>
    <div class="col-xl-3 col-md-6" data-aos="fade-up" data-aos-delay="300">
        <div class="stat-card warning">
            <div class="stat-icon"><i class="fas fa-users"></i></div>
            <div class="stat-value counter" data-target="@ViewBag.TotalStudents">0</div>
            <div class="stat-label">Tổng học viên</div>
        </div>
    </div>
    <div class="col-xl-3 col-md-6" data-aos="fade-up" data-aos-delay="400">
        <div class="stat-card info">
            <div class="stat-icon"><i class="fas fa-dollar-sign"></i></div>
            <div class="stat-value">@ViewBag.TotalRevenue.ToString("N0")₫</div>
            <div class="stat-label">Tổng doanh thu</div>
        </div>
    </div>
</div>

<!-- Quick Actions -->
<div class="quick-actions" data-aos="fade-up">
    <a href="@Url.Action("CreateCourse", "Teacher")" class="action-card">
        <div class="action-icon" style="background: linear-gradient(135deg, #3b82f6, #1d4ed8);">
            <i class="fas fa-plus"></i>
        </div>
        <h5>Tạo khóa học mới</h5>
        <p class="text-muted mb-0">Thêm khóa học mới vào hệ thống</p>
    </a>

    <a href="@Url.Action("MyStudents", "Teacher")" class="action-card">
        <div class="action-icon" style="background: linear-gradient(135deg, #10b981, #059669);">
            <i class="fas fa-user-graduate"></i>
        </div>
        <h5>Quản lý học viên</h5>
        <p class="text-muted mb-0">Xem danh sách học viên</p>
    </a>

    <a href="@Url.Action("Statistics", "Teacher")" class="action-card">
        <div class="action-icon" style="background: linear-gradient(135deg, #f59e0b, #d97706);">
            <i class="fas fa-chart-line"></i>
        </div>
        <h5>Thống kê chi tiết</h5>
        <p class="text-muted mb-0">Xem báo cáo và phân tích</p>
    </a>

    <a href="@Url.Action("TeacherReports", "Teacher")" class="action-card">
        <div class="action-icon" style="background: linear-gradient(135deg, #8b5cf6, #7c3aed);">
            <i class="fas fa-file-alt"></i>
        </div>
        <h5>Báo cáo</h5>
        <p class="text-muted mb-0">Xuất báo cáo hoạt động</p>
    </a>

    <!-- NEW: Livestream Quick Actions -->
    <a href="#" class="action-card" onclick="startLivestreamFromLayout(); return false;">
        <div class="action-icon" style="background: linear-gradient(135deg, #ef4444, #b91c1c);">
            <i class="fas fa-circle-play"></i>
        </div>
        <h5>Bắt đầu Livestream</h5>
        <p class="text-muted mb-0">Tạo/đi vào phòng phát trực tiếp</p>
    </a>

    <a href="#" class="action-card" onclick="openStudentViewerFromLayout(); return false;">
        <div class="action-icon" style="background: linear-gradient(135deg, #06b6d4, #0e7490);">
            <i class="fas fa-eye"></i>
        </div>
        <h5>Xem như học viên</h5>
        <p class="text-muted mb-0">Mở trang xem livestream</p>
    </a>
</div>

<div class="row mt-4">
    <!-- Recent Enrollments -->
    <div class="col-lg-8" data-aos="fade-up">
        <div class="recent-section">
            <div class="section-header">
                <h3 class="section-title">
                    <i class="fas fa-history text-primary"></i>
                    Đăng ký gần đây
                </h3>
            </div>

            @if (Model != null && Model.Any())
            {
                <div class="enrollment-list">
                    @foreach (var enrollment in Model)
                    {
                        <div class="enrollment-item d-flex align-items-center">
                            <img src="https://ui-avatars.com/api/?name=@Uri.EscapeDataString(enrollment.User?.HoTen ?? "User")&background=667eea&color=fff&bold=true"
                                 alt="@enrollment.User?.HoTen"
                                 class="student-avatar">
                            <div class="enrollment-info">
                                <div class="student-name">@enrollment.User?.HoTen</div>
                                <div class="course-name">Khóa học: @enrollment.Course?.TenKhoaHoc</div>
                                <div class="enrollment-date">
                                    <i class="far fa-clock me-1"></i>
                                    @enrollment.EnrollDate.ToString("dd/MM/yyyy HH:mm")
                                </div>
                            </div>
                            <div><span class="badge bg-success">Active</span></div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="text-center py-4">
                    <i class="fas fa-inbox fa-3x text-muted mb-3"></i>
                    <p class="text-muted">Chưa có đăng ký mới</p>
                </div>
            }
        </div>
    </div>

    <!-- Activity Chart -->
    <div class="col-lg-4" data-aos="fade-up" data-aos-delay="100">
        <div class="chart-container">
            <h4 class="mb-3">Hoạt động tuần này</h4>
            <canvas id="activityChart"></canvas>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Counter animation
        document.addEventListener('DOMContentLoaded', function() {
            const counters = document.querySelectorAll('.counter');
            counters.forEach(counter => {
                const target = +counter.getAttribute('data-target');
                const increment = target / 100;
                function updateCounter() {
                    const current = +counter.innerText;
                    if (current < target) { counter.innerText = Math.ceil(current + increment); setTimeout(updateCounter, 20); }
                    else { counter.innerText = target; }
                }
                updateCounter();
            });

            // Activity Chart
            const ctx = document.getElementById('activityChart').getContext('2d');
            const activityChart = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: ['Bài học', 'Bài tập', 'Quiz', 'Thảo luận'],
                    datasets: [{
                        data: [35, 25, 20, 20],
                        backgroundColor: [
                            'rgba(59, 130, 246, 0.8)',
                            'rgba(16, 185, 129, 0.8)',
                            'rgba(245, 158, 11, 0.8)',
                            'rgba(139, 92, 246, 0.8)'
                        ],
                        borderWidth: 0
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: { position: 'bottom', labels: { padding: 15, font: { size: 12 } } }
                    }
                }
            });
        });

        // Fallback: nếu _Layout không load các hàm livestream vì khác layout area
        (function(){
            if (typeof window.startLivestreamFromLayout === 'function' &&
                typeof window.openStudentViewerFromLayout === 'function') return;

            const DISPLAY_NAME = '@displayName'.replace(/'/g, "\\'");
            const CLAIM_APP_USER_ID = '@appUserIdClaim';
            const LIVE_API_BASE = '/spring';
            const parseNumeric = v => Number.isFinite(Number(v)) ? Number(v) : NaN;

            async function createOrGetRoom(teacherId) {
                const resp = await fetch(`${LIVE_API_BASE}/api/rooms`, {
                    method: 'POST', headers: {'Content-Type':'application/json'},
                    body: JSON.stringify({ teacherId })
                });
                if (!resp.ok) throw new Error('Không tạo được phòng: ' + resp.status);
                return await resp.json();
            }

            window.startLivestreamFromLayout = async function(){
                try {
                    let teacherId = parseNumeric(CLAIM_APP_USER_ID);
                    if (!Number.isFinite(teacherId)) {
                        const input = prompt('Nhập TeacherId (số) để tạo/đi vào phòng live:','');
                        teacherId = parseNumeric(input);
                        if (!Number.isFinite(teacherId)) return;
                    }
                    await createOrGetRoom(teacherId);
                    const uidNum = parseNumeric(CLAIM_APP_USER_ID);
                    const uid = Number.isFinite(uidNum) ? uidNum : 0;
                    location.href = `/Live/Teacher?teacherId=${teacherId}&userId=${uid}&displayName=${encodeURIComponent(DISPLAY_NAME)}`;
                } catch(e) { alert(e.message || e); }
            };

            window.openStudentViewerFromLayout = async function(){
                try {
                    let teacherId = parseNumeric(CLAIM_APP_USER_ID);
                    if (!Number.isFinite(teacherId)) {
                        const input = prompt('Nhập TeacherId (số) để mở trang xem live:','');
                        teacherId = parseNumeric(input);
                        if (!Number.isFinite(teacherId)) return;
                    }
                    const room = await createOrGetRoom(teacherId);
                    const uidNum = parseNumeric(CLAIM_APP_USER_ID);
                    const uid = Number.isFinite(uidNum) ? uidNum : 0;
                    location.href = `/Live/Student?roomId=${room.roomId}&userId=${uid}&displayName=${encodeURIComponent('Student')}`;
                } catch(e) { alert(e.message || e); }
            };
        })();
    </script>
}