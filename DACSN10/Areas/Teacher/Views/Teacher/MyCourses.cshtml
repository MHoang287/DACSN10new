@model List<DACSN10.Models.Course>
@{
    ViewData["Title"] = "Khóa học của tôi";
    Layout = "~/Areas/Teacher/Views/Shared/_TeacherLayout.cshtml";

    var totalPages = ViewBag.TotalPages ?? 1;
    var currentPage = ViewBag.Page ?? 1;
}

@section Styles {
    <link href="~/css/teacher-mycourses.css" rel="stylesheet" />
}

<!-- Page Header -->
<div class="page-header" data-aos="fade-down">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1 class="page-title">Khóa học của tôi</h1>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Dashboard", "Teacher")">Dashboard</a></li>
                    <li class="breadcrumb-item active">Khóa học</li>
                </ol>
            </nav>
        </div>
        <a href="@Url.Action("CreateCourse", "Teacher")" class="btn btn-primary">
            <i class="fas fa-plus me-2"></i>Tạo khóa học mới
        </a>
    </div>
</div>

<!-- Filters -->
<div class="course-filters" data-aos="fade-up">
    <div class="filter-group">
        <select class="filter-select" id="statusFilter">
            <option value="">Tất cả trạng thái</option>
            <option value="Active">Đang hoạt động</option>
            <option value="Pending">Chờ duyệt</option>
            <option value="Inactive">Không hoạt động</option>
        </select>

        <select class="filter-select" id="sortFilter">
            <option value="newest">Mới nhất</option>
            <option value="oldest">Cũ nhất</option>
            <option value="students">Nhiều học viên nhất</option>
            <option value="price-high">Giá cao nhất</option>
            <option value="price-low">Giá thấp nhất</option>
        </select>

        <div class="ms-auto">
            <span class="text-muted">Tổng cộng: <strong>@Model.Count</strong> khóa học</span>
        </div>
    </div>
</div>

<!-- Courses Grid -->
@if (Model != null && Model.Any())
{
    <div class="course-grid" data-aos="fade-up">
        @foreach (var course in Model)
        {
            <div class="course-card">
                <div class="course-header">
                    <i class="fas fa-book-open course-icon"></i>
                    <span class="course-status status-@course.TrangThai.ToLower()">
                        @switch (course.TrangThai)
                        {
                            case "Active":
                                <text>Đang hoạt động</text>
                                break;
                            case "Pending":
                                <text>Chờ duyệt</text>
                                break;
                            default:
                                <text>Không hoạt động</text>
                                break;
                        }
                    </span>
                </div>

                <div class="course-body">
                    <h3 class="course-title">@course.TenKhoaHoc</h3>

                    @if (course.CourseCategories != null && course.CourseCategories.Any())
                    {
                        <div class="course-categories">
                            @foreach (var cc in course.CourseCategories.Take(3))
                            {
                                <span class="category-badge">@cc.Category?.Name</span>
                            }
                        </div>
                    }

                    <div class="course-price">
                        @if (course.Gia > 0)
                        {
                            <span>@course.Gia.ToString("N0")₫</span>
                        }
                        else
                        {
                            <span>Miễn phí</span>
                        }
                    </div>

                    <div class="course-stats">
                        <div class="stat-item">
                            <div class="stat-value">@(course.Enrollments?.Count ?? 0)</div>
                            <div class="stat-label">Học viên</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-value">@(course.Lessons?.Count ?? 0)</div>
                            <div class="stat-label">Bài học</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-value">@(course.Quizzes?.Count ?? 0)</div>
                            <div class="stat-label">Bài kiểm tra</div>
                        </div>
                    </div>
                </div>

                <div class="course-footer">
                    <a href="@Url.Action("EditCourse", "Teacher", new { id = course.CourseID })" class="btn-course btn-primary">
                        <i class="fas fa-edit me-1"></i>Chỉnh sửa
                    </a>
                    <a href="@Url.Action("CourseLessons", "Teacher", new { courseId = course.CourseID })" class="btn-course btn-secondary">
                        <i class="fas fa-list me-1"></i>Bài học
                    </a>
                    <button class="btn-course btn-danger" onclick="deleteCourse(@course.CourseID, '@course.TenKhoaHoc')">
                        <i class="fas fa-trash me-1"></i>Xóa
                    </button>
                </div>
            </div>
        }
    </div>

    <!-- Pagination -->
    @if (totalPages > 1)
    {
        <div class="pagination-container">
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    @if (currentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("MyCourses", new { page = currentPage - 1 })">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        </li>
                    }

                    @for (int i = 1; i <= totalPages; i++)
                    {
                        <li class="page-item">
                            <a class="page-link @(i == currentPage ? "active" : "")"
                               href="@Url.Action("MyCourses", new { page = i })">@i</a>
                        </li>
                    }

                    @if (currentPage < totalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("MyCourses", new { page = currentPage + 1 })">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    }
}
else
{
    <div class="empty-state" data-aos="fade-up">
        <div class="empty-icon">
            <i class="fas fa-book-open"></i>
        </div>
        <h3>Bạn chưa có khóa học nào</h3>
        <p class="text-muted">Bắt đầu chia sẻ kiến thức của bạn bằng cách tạo khóa học đầu tiên</p>
        <a href="@Url.Action("CreateCourse", "Teacher")" class="create-course-btn">
            <i class="fas fa-plus-circle"></i>
            Tạo khóa học đầu tiên
        </a>
    </div>
}

@section Scripts {
    <script>
        // Delete course
        function deleteCourse(courseId, courseName) {
            Swal.fire({
                title: 'Xác nhận xóa',
                html: `Bạn có chắc chắn muốn xóa khóa học "<strong>${courseName}</strong>"?<br>
                       <small class="text-danger">Hành động này không thể hoàn tác!</small>`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#dc2626',
                cancelButtonColor: '#6b7280',
                confirmButtonText: '<i class="fas fa-trash me-2"></i>Xóa khóa học',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteCourse", "Teacher")',
                        type: 'POST',
                        data: {
                            id: courseId,
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function(response) {
                            if (response.success) {
                                Swal.fire({
                                    title: 'Đã xóa!',
                                    text: response.message,
                                    icon: 'success',
                                    confirmButtonColor: '#10b981'
                                }).then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire('Lỗi!', response.message, 'error');
                            }
                        },
                        error: function() {
                            Swal.fire('Lỗi!', 'Có lỗi xảy ra khi xóa khóa học.', 'error');
                        }
                    });
                }
            });
        }

        // Filter courses
        $('#statusFilter, #sortFilter').on('change', function() {
            // Implement filtering logic here
            toastr.info('Chức năng lọc đang được phát triển');
        });
    </script>

    @Html.AntiForgeryToken()
}