@model List<DACSN10.Models.Course>
@{
    ViewData["Title"] = "Khóa học yêu thích - OnlineLearning";
    var totalPages = ViewBag.TotalPages ?? 1;
    var currentPage = ViewBag.Page ?? 1;
    var totalFavorites = ViewBag.TotalFavorites ?? 0;
}

@section Styles {
    <link rel="stylesheet" href="https://unpkg.com/aos@2.3.1/dist/aos.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.css" />
    <link href="~/css/FavoriteCourses.css" rel="stylesheet" />
}

<!-- Favorites Header -->
<section class="favorites-header">
    <div class="container-fluid px-4 px-md-5">
        <div class="favorites-content text-center" data-aos="fade-up">
            <h1 class="display-4 fw-bold mb-3">
                <i class="fas fa-heart me-3"></i>Khóa học yêu thích
            </h1>
            <p class="fs-5 mb-0">
                Quản lý danh sách @totalFavorites khóa học yêu thích của bạn
            </p>
        </div>
    </div>
</section>

<div class="container-fluid px-4 px-md-5">
    <!-- Stats Summary -->
    <div class="stats-summary" data-aos="fade-up">
        <div class="total-favorites">@totalFavorites</div>
        <div class="favorites-label">Khóa học yêu thích</div>
    </div>

    <!-- Search Section -->
    <div class="search-favorites" data-aos="fade-up">
        <div class="row align-items-center">
            <div class="col-md-8">
                <input type="text" class="search-input-favorite" id="searchFavorites"
                       placeholder="Tìm kiếm trong danh sách yêu thích...">
            </div>
            <div class="col-md-4 text-end">
                <button class="btn btn-outline-danger" onclick="clearAllFavorites()">
                    <i class="fas fa-trash me-2"></i>Xóa tất cả
                </button>
            </div>
        </div>
    </div>

    <!-- Favorites Grid -->
    @if (Model != null && Model.Any())
    {
        <div class="row" id="favoritesContainer">
            @foreach (var course in Model)
            {
                <div class="col-lg-4 col-md-6 mb-4 favorite-item" data-name="@course.TenKhoaHoc.ToLower()">
                    <div class="favorite-card" data-aos="fade-up" data-aos-delay="@((Model.IndexOf(course) % 3) * 100)">
                        <div class="course-image-favorite">
                            <div class="favorite-badge">
                                <i class="fas fa-heart me-1"></i>Yêu thích
                            </div>
                            <div class="text-center">
                                <i class="fas fa-graduation-cap fa-4x mb-3"></i>
                                <div style="font-size: 1.1rem; font-weight: 600;">@course.TenKhoaHoc</div>
                            </div>
                        </div>

                        <div class="course-content-favorite">
                            <h3 class="course-title-favorite">@course.TenKhoaHoc</h3>

                            <div class="course-teacher-favorite">
                                <img src="https://ui-avatars.com/api/?name=@Uri.EscapeDataString(course.User?.HoTen ?? "Teacher")&background=ec4899&color=fff&bold=true&size=32"
                                     alt="@course.User?.HoTen" class="teacher-avatar-favorite">
                                <span>@(course.User?.HoTen ?? "Chưa có thông tin")</span>
                            </div>

                            <div class="course-stats-favorite">
                                <div class="stat-item-favorite">
                                    <div class="stat-number-favorite">@(course.Enrollments?.Count ?? 0)</div>
                                    <div class="stat-label-favorite">Học viên</div>
                                </div>
                                <div class="stat-item-favorite">
                                    <div class="stat-number-favorite">@(course.Lessons?.Count ?? 0)</div>
                                    <div class="stat-label-favorite">Bài học</div>
                                </div>
                                <div class="stat-item-favorite">
                                    <div class="stat-number-favorite">@(course.Quizzes?.Count ?? 0)</div>
                                    <div class="stat-label-favorite">Kiểm tra</div>
                                </div>
                            </div>

                            <div class="course-price-favorite">
                                @if (course.Gia > 0)
                                {
                                    <span>@course.Gia.ToString("N0")₫</span>
                                }
                                else
                                {
                                    <span class="text-success">Miễn phí</span>
                                }
                            </div>

                            <div class="course-actions-favorite">
                                <a href="@Url.Action("Details", new { id = course.CourseID })"
                                   class="btn-primary-favorite">
                                    <i class="fas fa-eye me-2"></i>Xem chi tiết
                                </a>

                                <button class="btn-remove-favorite" onclick="removeFromFavorites(@course.CourseID)" title="Xóa khỏi yêu thích">
                                    <i class="fas fa-heart-broken"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination -->
        @if (totalPages > 1)
        {
            <nav class="pagination-favorite">
                <ul class="pagination mb-0">
                    @if (currentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("FavoriteCourses", new { page = currentPage - 1 })">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        </li>
                    }

                    @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                    {
                        <li class="page-item @(i == currentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("FavoriteCourses", new { page = i })">@i</a>
                        </li>
                    }

                    @if (currentPage < totalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("FavoriteCourses", new { page = currentPage + 1 })">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        }
    }
    else
    {
        <div class="empty-favorites" data-aos="fade-up">
            <i class="fas fa-heart"></i>
            <h3>Chưa có khóa học yêu thích nào</h3>
            <p class="mb-4">Hãy khám phá và thêm các khóa học bạn quan tâm vào danh sách yêu thích</p>
            <a href="@Url.Action("Index")" class="btn btn-primary btn-lg">
                <i class="fas fa-search me-2"></i>Khám phá khóa học
            </a>
        </div>
    }
</div>

@section Scripts {
    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        // Initialize AOS
        AOS.init({
            duration: 1000,
            easing: 'ease-out-quart',
            once: true
        });

        $(document).ready(function() {
            // Search functionality
            let searchTimeout;
            $('#searchFavorites').on('input', function() {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(searchFavorites, 300);
            });
        });

        function searchFavorites() {
            const searchTerm = $('#searchFavorites').val().toLowerCase();
            const favorites = $('.favorite-item');

            favorites.each(function() {
                const courseName = $(this).data('name');
                const matchesSearch = !searchTerm || courseName.includes(searchTerm);
                $(this).toggle(matchesSearch);
            });

            // Show message if no results
            const visibleFavorites = $('.favorite-item:visible');
            if (visibleFavorites.length === 0 && searchTerm) {
                if ($('#noResults').length === 0) {
                    $('#favoritesContainer').append(`
                        <div class="col-12" id="noResults">
                            <div class="text-center py-5">
                                <i class="fas fa-search fa-3x text-muted mb-3"></i>
                                <h4 class="text-muted">Không tìm thấy khóa học nào</h4>
                                <p class="text-muted">Thử tìm kiếm với từ khóa khác</p>
                            </div>
                        </div>
                    `);
                }
            } else {
                $('#noResults').remove();
            }
        }

        function removeFromFavorites(courseId) {
            Swal.fire({
                title: 'Xóa khỏi yêu thích?',
                text: 'Bạn có chắc muốn xóa khóa học này khỏi danh sách yêu thích không?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#ef4444',
                cancelButtonColor: '#6b7280',
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy',
                customClass: {
                    confirmButton: 'btn btn-danger',
                    cancelButton: 'btn btn-secondary'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('@Url.Action("RemoveFromFavorite")', {
                        courseId: courseId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    })
                    .done(function(response) {
                        if (response.success) {
                            Swal.fire({
                                title: 'Đã xóa!',
                                text: response.message,
                                icon: 'success',
                                timer: 2000,
                                showConfirmButton: false
                            }).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire({
                                title: 'Lỗi!',
                                text: response.message,
                                icon: 'error'
                            });
                        }
                    })
                    .fail(function() {
                        Swal.fire({
                            title: 'Lỗi!',
                            text: 'Có lỗi xảy ra khi xóa khỏi yêu thích',
                            icon: 'error'
                        });
                    });
                }
            });
        }

        function clearAllFavorites() {
            if (@totalFavorites === 0) {
                Swal.fire({
                    title: 'Thông báo',
                    text: 'Danh sách yêu thích đã trống',
                    icon: 'info'
                });
                return;
            }

            Swal.fire({
                title: 'Xóa tất cả yêu thích?',
                text: 'Bạn có chắc muốn xóa tất cả khóa học khỏi danh sách yêu thích không? Hành động này không thể hoàn tác.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#ef4444',
                cancelButtonColor: '#6b7280',
                confirmButtonText: 'Xóa tất cả',
                cancelButtonText: 'Hủy',
                customClass: {
                    confirmButton: 'btn btn-danger',
                    cancelButton: 'btn btn-secondary'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    // Show loading
                    Swal.fire({
                        title: 'Đang xử lý...',
                        text: 'Vui lòng chờ trong giây lát',
                        allowOutsideClick: false,
                        allowEscapeKey: false,
                        showConfirmButton: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    });

                    // Simulate clearing all favorites (you'll need to implement this endpoint)
                    setTimeout(() => {
                        Swal.fire({
                            title: 'Hoàn thành!',
                            text: 'Đã xóa tất cả khóa học khỏi danh sách yêu thích',
                            icon: 'success',
                            timer: 2000,
                            showConfirmButton: false
                        }).then(() => {
                            location.reload();
                        });
                    }, 2000);
                }
            });
        }

        // Configure toastr
        toastr.options = {
            "closeButton": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "timeOut": 3000
        };
    </script>

    @Html.AntiForgeryToken()
}