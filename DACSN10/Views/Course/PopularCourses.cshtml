@model List<DACSN10.Models.Course>
@{
    ViewData["Title"] = "Khóa học phổ biến - OnlineLearning";
    var totalPages = ViewBag.TotalPages ?? 1;
    var currentPage = ViewBag.Page ?? 1;
    var totalCourses = ViewBag.TotalCourses ?? 0;
}

@section Styles {
    <link rel="stylesheet" href="https://unpkg.com/aos@2.3.1/dist/aos.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.css" />
    <link href="~/css/PopularCourses.css" rel="stylesheet" />
}

<!-- Popular Header -->
<section class="popular-header">
    <div class="container-fluid px-4 px-md-5">
        <div class="popular-content text-center" data-aos="fade-up">
            <div class="trending-badge">
                <i class="fas fa-fire fire-icon me-2"></i>Xu hướng hot nhất
            </div>

            <h1 class="display-4 fw-bold mb-3">
                <i class="fas fa-fire fire-icon me-3"></i>Khóa học phổ biến
            </h1>
            <p class="fs-5 mb-0">
                Khám phá @totalCourses khóa học được yêu thích nhất với hàng nghìn học viên đã tham gia
            </p>
        </div>
    </div>
</section>

<div class="container-fluid px-4 px-md-5">
    <!-- Stats Banner -->
    <div class="stats-banner" data-aos="fade-up">
        <div class="stats-grid">
            <div class="stat-item">
                <div class="stat-number">@totalCourses</div>
                <div class="stat-label">Khóa học phổ biến</div>
            </div>
            <div class="stat-item">
                <div class="stat-number" id="totalStudents">0</div>
                <div class="stat-label">Học viên tham gia</div>
            </div>
            <div class="stat-item">
                <div class="stat-number">4.8</div>
                <div class="stat-label">Đánh giá trung bình</div>
            </div>
            <div class="stat-item">
                <div class="stat-number">95%</div>
                <div class="stat-label">Tỷ lệ hoàn thành</div>
            </div>
        </div>
    </div>

    <!-- Top Courses Banner -->
    <div class="top-courses-banner" data-aos="fade-up">
        <div class="banner-icon">
            <i class="fas fa-trophy"></i>
        </div>
        <h3 class="fw-bold text-warning">Top khóa học được yêu thích nhất</h3>
        <p class="mb-0">Được xếp hạng dựa trên số lượng học viên đăng ký và tỷ lệ hoàn thành cao</p>
    </div>

    <!-- Filter Section -->
    <div class="filter-section" data-aos="fade-up">
        <div class="filter-tabs">
            <button class="filter-tab active" onclick="filterCourses('all')">
                <i class="fas fa-fire me-2"></i>Tất cả
            </button>
            <button class="filter-tab" onclick="filterCourses('free')">
                <i class="fas fa-gift me-2"></i>Miễn phí
            </button>
            <button class="filter-tab" onclick="filterCourses('premium')">
                <i class="fas fa-star me-2"></i>Premium
            </button>
            <button class="filter-tab" onclick="filterCourses('newest')">
                <i class="fas fa-clock me-2"></i>Mới nhất
            </button>
        </div>
    </div>

    <!-- Popular Courses Grid -->
    @if (Model != null && Model.Any())
    {
        <div class="popular-grid" id="coursesContainer">
            @foreach (var course in Model.Select((value, index) => new { value, index }))
            {
                <div class="popular-course-card course-item"
                     data-aos="fade-up"
                     data-aos-delay="@((course.index % 3) * 100)"
                     data-price="@course.value.Gia"
                     data-created="@course.value.NgayTao.ToString("yyyy-MM-dd")">

                    <div class="popular-rank">@(course.index + 1)</div>

                    <div class="course-image-popular">
                        <div class="popular-badge">
                            <i class="fas fa-fire me-1"></i>HOT
                        </div>
                        <div class="text-center">
                            <i class="fas fa-graduation-cap fa-4x mb-3"></i>
                            <div style="font-size: 1.1rem; font-weight: 600;">Top @(course.index + 1)</div>
                        </div>
                    </div>

                    <div class="course-content-popular">
                        <div class="trending-indicator">
                            <i class="fas fa-trending-up trend-arrow"></i>
                            <span>Đang thịnh hành</span>
                        </div>

                        <h3 class="course-title-popular">@course.value.TenKhoaHoc</h3>

                        <div class="course-teacher-popular">
                            <img src="https://ui-avatars.com/api/?name=@Uri.EscapeDataString(course.value.User?.HoTen ?? "Teacher")&background=ff6b6b&color=fff&bold=true&size=32"
                                 alt="@course.value.User?.HoTen" class="teacher-avatar-popular">
                            <span>@(course.value.User?.HoTen ?? "Chưa có thông tin")</span>
                        </div>

                        <div class="popularity-indicators">
                            <div class="popularity-item">
                                <div class="popularity-number">@(course.value.Enrollments?.Count ?? 0)</div>
                                <div class="popularity-label">Học viên</div>
                            </div>
                            <div class="popularity-item">
                                <div class="popularity-number">@(course.value.Lessons?.Count ?? 0)</div>
                                <div class="popularity-label">Bài học</div>
                            </div>
                            <div class="popularity-item">
                                <div class="popularity-number">4.@(8 + course.index % 2)</div>
                                <div class="popularity-label">Đánh giá</div>
                            </div>
                        </div>

                        <div class="course-price-popular">
                            @if (course.value.Gia > 0)
                            {
                                <span>@course.value.Gia.ToString("N0")₫</span>
                            }
                            else
                            {
                                <span class="text-success">Miễn phí</span>
                            }
                        </div>

                        <div class="course-actions-popular">
                            <a href="@Url.Action("Details", new { id = course.value.CourseID })"
                               class="btn-enroll-popular">
                                <i class="fas fa-fire me-2"></i>Tham gia ngay
                            </a>

                            @if (User.Identity.IsAuthenticated)
                            {
                                <button class="btn-favorite-popular" onclick="toggleFavorite(@course.value.CourseID)" title="Thêm vào yêu thích">
                                    <i class="far fa-heart"></i>
                                </button>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination -->
        @if (totalPages > 1)
        {
            <nav class="pagination-popular">
                <ul class="pagination mb-0">
                    @if (currentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("PopularCourses", new { page = currentPage - 1 })">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        </li>
                    }

                    @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                    {
                        <li class="page-item @(i == currentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("PopularCourses", new { page = i })">@i</a>
                        </li>
                    }

                    @if (currentPage < totalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("PopularCourses", new { page = currentPage + 1 })">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        }
    }
    else
    {
        <div class="text-center py-5" data-aos="fade-up">
            <div class="mb-4">
                <i class="fas fa-fire fa-5x text-muted"></i>
            </div>
            <h3 class="text-muted mb-3">Chưa có khóa học phổ biến nào</h3>
            <p class="text-muted mb-4">Hệ thống đang được cập nhật, vui lòng quay lại sau!</p>
            <a href="@Url.Action("Index")" class="btn btn-primary btn-lg">
                <i class="fas fa-search me-2"></i>Khám phá tất cả khóa học
            </a>
        </div>
    }
</div>

@section Scripts {
    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
    <script>
        // Initialize AOS
        AOS.init({
            duration: 1000,
            easing: 'ease-out-quart',
            once: true
        });

        $(document).ready(function() {
            // Calculate total students
            let totalStudents = 0;
            $('.popularity-number').each(function() {
                const text = $(this).text();
                if (!isNaN(text) && $(this).closest('.popularity-item').find('.popularity-label').text() === 'Học viên') {
                    totalStudents += parseInt(text);
                }
            });

            // Animate total students counter
            animateCounter($('#totalStudents'), totalStudents);
        });

        function animateCounter(element, target) {
            let current = 0;
            const increment = target / 50;
            const timer = setInterval(() => {
                current += increment;
                if (current >= target) {
                    current = target;
                    clearInterval(timer);
                }
                element.text(Math.floor(current).toLocaleString());
            }, 40);
        }

        function filterCourses(filter) {
            // Update active tab
            $('.filter-tab').removeClass('active');
            event.target.classList.add('active');

            // Filter courses
            const courses = $('.course-item');

            courses.each(function() {
                const $course = $(this);
                const price = parseFloat($course.data('price'));
                const created = new Date($course.data('created'));
                const now = new Date();
                const daysDiff = (now - created) / (1000 * 60 * 60 * 24);

                let shouldShow = true;

                switch(filter) {
                    case 'free':
                        shouldShow = price === 0;
                        break;
                    case 'premium':
                        shouldShow = price > 0;
                        break;
                    case 'newest':
                        shouldShow = daysDiff <= 30; // Courses created within 30 days
                        break;
                    case 'all':
                    default:
                        shouldShow = true;
                        break;
                }

                $course.toggle(shouldShow);
            });

            // Re-trigger AOS for visible items
            AOS.refresh();
        }

        function toggleFavorite(courseId) {
        @if (User.Identity.IsAuthenticated)
        {
            <text>
                    $.post('@Url.Action("AddToFavorite", "Course")', {
                        courseId: courseId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    })
                    .done(function(response) {
                        if (response.success) {
                            toastr.success(response.message);
                        } else {
                            toastr.error(response.message);
                        }
                    })
                    .fail(function() {
                        toastr.error('Có lỗi xảy ra!');
                    });
            </text>
        }
        else
        {
            <text>
                    window.location.href = '/Identity/Account/Login';
            </text>
        }
        }

        // Configure toastr
        if (typeof toastr !== 'undefined') {
            toastr.options = {
                "closeButton": true,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "timeOut": 3000
            };
        }
    </script>

    @if (User.Identity.IsAuthenticated)
    {
        @Html.AntiForgeryToken()
    }
}