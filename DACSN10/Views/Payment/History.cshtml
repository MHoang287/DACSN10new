@model IEnumerable<DACSN10.Models.Payment>
@{
    ViewData["Title"] = "Lịch sử thanh toán - OnlineLearning";
    var totalAmount = ViewBag.TotalAmount ?? 0m;
    var successCount = ViewBag.SuccessCount ?? 0;
    var pendingCount = ViewBag.PendingCount ?? 0;
    var failedCount = ViewBag.FailedCount ?? 0;
    var currentStatus = ViewBag.CurrentStatus ?? "";
    var currentPage = ViewBag.CurrentPage ?? 1;
    var totalPages = ViewBag.TotalPages ?? 1;
}

@section Styles {
    <link rel="stylesheet" href="https://unpkg.com/aos@2.3.1/dist/aos.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    <style>
        .history-section {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
            padding: 40px 0;
        }
        
        .stats-card {
            background: white;
            border-radius: 15px;
            padding: 25px;
            text-align: center;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
            transition: all 0.3s ease;
            height: 100%;
        }
        
        .stats-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
        }
        
        .stats-number {
            font-size: 2.5rem;
            font-weight: bold;
            margin-bottom: 10px;
        }
        
        .filter-tabs {
            background: white;
            border-radius: 15px;
            padding: 10px;
            margin: 30px 0;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        }
        
        .filter-tab {
            border: none;
            background: transparent;
            padding: 12px 25px;
            border-radius: 10px;
            margin: 0 5px;
            transition: all 0.3s ease;
            font-weight: 600;
        }
        
        .filter-tab.active {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }
        
        .payment-item {
            background: white;
            border-radius: 15px;
            padding: 25px;
            margin-bottom: 20px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
            transition: all 0.3s ease;
            border-left: 5px solid transparent;
        }
        
        .payment-item:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
        }
        
        .payment-item.success {
            border-left-color: #28a745;
        }
        
        .payment-item.pending {
            border-left-color: #ffc107;
        }
        
        .payment-item.failed {
            border-left-color: #dc3545;
        }
        
        .status-badge {
            padding: 8px 16px;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 600;
            text-transform: uppercase;
        }
        
        .status-success {
            background: #d4edda;
            color: #155724;
        }
        
        .status-pending {
            background: #fff3cd;
            color: #856404;
        }
        
        .status-failed {
            background: #f8d7da;
            color: #721c24;
        }
        
        .pagination {
            justify-content: center;
        }
        
        .page-link {
            border-radius: 10px;
            margin: 0 5px;
            border: none;
            color: #667eea;
        }
        
        .page-link:hover, .page-item.active .page-link {
            background: #667eea;
            color: white;
        }
    </style>
}

<section class="history-section">
    <div class="container">
        <!-- Header -->
        <div class="text-center mb-5" data-aos="fade-down">
            <h1 class="display-5 fw-bold text-dark mb-3">
                <i class="fas fa-history me-3 text-primary"></i>
                Lịch sử thanh toán
            </h1>
            <p class="lead text-muted">Quản lý và theo dõi các giao dịch thanh toán của bạn</p>
        </div>

        <!-- Statistics -->
        <div class="row mb-4">
            <div class="col-lg-3 col-md-6 mb-3">
                <div class="stats-card" data-aos="fade-up" data-aos-delay="100">
                    <div class="stats-number text-primary">@(Model.Count())</div>
                    <div class="text-muted">Tổng giao dịch</div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 mb-3">
                <div class="stats-card" data-aos="fade-up" data-aos-delay="200">
                    <div class="stats-number text-success">@successCount</div>
                    <div class="text-muted">Thành công</div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 mb-3">
                <div class="stats-card" data-aos="fade-up" data-aos-delay="300">
                    <div class="stats-number text-warning">@pendingCount</div>
                    <div class="text-muted">Đang xử lý</div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 mb-3">
                <div class="stats-card" data-aos="fade-up" data-aos-delay="400">
                    <div class="stats-number text-primary">@totalAmount.ToString("N0")₫</div>
                    <div class="text-muted">Tổng đã chi</div>
                </div>
            </div>
        </div>

        <!-- Filter Tabs -->
        <div class="filter-tabs text-center" data-aos="fade-up" data-aos-delay="500">
            <a href="@Url.Action("History")" class="filter-tab @(string.IsNullOrEmpty(currentStatus) ? "active" : "")">
                <i class="fas fa-list me-2"></i>Tất cả
            </a>
            <a href="@Url.Action("History", new { status = "Success" })" class="filter-tab @(currentStatus == "Success" ? "active" : "")">
                <i class="fas fa-check-circle me-2"></i>Thành công
            </a>
            <a href="@Url.Action("History", new { status = "Pending" })" class="filter-tab @(currentStatus == "Pending" ? "active" : "")">
                <i class="fas fa-clock me-2"></i>Chờ xử lý
            </a>
            <a href="@Url.Action("History", new { status = "Failed" })" class="filter-tab @(currentStatus == "Failed" ? "active" : "")">
                <i class="fas fa-times-circle me-2"></i>Thất bại
            </a>
        </div>

        <!-- Payment List -->
        @if (Model.Any())
        {
            <div class="row">
                <div class="col-12">
                    @foreach (var payment in Model)
                    {
                        var statusClass = payment.Status switch
                        {
                            PaymentStatus.Success => "success",
                            PaymentStatus.Pending => "pending",
                            PaymentStatus.Failed => "failed",
                            _ => "pending"
                        };

                        <div class="payment-item @statusClass" data-aos="fade-up">
                            <div class="row align-items-center">
                                <div class="col-md-1 text-center">
                                    <div class="bg-primary text-white rounded-circle d-inline-flex align-items-center justify-content-center" 
                                         style="width: 50px; height: 50px;">
                                        <i class="fas fa-graduation-cap"></i>
                                    </div>
                                </div>
                                
                                <div class="col-md-4">
                                    <h5 class="fw-bold mb-2">@payment.Course.TenKhoaHoc</h5>
                                    <div class="text-muted small">
                                        <i class="fas fa-hashtag me-1"></i>
                                        Mã GD: #@payment.PaymentID.ToString("D6")
                                    </div>
                                    <div class="text-muted small">
                                        <i class="fas fa-calendar me-1"></i>
                                        @payment.NgayThanhToan.ToString("dd/MM/yyyy HH:mm")
                                    </div>
                                </div>
                                
                                <div class="col-md-2 text-center">
                                    <div class="fw-bold text-success fs-5">@payment.SoTien.ToString("N0")₫</div>
                                    <small class="text-muted">
                                        <i class="fas fa-mobile-alt me-1"></i>@payment.PhuongThucThanhToan
                                    </small>
                                </div>
                                
                                <div class="col-md-2 text-center">
                                    @switch (payment.Status)
                                    {
                                        case PaymentStatus.Success:
                                            <span class="status-badge status-success">
                                                <i class="fas fa-check-circle me-1"></i>Thành công
                                            </span>
                                            break;
                                        case PaymentStatus.Pending:
                                            <span class="status-badge status-pending">
                                                <i class="fas fa-clock me-1"></i>Chờ xử lý
                                            </span>
                                            break;
                                        case PaymentStatus.Failed:
                                            <span class="status-badge status-failed">
                                                <i class="fas fa-times-circle me-1"></i>Thất bại
                                            </span>
                                            break;
                                    }
                                </div>
                                
                                <div class="col-md-3 text-end">
                                    <div class="btn-group">
                                        <a asp-action="Details" asp-route-id="@payment.PaymentID" 
                                           class="btn btn-outline-primary btn-sm">
                                            <i class="fas fa-eye me-1"></i>Chi tiết
                                        </a>
                                        
                                        @if (payment.Status == PaymentStatus.Success)
                                        {
                                            <a asp-controller="Course" asp-action="Details" asp-route-id="@payment.CourseID" 
                                               class="btn btn-primary btn-sm">
                                                <i class="fas fa-play me-1"></i>Học ngay
                                            </a>
                                        }
                                        else if (payment.Status == PaymentStatus.Failed)
                                        {
                                            <a asp-action="Create" asp-route-courseId="@payment.CourseID" 
                                               class="btn btn-warning btn-sm">
                                                <i class="fas fa-redo me-1"></i>Thanh toán lại
                                            </a>
                                        }
                                        else if (payment.Status == PaymentStatus.Pending)
                                        {
                                            <button class="btn btn-outline-danger btn-sm" onclick="cancelPayment(@payment.PaymentID)">
                                                <i class="fas fa-times me-1"></i>Hủy
                                            </button>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Pagination -->
            @if (totalPages > 1)
            {
                <nav aria-label="Pagination" data-aos="fade-up">
                    <ul class="pagination">
                        @if (currentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("History", new { status = currentStatus, page = currentPage - 1 })">
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                            </li>
                        }

                        @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Action("History", new { status = currentStatus, page = i })">@i</a>
                            </li>
                        }

                        @if (currentPage < totalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("History", new { status = currentStatus, page = currentPage + 1 })">
                                    <i class="fas fa-chevron-right"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        }
        else
        {
            <div class="text-center py-5" data-aos="fade-up">
                <i class="fas fa-receipt display-1 text-muted mb-4"></i>
                <h3 class="text-muted mb-3">Chưa có giao dịch nào</h3>
                <p class="text-muted mb-4">Bạn chưa thực hiện thanh toán cho khóa học nào. Hãy khám phá và đăng ký các khóa học hấp dẫn!</p>
                <a asp-controller="Course" asp-action="Index" class="btn btn-primary btn-lg">
                    <i class="fas fa-search me-2"></i>Khám phá khóa học
                </a>
            </div>
        }
    </div>
</section>

@section Scripts {
    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        AOS.init();

        function cancelPayment(paymentId) {
            Swal.fire({
                title: 'Hủy giao dịch',
                text: 'Bạn có chắc chắn muốn hủy giao dịch này?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Có, hủy giao dịch',
                cancelButtonText: 'Không',
                confirmButtonColor: '#dc3545'
            }).then((result) => {
                if (result.isConfirmed) {
                                        fetch(`/Payment/Cancel/${paymentId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire('Thành công!', data.message, 'success').then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire('Lỗi!', data.message, 'error');
                        }
                    })
                    .catch(error => {
                        Swal.fire('Lỗi!', 'Có lỗi xảy ra khi hủy giao dịch.', 'error');
                    });
                }
            });
        }
    </script>

    @Html.AntiForgeryToken()
}