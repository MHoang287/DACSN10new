<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="OnlineLearning - Nền tảng học trực tuyến hàng đầu Việt Nam" />
    <title>@ViewData["Title"] - OnlineLearning</title>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/dataTables.bootstrap5.min.css" />
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    @await RenderSectionAsync("Styles", required: false)
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-lg sticky-top">
            <div class="container-fluid px-4">
                <a class="navbar-brand d-flex align-items-center text-decoration-none" href="/">
                    <div class="brand-icon-wrapper">
                        <i class="fas fa-graduation-cap brand-icon"></i>
                        <div class="brand-icon-glow"></div>
                    </div>
                    <div class="brand-text-wrapper">
                        <span class="brand-main">Online</span><span class="brand-accent">Learning</span>
                    </div>
                </a>

                <button class="navbar-toggler border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                        aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0 align-items-center flex-nowrap">
                        <li class="nav-item">
                            <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Home" ? "active" : "")" href="/">
                                <i class="fas fa-home"></i>Trang&nbsp;chủ
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Course" && ViewContext.RouteData.Values["action"]?.ToString() == "Index" ? "active" : "")"
                               href="@Url.Action("Index", "Course")">
                                <i class="fas fa-book-open"></i>Tất&nbsp;cả&nbsp;khóa&nbsp;học
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link @(ViewContext.RouteData.Values["action"]?.ToString() == "PopularCourses" ? "active" : "")"
                               href="@Url.Action("PopularCourses", "Course")">
                                <i class="fas fa-fire"></i>Phổ&nbsp;biến
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/User/SearchTeacher">
                                <i class="fas fa-chalkboard-teacher"></i>Tìm&nbsp;giảng&nbsp;viên
                            </a>
                        </li>

                        <li class="nav-item">
                            <a class="nav-link" href="#" onclick="openStudentJoinModal(); return false;">
                                <i class="fas fa-video"></i>Vào&nbsp;livestream
                            </a>
                        </li>

                        @if (User.IsInRole("Teacher"))
                        {
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle teacher-nav-link @(ViewContext.RouteData.Values["area"]?.ToString() == "Teacher" ? "active" : "")"
                                   href="#" id="teacherDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="fas fa-chalkboard-teacher"></i>Giảng&nbsp;viên
                                </a>
                                <ul class="dropdown-menu teacher-dropdown" aria-labelledby="teacherDropdown">
                                    <li class="dropdown-header">
                                        <i class="fas fa-tachometer-alt me-2 text-primary"></i>Bảng điều khiển
                                    </li>
                                    <li>
                                        <a class="dropdown-item" asp-area="Teacher" asp-controller="Teacher" asp-action="Dashboard">
                                            <i class="fas fa-home me-2"></i>Dashboard
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" asp-area="Teacher" asp-controller="Teacher" asp-action="Statistics">
                                            <i class="fas fa-chart-bar me-2"></i>Thống&nbsp;kê&nbsp;tổng&nbsp;quan
                                        </a>
                                    </li>

                                    <li><hr class="dropdown-divider" /></li>
                                    <li class="dropdown-header">
                                        <i class="fas fa-broadcast-tower me-2 text-danger"></i>Livestream
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="#" onclick="startLivestreamFromLayout(); return false;">
                                            <i class="fas fa-circle-play me-2 text-danger"></i>Bắt đầu Livestream
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="#" onclick="openStudentViewerFromLayout(); return false;">
                                            <i class="fas fa-eye me-2 text-info"></i>Xem như học viên
                                        </a>
                                    </li>

                                    <li><hr class="dropdown-divider" /></li>

                                    <li class="dropdown-header">
                                        <i class="fas fa-book-open me-2 text-success"></i>Quản lý khóa học
                                    </li>
                                    <li>
                                        <a class="dropdown-item" asp-area="Teacher" asp-controller="Teacher" asp-action="MyCourses">
                                            <i class="fas fa-th-list me-2"></i>Khóa&nbsp;học&nbsp;của&nbsp;tôi
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" asp-area="Teacher" asp-controller="Teacher" asp-action="CreateCourse">
                                            <i class="fas fa-plus-circle me-2"></i>Tạo&nbsp;khóa&nbsp;học&nbsp;mới
                                        </a>
                                    </li>
                                    <li class="dropdown-submenu">
                                        <a class="dropdown-item dropdown-toggle" href="#" onclick="showCourseSelectionModal('lessons')">
                                            <i class="fas fa-play me-2"></i>Quản&nbsp;lý&nbsp;bài&nbsp;học
                                        </a>
                                    </li>
                                    <li><hr class="dropdown-divider" /></li>

                                    <li class="dropdown-header">
                                        <i class="fas fa-users me-2 text-info"></i>Quản lý học viên
                                    </li>
                                    <li>
                                        <a class="dropdown-item" asp-area="Teacher" asp-controller="Teacher" asp-action="MyStudents">
                                            <i class="fas fa-user-graduate"></i>Học&nbsp;viên&nbsp;của&nbsp;tôi
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" asp-area="Teacher" asp-controller="Teacher" asp-action="MyFollowers">
                                            <i class="fas fa-user-friends"></i>Người&nbsp;theo&nbsp;dõi
                                        </a>
                                    </li>
                                    <li class="dropdown-submenu">
                                        <a class="dropdown-item dropdown-toggle" href="#" onclick="showCourseSelectionModal('students')">
                                            <i class="fas fa-users-cog"></i>Học&nbsp;viên&nbsp;theo&nbsp;khóa&nbsp;học
                                        </a>
                                    </li>
                                    <li><hr class="dropdown-divider" /></li>

                                    <li class="dropdown-header">
                                        <i class="fas fa-tasks me-2 text-warning"></i>Bài tập & Kiểm tra
                                    </li>
                                    <li class="dropdown-submenu">
                                        <a class="dropdown-item dropdown-toggle" href="#" onclick="showCourseSelectionModal('quiz')">
                                            <i class="fas fa-question-circle"></i>Quản&nbsp;lý&nbsp;bài&nbsp;kiểm&nbsp;tra
                                        </a>
                                    </li>
                                    <li class="dropdown-submenu">
                                        <a class="dropdown-item dropdown-toggle" href="#" onclick="showCourseSelectionModal('assignment')">
                                            <i class="fas fa-clipboard-list"></i>Quản&nbsp;lý&nbsp;bài&nbsp;tập
                                        </a>
                                    </li>
                                    <li class="dropdown-submenu">
                                        <a class="dropdown-item dropdown-toggle" href="#" onclick="showCourseSelectionModal('submissions')">
                                            <i class="fas fa-file-upload"></i>Bài&nbsp;nộp&nbsp;học&nbsp;viên
                                        </a>
                                    </li>
                                    <li><hr class="dropdown-divider" /></li>

                                    <li class="dropdown-header">
                                        <i class="fas fa-chart-line me-2 text-secondary"></i>Báo cáo & Phân tích
                                    </li>
                                    <li>
                                        <a class="dropdown-item" asp-area="Teacher" asp-controller="Teacher" asp-action="TeacherReports">
                                            <i class="fas fa-chart-pie"></i>Báo&nbsp;cáo&nbsp;chi&nbsp;tiết
                                        </a>
                                    </li>
                                    <li class="dropdown-submenu">
                                        <a class="dropdown-item dropdown-toggle" href="#" onclick="showCourseStatsModal()">
                                            <i class="fas fa-analytics"></i>Thống&nbsp;kê&nbsp;khóa&nbsp;học
                                        </a>
                                    </li>
                                </ul>
                            </li>
                        }

                        @if (User.IsInRole("Admin"))
                        {
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle admin-link @(ViewContext.RouteData.Values["area"]?.ToString() == "Admin" ? "active" : "")"
                                   href="#" id="adminDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="fas fa-users-cog"></i>Quản&nbsp;trị&nbsp;viên
                                </a>
                                <ul class="dropdown-menu admin-dropdown" aria-labelledby="adminDropdown">
                                    <li class="dropdown-header">
                                        <i class="fas fa-crown me-2 text-warning"></i>Bảng điều khiển
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("Dashboard", "Admin", new { area = "Admin" })">
                                            <i class="fas fa-tachometer-alt"></i>Dashboard
                                        </a>
                                    </li>
                                    <li><hr class="dropdown-divider" /></li>

                                    <li class="dropdown-header">
                                        <i class="fas fa-users me-2 text-primary"></i>Quản lý người dùng
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("Students", "Admin", new { area = "Admin" })">
                                            <i class="fas fa-user-graduate"></i>Học viên
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("Teachers", "Admin", new { area = "Admin" })">
                                            <i class="fas fa-chalkboard-teacher"></i>Giảng viên
                                        </a>
                                    </li>
                                    <li><hr class="dropdown-divider" /></li>

                                    <li class="dropdown-header">
                                        <i class="fas fa-book-open me-2 text-success"></i>Quản lý khóa học
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("Courses", "Admin", new { area = "Admin" })">
                                            <i class="fas fa-list"></i>Tất cả khóa học
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("Categories", "Admin", new { area = "Admin" })">
                                            <i class="fas fa-tags"></i>Danh mục
                                        </a>
                                    </li>
                                    <li><hr class="dropdown-divider" /></li>

                                    <li class="dropdown-header">
                                        <i class="fas fa-credit-card me-2 text-info"></i>Thanh toán & Thống kê
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("Payments", "Admin", new { area = "Admin" })">
                                            <i class="fas fa-money-bill-wave"></i>Thanh toán
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("Statistics", "Admin", new { area = "Admin" })">
                                            <i class="fas fa-chart-line"></i>Thống kê
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("Analytics", "Admin", new { area = "Admin" })">
                                            <i class="fas fa-chart-pie"></i>Phân tích
                                        </a>
                                    </li>
                                    <li><hr class="dropdown-divider" /></li>

                                    <li class="dropdown-header">
                                        <i class="fas fa-cog me-2 text-secondary"></i>Hệ thống
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("Settings", "Admin", new { area = "Admin" })">
                                            <i class="fas fa-sliders-h"></i>Cài đặt
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("SystemHealth", "Admin", new { area = "Admin" })">
                                            <i class="fas fa-heartbeat"></i>Tình trạng hệ thống
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("Maintenance", "Admin", new { area = "Admin" })">
                                            <i class="fas fa-tools"></i>Bảo trì
                                        </a>
                                    </li>
                                </ul>
                            </li>
                        }
                    </ul>

                    <form class="d-flex me-3 search-form" method="get" action="@Url.Action("SearchByName", "Course")">
                        <div class="input-group">
                            <input class="form-control" type="search" name="keyword" value="@ViewBag.SearchKeyword"
                                   placeholder="Tìm kiếm khóa học..." aria-label="Search" />
                            <button class="btn" type="submit">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                    </form>

                    <ul class="navbar-nav">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item dropdown me-3">
                                <a class="nav-link position-relative" href="#" id="notificationsDropdown"
                                   role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="fas fa-bell fa-lg"></i>
                                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger" id="notification-count">
                                        0
                                        <span class="visually-hidden">Thông báo chưa đọc</span>
                                    </span>
                                </a>
                                <div class="dropdown-menu dropdown-menu-end notification-dropdown"
                                     aria-labelledby="notificationsDropdown">
                                    <div class="dropdown-header text-center py-3">
                                        <h6 class="mb-0"><i class="fas fa-bell me-2"></i>Thông báo</h6>
                                    </div>
                                    <div class="notification-list" id="notification-list">
                                        <div class="text-center p-3 text-muted">
                                            <i class="fas fa-inbox fa-2x mb-2"></i>
                                            <p class="mb-0">Không có thông báo mới</p>
                                        </div>
                                    </div>
                                    <div class="dropdown-footer text-center py-3">
                                        <a href="#" class="text-decoration-none fw-medium" onclick="markAllAsRead()">
                                            Đánh dấu tất cả đã đọc
                                        </a>
                                    </div>
                                </div>
                            </li>

                            <li class="nav-item dropdown">
                                <a class="nav-link d-flex align-items-center" href="#" id="userDropdown"
                                   role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <div class="user-avatar me-2">
                                        <img src="https://ui-avatars.com/api/?name=@Uri.EscapeDataString(User.Identity.Name ?? "User")&background=667eea&color=fff&bold=true&size=35"
                                             alt="@User.Identity.Name" />
                                    </div>
                                    <span class="d-none d-lg-inline fw-medium">@User.Identity.Name</span>
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <span class="badge bg-danger ms-2 small">ADMIN</span>
                                    }
                                    @if (User.IsInRole("Teacher"))
                                    {
                                        <span class="badge bg-success ms-2 small">TEACHER</span>
                                    }
                                    <i class="fas fa-chevron-down ms-2 small"></i>
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end user-dropdown" aria-labelledby="userDropdown">
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <li>
                                            <a class="dropdown-item admin-quick-access" href="@Url.Action("Dashboard", "Admin", new { area = "Admin" })">
                                                <i class="fas fa-crown me-2 text-warning"></i>Bảng điều khiển Admin
                                            </a>
                                        </li>
                                        <li><hr class="dropdown-divider" /></li>
                                    }
                                    @if (User.IsInRole("Teacher"))
                                    {
                                        <li>
                                            <a class="dropdown-item teacher-quick-access" asp-area="Teacher" asp-controller="Teacher" asp-action="Dashboard">
                                                <i class="fas fa-chalkboard-teacher"></i>Bảng điều khiển Giảng viên
                                            </a>
                                        </li>
                                        <li><hr class="dropdown-divider" /></li>
                                    }
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("MyCourses", "Course")">
                                            <i class="fas fa-book"></i>Khóa&nbsp;học&nbsp;của&nbsp;tôi
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("FavoriteCourses", "Course")">
                                            <i class="fas fa-heart"></i>Khóa&nbsp;học&nbsp;yêu&nbsp;thích
                                        </a>
                                    </li>
                                    <li><hr class="dropdown-divider" /></li>
                                    <li>
                                        <a class="dropdown-item" href="/User/EditProfile">
                                            <i class="fas fa-user-edit"></i>Hồ&nbsp;sơ&nbsp;cá&nbsp;nhân
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("Progress", "Course")">
                                            <i class="fas fa-chart-line"></i>Tiến&nbsp;độ&nbsp;học&nbsp;tập
                                        </a>
                                    </li>
                                    <li><hr class="dropdown-divider" /></li>
                                    <li>
                                        <a class="dropdown-item" href="#" onclick="showSettings()">
                                            <i class="fas fa-cog"></i>Cài&nbsp;đặt
                                        </a>
                                    </li>
                                    <li>
                                        <form asp-area="Identity" asp-page="/Account/Logout" method="post">
                                            <button type="submit" class="dropdown-item text-danger">
                                                <i class="fas fa-sign-out-alt"></i>Đăng&nbsp;xuất
                                            </button>
                                        </form>
                                    </li>
                                </ul>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item me-2">
                                <a class="btn btn-outline-modern" href="/Identity/Account/Login">
                                    <i class="fas fa-sign-in-alt"></i>Đăng nhập
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="btn btn-modern" href="/Identity/Account/Register">
                                    <i class="fas fa-user-plus"></i>Đăng ký
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>

        @if (User.Identity.IsAuthenticated)
        {
            <div class="progress-container">
                <div class="progress" style="height: 4px;">
                    <div class="progress-bar" role="progressbar" style="width: 0%;"
                         aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                </div>
            </div>
        }
    </header>

    @if (User.IsInRole("Teacher"))
    {
        <div class="modal fade" id="courseSelectionModal" tabindex="-1" aria-labelledby="courseSelectionModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header bg-gradient-primary text-white">
                        <h5 class="modal-title" id="courseSelectionModalLabel">
                            <i class="fas fa-book-open me-2"></i>Chọn khóa học
                        </h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <input type="text" class="form-control" id="courseSearchInput" placeholder="Tìm kiếm khóa học...">
                        </div>
                        <div id="courseList" class="course-list">
                            <div class="text-center py-4">
                                <div class="spinner-border text-primary" role="status">
                                    <span class="visually-hidden">Đang tải...</span>
                                </div>
                                <p class="mt-2 text-muted">Đang tải danh sách khóa học...</p>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                            <i class="fas fa-times me-2"></i>Đóng
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="courseStatsModal" tabindex="-1" aria-labelledby="courseStatsModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-xl">
                <div class="modal-content">
                    <div class="modal-header bg-gradient-info text-white">
                        <h5 class="modal-title" id="courseStatsModalLabel">
                            <i class="fas fa-chart-line"></i>Thống kê khóa học
                        </h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body" id="courseStatsContent"></div>
                </div>
            </div>
        </div>
    }

    @await Html.PartialAsync("~/Views/Shared/_JoinLiveModal.cshtml")

    <main class="animate-fade-in">
        @if (TempData["SuccessMessage"] != null || TempData["Success"] != null)
        {
            <div class="container py-2">
                <div class="alert alert-success alert-dismissible fade show animate-slide-up" role="alert">
                    <i class="fas fa-check-circle me-2"></i>
                    <strong>Thành công!</strong> @(TempData["SuccessMessage"] ?? TempData["Success"])
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            </div>
        }
        @if (TempData["ErrorMessage"] != null || TempData["Error"] != null)
        {
            <div class="container py-2">
                <div class="alert alert-danger alert-dismissible fade show animate-slide-up" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    <strong>Lỗi!</strong> @(TempData["ErrorMessage"] ?? TempData["Error"])
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            </div>
        }
        @if (TempData["WarningMessage"] != null || TempData["Warning"] != null)
        {
            <div class="container py-2">
                <div class="alert alert-warning alert-dismissible fade show animate-slide-up" role="alert">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>Cảnh báo!</strong> @(TempData["WarningMessage"] ?? TempData["Warning"])
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            </div>
        }
        @if (TempData["InfoMessage"] != null || TempData["Info"] != null)
        {
            <div class="container py-2">
                <div class="alert alert-info alert-dismissible fade show animate-slide-up" role="alert">
                    <i class="fas fa-info-circle"></i>
                    <strong>Thông tin!</strong> @(TempData["InfoMessage"] ?? TempData["Info"])
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            </div>
        }

        @if (ViewContext.RouteData.Values["controller"]?.ToString() == "Home" &&
                ViewContext.RouteData.Values["action"]?.ToString() == "Index")
        {
            @RenderBody()
        }
        else
        {
            <div class="container py-4">
                @RenderBody()
            </div>
        }
    </main>

    <a href="#" class="back-to-top" id="scrollToTop" title="Lên đầu trang">
        <i class="fas fa-arrow-up"></i>
    </a>

    <div id="loading-spinner" class="loading-overlay" style="display: none;">
        <div class="spinner-content">
            <div class="spinner-border text-primary mb-3" role="status">
                <span class="visually-hidden">Đang tải...</span>
            </div>
            <h5 class="fw-medium">Đang xử lý...</h5>
            <p class="text-muted mb-0">Vui lòng chờ trong giây lát</p>
        </div>
    </div>

    <div class="toast-container position-fixed bottom-0 end-0 p-3" style="z-index: 1055">
        <div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <div class="rounded me-2 toast-icon" style="width: 20px; height: 20px;"></div>
                <strong class="me-auto" id="toastTitle">OnlineLearning</strong>
                <small id="toastTime">Bây giờ</small>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body" id="toastMessage"></div>
        </div>
    </div>

    <footer class="bg-dark text-light py-5 mt-5">
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-6 mb-4">
                    <h5 class="mb-3">
                        <i class="fas fa-graduation-cap me-2"></i>OnlineLearning
                    </h5>
                    <p class="text-light">Nền tảng học trực tuyến hàng đầu Việt Nam, mang đến cho bạn những khóa học chất lượng cao.</p>
                    <div class="social-links">
                        <a href="#" class="text-light me-3"><i class="fab fa-facebook-f"></i></a>
                        <a href="#" class="text-light me-3"><i class="fab fa-twitter"></i></a>
                        <a href="#" class="text-light me-3"><i class="fab fa-linkedin-in"></i></a>
                        <a href="#" class="text-light"><i class="fab fa-youtube"></i></a>
                    </div>
                </div>
                <div class="col-lg-3 col-md-6 mb-4">
                    <h6 class="mb-3">Khóa học</h6>
                    <ul class="list-unstyled">
                        <li><a href="@Url.Action("Index", "Course")" class="text-light text-decoration-none">Tất cả khóa học</a></li>
                        <li><a href="@Url.Action("PopularCourses", "Course")" class="text-light text-decoration-none">Khóa học phổ biến</a></li>
                        <li><a href="#" class="text-light text-decoration-none">Miễn phí</a></li>
                    </ul>
                </div>
                <div class="col-lg-3 col-md-6 mb-4">
                    <h6 class="mb-3">Hỗ trợ</h6>
                    <ul class="list-unstyled">
                        <li><a href="#" class="text-light text-decoration-none">Trung tâm trợ giúp</a></li>
                        <li><a href="#" class="text-light text-decoration-none">Liên hệ</a></li>
                        <li><a href="#" class="text-light text-decoration-none">Điều khoản sử dụng</a></li>
                        <li><a href="#" class="text-light text-decoration-none">Chính sách bảo mật</a></li>
                    </ul>
                </div>
                <div class="col-lg-3 col-md-6 mb-4">
                    <h6 class="mb-3">Liên hệ</h6>
                    <ul class="list-unstyled text-light">
                        <li><i class="fas fa-envelope"></i> support@onlinelearning.vn</li>
                        <li><i class="fas fa-phone"></i> +84 123 456 789</li>
                        <li><i class="fas fa-map-marker-alt"></i> Hà Nội, Việt Nam</li>
                    </ul>
                </div>
            </div>
            <hr class="my-4">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <p class="mb-0 text-light">&copy; 2025 OnlineLearning. Tất cả quyền được bảo lưu.</p>
                </div>
                <div class="col-md-6 text-md-end">
                    <p class="mb-0 text-light">Phiên bản 2.0.0</p>
                </div>
            </div>
        </div>
    </footer>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        let currentAction = '';
        let teacherCourses = [];

        const DISPLAY_NAME = '@(User.Identity?.Name ?? "Teacher")';
        const CLAIM_APP_USER_ID = '@(User.FindFirst("AppUserId")?.Value ?? "")';
        const LIVE_API_BASE = '/spring';

        function parseNumeric(val) { if (!val) return NaN; const n = Number(val); return Number.isFinite(n) ? n : NaN; }

        async function createOrGetRoom(teacherId) {
            const resp = await fetch(`${LIVE_API_BASE}/api/rooms`, {
                method: 'POST', headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ teacherId })
            });
            if (!resp.ok) throw new Error('Không tạo được phòng: ' + resp.status);
            return await resp.json();
        }

        async function startLivestreamFromLayout() {
            try {
                let teacherId = parseNumeric(CLAIM_APP_USER_ID);
                if (!Number.isFinite(teacherId)) {
                    const input = prompt('Nhập TeacherId (số) để tạo/đi vào phòng live:', '');
                    teacherId = parseNumeric(input);
                    if (!Number.isFinite(teacherId)) return;
                }
                await createOrGetRoom(teacherId);
                const userIdNum = parseNumeric(CLAIM_APP_USER_ID);
                const userId = Number.isFinite(userIdNum) ? userIdNum : 0;
                const url = `/Live/Teacher?teacherId=${teacherId}&userId=${userId}&displayName=${encodeURIComponent(DISPLAY_NAME)}`;
                window.location.href = url;
            } catch (e) { console.error(e); alert(e.message || e); }
        }

        async function openStudentViewerFromLayout() {
            try {
                let teacherId = parseNumeric(CLAIM_APP_USER_ID);
                if (!Number.isFinite(teacherId)) {
                    const input = prompt('Nhập TeacherId (số) để mở trang xem live:', '');
                    teacherId = parseNumeric(input);
                    if (!Number.isFinite(teacherId)) return;
                }
                const room = await createOrGetRoom(teacherId);
                const userIdNum = parseNumeric(CLAIM_APP_USER_ID);
                const userId = Number.isFinite(userIdNum) ? userIdNum : 0;
                const url = `/Live/Student?roomId=${room.roomId}&userId=${userId}&displayName=${encodeURIComponent('Student')}`;
                window.location.href = url;
            } catch (e) { console.error(e); alert(e.message || e); }
        }

        $(document).ready(function() {
            initializeLayout();
            loadNotifications();
            updateProgress();
            @if (User.IsInRole("Teacher"))
            {
                <text>loadTeacherCourses();</text>
            }
        });

        function initializeLayout() {
            $(window).scroll(function() { if ($(this).scrollTop() > 100) { $('#scrollToTop').addClass('show'); } else { $('#scrollToTop').removeClass('show'); } });
            $('#scrollToTop').click(function(e) { e.preventDefault(); $('html, body').animate({scrollTop: 0}, 500); });
            $('#courseSearchInput').on('input', function() { const searchTerm = $(this).val().toLowerCase(); filterCourses(searchTerm); });
            $('.alert').each(function() { const alert = $(this); setTimeout(function() { alert.fadeOut('slow'); }, 5000); });
        }

        @if (User.IsInRole("Teacher"))
        {
            <text>
                function showCourseSelectionModal(action) {
                    currentAction = action;
                    const modal = new bootstrap.Modal(document.getElementById('courseSelectionModal'));
                    const modalTitle = document.getElementById('courseSelectionModalLabel');
                    const iconClass = getActionIcon(action);
                    const actionText = getActionText(action);
                    modalTitle.innerHTML = `<i class="${iconClass} me-2"></i>${actionText}`;
                    displayCourses();
                    modal.show();
                }
                function loadTeacherCourses() {
                    $.ajax({ url: '/Teacher/Teacher/GetMyCourses', type: 'GET',
                        success: function(data) { teacherCourses = data; updateCourseCount(); },
                        error: function() { console.error('Failed to load teacher courses'); }
                    });
                }
                function displayCourses() {
                    const courseList = $('#courseList'); courseList.empty();
                    if (teacherCourses.length === 0) {
                        courseList.html(`
                            <div class="alert alert-info text-center">
                                <i class="fas fa-info-circle fa-2x mb-2"></i>
                                <h6>Chưa có khóa học</h6>
                                <p class="mb-0">Bạn chưa tạo khóa học nào. <a href="/Teacher/Teacher/CreateCourse">Tạo khóa học đầu tiên</a></p>
                            </div>`);
                        return;
                    }
                    teacherCourses.forEach(course => {
                        const statusBadge = getStatusBadge(course.trangThai);
                        const studentCount = course.studentCount || 0;
                        const card = $(`
                            <div class="course-card" data-course-name="${(course.tenKhoaHoc || '').toLowerCase()}">
                                <div class="card mb-3 course-selection-card" onclick="selectCourse(${course.courseID}, '${course.tenKhoaHoc}')">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between align-items-start">
                                            <div class="flex-grow-1">
                                                <h6 class="card-title mb-1">${course.tenKhoaHoc}</h6>
                                                <p class="card-text text-muted small mb-2">${course.moTa || 'Không có mô tả'}</p>
                                                <div class="d-flex gap-2 flex-wrap">
                                                    ${statusBadge}
                                                    <span class="badge bg-info">${studentCount} học viên</span>
                                                    <span class="badge bg-secondary">${formatDate(course.ngayTao)}</span>
                                                </div>
                                            </div>
                                            <div class="text-end"><i class="fas fa-chevron-right text-muted"></i></div>
                                        </div>
                                    </div>
                                </div>
                            </div>`);
                        courseList.append(card);
                    });
                }
                function selectCourse(courseId, courseName) {
                    const modal = bootstrap.Modal.getInstance(document.getElementById('courseSelectionModal'));
                    modal.hide();
                    showLoading(`Đang chuyển đến ${getActionText(currentAction).toLowerCase()}...`);
                    let url = '';
                    switch(currentAction) {
                        case 'lessons': url = `/Teacher/Teacher/CourseLessons/${courseId}`; break;
                        case 'quiz': url = `/Teacher/Teacher/CourseQuizzes/${courseId}`; break;
                        case 'assignment': url = `/Teacher/Teacher/CourseAssignments/${courseId}`; break;
                        case 'students': url = `/Teacher/Teacher/CourseStudents/${courseId}`; break;
                        case 'submissions': url = `/Teacher/Teacher/CourseSubmissions/${courseId}`; break;
                        default: hideLoading(); showToast('error', 'Hành động không hợp lệ'); return;
                    }
                    setTimeout(() => { window.location.href = url; }, 500);
                }
                function showCourseStatsModal() {
                    const modal = new bootstrap.Modal(document.getElementById('courseStatsModal'));
                    loadCourseStats(); modal.show();
                }
                function loadCourseStats() {
                    const content = $('#courseStatsContent');
                    content.html(`<div class="text-center py-4"><div class="spinner-border text-primary" role="status"></div><p class="mt-2">Đang tải thống kê...</p></div>`);
                    $.ajax({ url: '/Teacher/Teacher/GetAllCourseStats', type: 'GET',
                        success: function(data) { displayCourseStats(data); },
                        error: function() {
                            content.html(`<div class="alert alert-danger"><i class="fas fa-exclamation-triangle me-2"></i>Không thể tải thống kê khóa học.</div>`);
                        }
                    });
                }
                function displayCourseStats(stats) {
                    const content = $('#courseStatsContent');
                    content.html(`<div class="row"><div class="col-md-6"><canvas id="courseChart"></canvas></div><div class="col-md-6"><canvas id="studentChart"></canvas></div></div>`);
                }
                function filterCourses(searchTerm) {
                    $('.course-card').each(function() {
                        const courseName = $(this).data('course-name') || '';
                        if (courseName.includes(searchTerm)) { $(this).show(); } else { $(this).hide(); }
                    });
                }
                function updateCourseCount() { const activeCount = teacherCourses.filter(c => c.trangThai === 'Active').length; }
            </text>
        }

        function getActionIcon(action) {
            const icons = { 'lessons': 'fas fa-play', 'quiz': 'fas fa-question-circle', 'assignment': 'fas fa-clipboard-list', 'students': 'fas fa-users', 'submissions': 'fas fa-file-upload' };
            return icons[action] || 'fas fa-book';
        }
        function getActionText(action) {
            const texts = { 'lessons': 'Quản lý bài học', 'quiz': 'Quản lý bài kiểm tra', 'assignment': 'Quản lý bài tập', 'students': 'Học viên theo khóa học', 'submissions': 'Bài nộp học viên' };
            return texts[action] || 'Chọn khóa học';
        }
        function getStatusBadge(status) {
            const badges = {
                'Active': '<span class="badge bg-success">Đang hoạt động</span>',
                'Pending': '<span class="badge bg-warning">Chờ duyệt</span>',
                'Closed': '<span class="badge bg-secondary">Đã đóng</span>',
                'Draft': '<span class="badge bg-info">Nháp</span>',
                'Ready': '<span class="badge bg-info">READY</span>',
                'LIVE': '<span class="badge bg-danger">LIVE</span>'
            };
            return badges[status] || '<span class="badge bg-light">Không xác định</span>';
        }
        function formatDate(dateString) { const date = new Date(dateString); return date.toLocaleDateString('vi-VN'); }
        function showLoading(message = 'Đang xử lý...') { $('#loading-spinner').show(); $('#loading-spinner .fw-medium').text(message); }
        function hideLoading() { $('#loading-spinner').hide(); }
        function showToast(type, message, title = 'OnlineLearning') {
            const toast = $('#liveToast'); const toastIcon = $('.toast-icon');
            const configs = { 'success': { icon: 'linear-gradient(135deg,#43e97b,#38f9d7)'}, 'error': { icon: 'linear-gradient(135deg,#f5576c,#f093fb)'},
                              'warning': { icon: 'linear-gradient(135deg,#f59e0b,#fbbf24)'}, 'info': { icon: 'linear-gradient(135deg,#4facfe,#00f2fe)'} };
            const config = configs[type] || configs['info']; toastIcon.css('background', config.icon);
            $('#toastTitle').text(title); $('#toastMessage').text(message); $('#toastTime').text('Bây giờ'); new bootstrap.Toast(toast[0]).show();
        }
        function loadNotifications() { $.get('/Api/Notifications/GetUnread', updateNotifications); }
        function updateNotifications(notifications) {
            const badge = $('#notification-count'); const list = $('#notification-list');
            if (!notifications || notifications.length === 0) { badge.hide(); list.html(`<div class="text-center p-3 text-muted"><i class="fas fa-inbox fa-2x mb-2"></i><p class="mb-0">Không có thông báo mới</p></div>`); return; }
            badge.text(notifications.length).show(); list.empty();
            notifications.forEach(notification => {
                const timeAgo = getTimeAgo(notification.createdAt); const iconClass = getNotificationIcon(notification.type); const bgClass = getNotificationBg(notification.type);
                list.append(`
                    <a href="#" class="dropdown-item notification-item ${notification.isRead ? '' : 'unread'}" data-id="${notification.id}">
                        <div class="notification-icon ${bgClass}"><i class="${iconClass} text-white"></i></div>
                        <div class="notification-content"><div class="notification-text">${notification.message}</div><div class="notification-time">${timeAgo}</div></div>
                    </a>`);
            });
        }
        function getNotificationIcon(type) {
            const icons = { 'course':'fas fa-book','assignment':'fas fa-clipboard-list','quiz':'fas fa-question-circle','payment':'fas fa-credit-card','system':'fas fa-cog' };
            return icons[type] || 'fas fa-bell';
        }
        function getNotificationBg(type) {
            const backgrounds = { 'course':'bg-info','assignment':'bg-warning','quiz':'bg-primary','payment':'bg-success','system':'bg-secondary' };
            return backgrounds[type] || 'bg-info';
        }
        function getTimeAgo(dateString) {
            const date = new Date(dateString); const now = new Date(); const diff = (now - date) / 1000;
            if (diff < 60) return 'Vừa xong'; if (diff < 3600) return `${Math.floor(diff/60)} phút trước`; if (diff < 86400) return `${Math.floor(diff/3600)} giờ trước`;
            return `${Math.floor(diff/86400)} ngày trước`;
        }
        function markAllAsRead() { $.post('/Api/Notifications/MarkAllAsRead', () => { loadNotifications(); showToast('success', 'Đã đánh dấu tất cả thông báo là đã đọc'); }); }
        function updateProgress() { const bar = $('.progress-bar'); if (bar.length) { setTimeout(() => { bar.css('width', '25%').attr('aria-valuenow', 25); }, 1000); } }
        function showSettings() { showToast('info', 'Tính năng cài đặt đang được phát triển'); }
        function validateForm(formId) {
            const form = $(`#${formId}`); let isValid = true;
            form.find('input[required], select[required], textarea[required]').each(function(){ if (!$(this).val()) { $(this).addClass('is-invalid'); isValid = false; } else { $(this).removeClass('is-invalid'); }});
            return isValid;
        }
        function submitFormWithLoading(formId, msg = 'Đang xử lý...') { if (!validateForm(formId)) { showToast('error','Vui lòng điền đầy đủ thông tin bắt buộc'); return false; } showLoading(msg); return true; }
        $(document).keydown(function(e){ if((e.ctrlKey||e.metaKey)&&e.keyCode===75){e.preventDefault();$('.search-form input').focus();} if(e.keyCode===27){$('.modal.show').modal('hide');} });
        $(document).ajaxError(function(event, xhr){ hideLoading(); if(xhr.status===401){ showToast('error','Phiên đăng nhập đã hết hạn. Vui lòng đăng nhập lại.'); setTimeout(()=>{ window.location.href='/Identity/Account/Login'; },2000);} else if(xhr.status===403){ showToast('error','Bạn không có quyền thực hiện hành động này.'); } else if(xhr.status>=500){ showToast('error','Đã xảy ra lỗi hệ thống. Vui lòng thử lại sau.'); } });

        // ===== Student Join Live (rooms with accurate viewerCount) =====
        const CURRENT_USER_NAME = '@(User.Identity?.Name ?? "Student")'.replace(/'/g, "\\'");
        const CLAIM_APP_USER_ID_FOR_STUDENT = '@(User.FindFirst("AppUserId")?.Value ?? "")';
        const ACTIVE_ROOMS_ENDPOINT = `${LIVE_API_BASE}/api/rooms/active`;

        function openStudentJoinModal() {
            try {
                const modalEl = document.getElementById('joinLiveModal');
                if (!modalEl) { alert('Không tìm thấy cửa sổ vào livestream.'); return; }
                const nameInput = document.getElementById('joinDisplayName');
                if (nameInput && !nameInput.value) nameInput.value = CURRENT_USER_NAME;
                const roomInput = document.getElementById('joinRoomId');
                if (roomInput) roomInput.value = '';
                const modal = bootstrap.Modal.getOrCreateInstance(modalEl);
                modal.show();
                const activeTabBtn = document.querySelector('#joinTabs .nav-link.active');
                if (activeTabBtn?.id === 'tabActive-tab') loadActiveRooms();
                setTimeout(() => roomInput?.focus(), 150);
            } catch (e) { console.error(e); }
        }

        function parseGuidFromText(text) {
            if (!text) return null;
            const match = text.match(/[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}/);
            return match ? match[0] : null;
        }
        function toNumericOrZero(val) { const n = Number(val); return Number.isFinite(n) ? n : 0; }

        function joinStudentLive() {
            const roomField = document.getElementById('joinRoomId');
            const nameField = document.getElementById('joinDisplayName');
            const raw = (roomField?.value || '').trim();
            const displayName = (nameField?.value || '').trim() || 'Student';

            const roomId = parseGuidFromText(raw);
            if (!roomId) { alert('Vui lòng nhập mã phòng hợp lệ (GUID) hoặc dán link mời có chứa roomId.'); roomField?.focus(); return; }
            const userId = toNumericOrZero(CLAIM_APP_USER_ID_FOR_STUDENT);
            const url = `/Live/Student?roomId=${roomId}&userId=${userId}&displayName=${encodeURIComponent(displayName)}`;
            window.location.href = url;
        }

        const $list = () => document.getElementById('activeRoomsList');
        const $loading = () => document.getElementById('activeRoomsLoading');
        const $empty = () => document.getElementById('activeRoomsEmpty');

        function showLoadingActiveRooms(show) { if ($loading()) $loading().style.display = show ? '' : 'none'; }
        function showEmptyActiveRooms(show) { if ($empty()) $empty().style.display = show ? '' : 'none'; }
        function clearActiveRooms() { if ($list()) $list().innerHTML = ''; }

        function mapRoom(r) {
            return {
                roomId: r.roomId || r.id || '',
                roomCode: r.roomCode || '',
                teacherId: r.teacherId ?? null,
                startedAt: r.startedAt || r.updatedAt || r.createdAt || null,
                viewerCount: r.viewerCount ?? 0
            };
        }

        function formatTimeAgo(iso) {
            try { if (!iso) return ''; const d = new Date(iso); const diff = (Date.now() - d.getTime())/1000;
                if (diff < 60) return 'vừa xong'; if (diff < 3600) return `${Math.floor(diff/60)} phút trước`;
                if (diff < 86400) return `${Math.floor(diff/3600)} giờ trước`; return d.toLocaleString('vi-VN');
            } catch { return ''; }
        }

        function renderActiveRooms(items) {
            clearActiveRooms();
            if (!items || !items.length) { showEmptyActiveRooms(true); return; }
            showEmptyActiveRooms(false);

            const frag = document.createDocumentFragment();
            items.forEach(src => {
                const r = mapRoom(src);
                if (!r.roomId) return;
                const a = document.createElement('a');
                a.href = '#';
                a.className = 'list-group-item list-group-item-action d-flex align-items-center justify-content-between';
                a.innerHTML = `
                    <div class="me-3">
                        <div class="fw-semibold">Phòng trực tiếp</div>
                        <div class="small text-muted">👨‍🏫 GV ID: ${r.teacherId ?? 'N/A'} · 👀 ${r.viewerCount} đang xem · ⏱ ${formatTimeAgo(r.startedAt)}</div>
                        <div class="small text-muted">ID: <code>${r.roomId}</code>${r.roomCode ? ` · Code: <code>${r.roomCode}</code>` : ''}</div>
                    </div>
                    <button class="btn btn-sm btn-primary">Vào xem</button>
                `;
                a.addEventListener('click', (e) => { e.preventDefault(); joinByRoomId(r.roomId); });
                a.querySelector('button')?.addEventListener('click', (e) => { e.preventDefault(); joinByRoomId(r.roomId); });
                frag.appendChild(a);
            });
            $list()?.appendChild(frag);
        }

        async function fetchActiveRooms(query = '') {
            const url = query ? `${ACTIVE_ROOMS_ENDPOINT}?q=${encodeURIComponent(query)}` : ACTIVE_ROOMS_ENDPOINT;
            const resp = await fetch(url, { headers: { 'Accept': 'application/json' } });
            if (!resp.ok) throw new Error(`GET ${url} -> ${resp.status}`);
            const data = await resp.json();
            return Array.isArray(data) ? data : (data.items || data.rooms || data.data || []);
        }

        let __activeRoomsTimer = null;
        async function loadActiveRooms(query = '') {
            try {
                showLoadingActiveRooms(true);
                renderActiveRooms([]);
                const list = await fetchActiveRooms(query);
                renderActiveRooms(list);
            } catch (e) {
                console.warn('Active rooms load failed:', e);
                renderActiveRooms([]); showEmptyActiveRooms(true);
                if ($list()) {
                    const div = document.createElement('div');
                    div.className = 'alert alert-warning mt-2';
                    div.innerHTML = `<i class="fas fa-circle-exclamation me-2"></i>Không thể tải danh sách phòng đang phát.`;
                    $list().appendChild(div);
                }
            } finally {
                showLoadingActiveRooms(false);
            }
        }

        function debounce(fn, wait = 400) { let t; return (...args) => { clearTimeout(t); t = setTimeout(() => fn(...args), wait); }; }

        function joinByRoomId(roomId) {
            const nameField = document.getElementById('joinDisplayName');
            const displayName = (nameField?.value || CURRENT_USER_NAME || 'Student').trim();
            if (!roomId) return;
            const userId = toNumericOrZero(CLAIM_APP_USER_ID_FOR_STUDENT);
            const url = `/Live/Student?roomId=${roomId}&userId=${userId}&displayName=${encodeURIComponent(displayName)}`;
            window.location.href = url;
        }

        window.openStudentJoinModal = openStudentJoinModal;

        document.addEventListener('DOMContentLoaded', () => {
            document.getElementById('btnJoinLive')?.addEventListener('click', joinStudentLive);
            document.getElementById('joinRoomId')?.addEventListener('keydown', (e) => { if (e.key === 'Enter' && !e.shiftKey) { e.preventDefault(); joinStudentLive(); } });
            document.getElementById('joinDisplayName')?.addEventListener('keydown', (e) => { if (e.key === 'Enter' && !e.shiftKey) { e.preventDefault(); joinStudentLive(); } });
            document.getElementById('tabActive-tab')?.addEventListener('shown.bs.tab', () => {
                loadActiveRooms();
                clearInterval(__activeRoomsTimer);
                __activeRoomsTimer = setInterval(() => {
                    const isActiveTab = document.getElementById('tabActive')?.classList.contains('active') ||
                        document.getElementById('tabActive-tab')?.classList.contains('active');
                    if (isActiveTab) loadActiveRooms(document.getElementById('activeRoomsSearch')?.value || '');
                }, 10000); // refresh mỗi 10s
            });

            const debounced = debounce((e) => loadActiveRooms(e.target.value || ''), 400);
            document.getElementById('activeRoomsSearch')?.addEventListener('input', debounced);
            document.getElementById('activeRoomsRefresh')?.addEventListener('click', () => {
                const q = document.getElementById('activeRoomsSearch')?.value || '';
                loadActiveRooms(q);
            });

            const modalEl = document.getElementById('joinLiveModal');
            modalEl?.addEventListener('shown.bs.modal', () => {
                const activeTabBtn = document.querySelector('#joinTabs .nav-link.active');
                if (activeTabBtn?.id === 'tabActive-tab') loadActiveRooms();
            });
            modalEl?.addEventListener('hidden.bs.modal', () => { clearInterval(__activeRoomsTimer); });
        });
    </script>

    @RenderSection("Scripts", required: false)
</body>
</html>